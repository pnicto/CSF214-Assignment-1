Flat profile:

Each sample counts as 0.01 seconds.
 no time accumulated

  %   cumulative   self              self     total           
 time   seconds   seconds    calls  Ts/call  Ts/call  name    
  0.00      0.00     0.00      608     0.00     0.00  __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const
  0.00      0.00     0.00      469     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const
  0.00      0.00     0.00      465     0.00     0.00  __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const
  0.00      0.00     0.00      299     0.00     0.00  std::remove_reference<char&>::type&& std::move<char&>(char&)
  0.00      0.00     0.00      273     0.00     0.00  std::char_traits<char>::assign(char&, char const&)
  0.00      0.00     0.00      232     0.00     0.00  __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++()
  0.00      0.00     0.00      203     0.00     0.00  bool __gnu_cxx::operator==<char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
  0.00      0.00     0.00      168     0.00     0.00  ParseTree::getLeftNode(ParseTree*)
  0.00      0.00     0.00      167     0.00     0.00  ParseTree::getRightNode(ParseTree*)
  0.00      0.00     0.00      159     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const
  0.00      0.00     0.00      159     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() const
  0.00      0.00     0.00      159     0.00     0.00  std::pointer_traits<char const*>::pointer_to(char const&)
  0.00      0.00     0.00      159     0.00     0.00  char const* std::__addressof<char const>(char const&)
  0.00      0.00     0.00      159     0.00     0.00  char const* std::addressof<char const>(char const&)
  0.00      0.00     0.00      144     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const
  0.00      0.00     0.00      139     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned int)
  0.00      0.00     0.00      139     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_length(unsigned int)
  0.00      0.00     0.00      138     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size() const
  0.00      0.00     0.00      134     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
  0.00      0.00     0.00      101     0.00     0.00  __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator--()
  0.00      0.00     0.00      101     0.00     0.00  decltype (std::__detail::__synth3way((declval<char*&>)(), (declval<char*&>)())) __gnu_cxx::operator<=><char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
  0.00      0.00     0.00      101     0.00     0.00  auto std::__detail::_Synth3way::operator()<char*, char*>(char* const&, char* const&) const
  0.00      0.00     0.00      101     0.00     0.00  std::__cmp_cat::__unspec::__unspec(std::__cmp_cat::__unspec*)
  0.00      0.00     0.00      101     0.00     0.00  std::operator<(std::strong_ordering, std::__cmp_cat::__unspec)
  0.00      0.00     0.00       99     0.00     0.00  std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<char> >, std::is_move_constructible<char>, std::is_move_assignable<char> >::value, void>::type std::swap<char>(char&, char&)
  0.00      0.00     0.00       99     0.00     0.00  void std::iter_swap<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
  0.00      0.00     0.00       75     0.00     0.00  __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__normal_iterator(char* const&)
  0.00      0.00     0.00       71     0.00     0.00  ParseTree::getValue()
  0.00      0.00     0.00       67     0.00     0.00  ParseTree::ParseTree(char)
  0.00      0.00     0.00       67     0.00     0.00  __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++(int)
  0.00      0.00     0.00       67     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char)
  0.00      0.00     0.00       67     0.00     0.00  long long const& std::max<long long>(long long const&, long long const&)
  0.00      0.00     0.00       66     0.00     0.00  Stack::pop()
  0.00      0.00     0.00       66     0.00     0.00  Stack::push(char)
  0.00      0.00     0.00       40     0.00     0.00  std::is_constant_evaluated()
  0.00      0.00     0.00       33     0.00     0.00  ParseTree::setLeftNode(ParseTree*)
  0.00      0.00     0.00       33     0.00     0.00  ParseTree::setRightNode(ParseTree*)
  0.00      0.00     0.00       24     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() const
  0.00      0.00     0.00       24     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator()
  0.00      0.00     0.00       22     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::length() const
  0.00      0.00     0.00       22     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::max_size() const
  0.00      0.00     0.00       22     0.00     0.00  std::allocator_traits<std::allocator<char> >::max_size(std::allocator<char> const&)
  0.00      0.00     0.00       15     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
  0.00      0.00     0.00       13     0.00     0.00  std::char_traits<char>::copy(char*, char const*, unsigned int)
  0.00      0.00     0.00       13     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int)
  0.00      0.00     0.00       12     0.00     0.00  __gnu_cxx::new_allocator<char>::deallocate(char*, unsigned int)
  0.00      0.00     0.00       12     0.00     0.00  __gnu_cxx::new_allocator<char>::allocate(unsigned int, void const*)
  0.00      0.00     0.00       12     0.00     0.00  __gnu_cxx::new_allocator<char>::_M_max_size() const
  0.00      0.00     0.00       12     0.00     0.00  std::allocator_traits<std::allocator<char> >::deallocate(std::allocator<char>&, char*, unsigned int)
  0.00      0.00     0.00       12     0.00     0.00  std::allocator_traits<std::allocator<char> >::allocate(std::allocator<char>&, unsigned int)
  0.00      0.00     0.00       12     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned int)
  0.00      0.00     0.00       12     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_capacity(unsigned int)
  0.00      0.00     0.00       12     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data(char*)
  0.00      0.00     0.00       12     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
  0.00      0.00     0.00        6     0.00     0.00  Stack::resizeArray()
  0.00      0.00     0.00        6     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
  0.00      0.00     0.00        6     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_node_allocator()
  0.00      0.00     0.00        6     0.00     0.00  std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::_M_get()
  0.00      0.00     0.00        5     0.00     0.00  std::pointer_traits<char*>::pointer_to(char&)
  0.00      0.00     0.00        5     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider()
  0.00      0.00     0.00        5     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data()
  0.00      0.00     0.00        5     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
  0.00      0.00     0.00        5     0.00     0.00  char* std::__addressof<char>(char&)
  0.00      0.00     0.00        5     0.00     0.00  char&& std::forward<char>(std::remove_reference<char>::type&)
  0.00      0.00     0.00        5     0.00     0.00  char* std::addressof<char>(char&)
  0.00      0.00     0.00        4     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char>&&)
  0.00      0.00     0.00        4     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::end()
  0.00      0.00     0.00        4     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::begin()
  0.00      0.00     0.00        4     0.00     0.00  std::remove_reference<std::allocator<char>&>::type&& std::move<std::allocator<char>&>(std::allocator<char>&)
  0.00      0.00     0.00        4     0.00     0.00  std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&)
  0.00      0.00     0.00        4     0.00     0.00  std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&)
  0.00      0.00     0.00        4     0.00     0.00  std::tuple<char&&>&& std::forward<std::tuple<char&&> >(std::remove_reference<std::tuple<char&&> >::type&)
  0.00      0.00     0.00        3     0.00     0.00  __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_ptr()
  0.00      0.00     0.00        3     0.00     0.00  __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_addr()
  0.00      0.00     0.00        3     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(unsigned int) const
  0.00      0.00     0.00        3     0.00     0.00  std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(unsigned int, unsigned int) const
  0.00      0.00     0.00        3     0.00     0.00  std::__detail::_Mod_range_hashing::operator()(unsigned int, unsigned int) const
  0.00      0.00     0.00        3     0.00     0.00  std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  0.00      0.00     0.00        3     0.00     0.00  std::__detail::_Node_iterator_base<std::pair<char const, bool>, false>::_Node_iterator_base(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  0.00      0.00     0.00        3     0.00     0.00  std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_valptr()
  0.00      0.00     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::new_allocator()
  0.00      0.00     0.00        2     0.00     0.00  __gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy(std::allocator<char> const&)
  0.00      0.00     0.00        2     0.00     0.00  bool __gnu_cxx::__is_null_pointer<char>(char*)
  0.00      0.00     0.00        2     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned int, char const&, unsigned int) const
  0.00      0.00     0.00        2     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned int, char const&, unsigned int) const
  0.00      0.00     0.00        2     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_uses_single_bucket(std::__detail::_Hash_node_base**) const
  0.00      0.00     0.00        2     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const
  0.00      0.00     0.00        2     0.00     0.00  std::hash<char>::operator()(char) const
  0.00      0.00     0.00        2     0.00     0.00  std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(char const&) const
  0.00      0.00     0.00        2     0.00     0.00  std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash() const
  0.00      0.00     0.00        2     0.00     0.00  std::__detail::_Hashtable_ebo_helper<1, std::hash<char>, true>::_M_cget() const
  0.00      0.00     0.00        2     0.00     0.00  std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > const&)
  0.00      0.00     0.00        2     0.00     0.00  std::allocator<std::__detail::_Hash_node_base*>::~allocator()
  0.00      0.00     0.00        2     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int)
  0.00      0.00     0.00        2     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets()
  0.00      0.00     0.00        2     0.00     0.00  std::_Head_base<0u, char&&, false>::_M_head(std::_Head_base<0u, char&&, false>&)
  0.00      0.00     0.00        2     0.00     0.00  std::_Head_base<0u, char&&, false>::_Head_base<char>(char&&)
  0.00      0.00     0.00        2     0.00     0.00  std::_Tuple_impl<0u, char&&>::_M_head(std::_Tuple_impl<0u, char&&>&)
  0.00      0.00     0.00        2     0.00     0.00  std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction(std::allocator<char> const&)
  0.00      0.00     0.00        2     0.00     0.00  void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*)
  0.00      0.00     0.00        2     0.00     0.00  void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)
  0.00      0.00     0.00        2     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*)
  0.00      0.00     0.00        2     0.00     0.00  void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type)
  0.00      0.00     0.00        2     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      0.00     0.00        2     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string()
  0.00      0.00     0.00        2     0.00     0.00  std::__detail::_Hash_node_base::_Hash_node_base()
  0.00      0.00     0.00        2     0.00     0.00  std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag)
  0.00      0.00     0.00        2     0.00     0.00  std::iterator_traits<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
  0.00      0.00     0.00        2     0.00     0.00  std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&)
  0.00      0.00     0.00        2     0.00     0.00  char&& std::forward<char&&>(std::remove_reference<char&&>::type&)
  0.00      0.00     0.00        2     0.00     0.00  void std::reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
  0.00      0.00     0.00        2     0.00     0.00  std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*)
  0.00      0.00     0.00        2     0.00     0.00  void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag)
  0.00      0.00     0.00        2     0.00     0.00  operator new(unsigned int, void*)
  0.00      0.00     0.00        1     0.00     0.00  getNodeHeight(ParseTree*)
  0.00      0.00     0.00        1     0.00     0.00  infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
  0.00      0.00     0.00        1     0.00     0.00  createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
  0.00      0.00     0.00        1     0.00     0.00  inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
  0.00      0.00     0.00        1     0.00     0.00  parseTreeToInfix[abi:cxx11](ParseTree*)
  0.00      0.00     0.00        1     0.00     0.00  getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*)
  0.00      0.00     0.00        1     0.00     0.00  prefixToParseTree(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
  0.00      0.00     0.00        1     0.00     0.00  getBinaryTreeHeight(ParseTree*)
  0.00      0.00     0.00        1     0.00     0.00  evaluateTreeTruthValue(ParseTree*)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  Stack::Stack()
  0.00      0.00     0.00        1     0.00     0.00  Stack::~Stack()
  0.00      0.00     0.00        1     0.00     0.00  ParseTree::~ParseTree()
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::deallocate(std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int)
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocate(unsigned int, void const*)
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::new_allocator()
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::deallocate(std::__detail::_Hash_node_base**, unsigned int)
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned int, void const*)
  0.00      0.00     0.00        1     0.00     0.00  bool __gnu_cxx::__is_null_pointer<char const>(char const*)
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::_M_max_size() const
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::_M_max_size() const
  0.00      0.00     0.00        1     0.00     0.00  std::__detail::_Hash_node<std::pair<char const, bool>, false>::_M_next() const
  0.00      0.00     0.00        1     0.00     0.00  std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::operator->() const
  0.00      0.00     0.00        1     0.00     0.00  std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_node_code_cache<false>&, unsigned int) const
  0.00      0.00     0.00        1     0.00     0.00  std::__detail::_Prime_rehash_policy::_M_state() const
  0.00      0.00     0.00        1     0.00     0.00  std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocator()
  0.00      0.00     0.00        1     0.00     0.00  std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::~allocator()
  0.00      0.00     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&)
  0.00      0.00     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::~_Scoped_node()
  0.00      0.00     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned int, std::integral_constant<bool, true>)
  0.00      0.00     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned int)
  0.00      0.00     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int, unsigned int, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int)
  0.00      0.00     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned int, std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  0.00      0.00     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::end()
  0.00      0.00     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(char const&)
  0.00      0.00     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear()
  0.00      0.00     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned int, unsigned int const&)
  0.00      0.00     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable()
  0.00      0.00     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable()
  0.00      0.00     0.00        1     0.00     0.00  std::_Tuple_impl<0u, char&&>::_Tuple_impl(std::_Tuple_impl<0u, char&&>&&)
  0.00      0.00     0.00        1     0.00     0.00  std::_Tuple_impl<0u, char&&>::_Tuple_impl<char>(char&&)
  0.00      0.00     0.00        1     0.00     0.00  std::char_traits<char>::length(char const*)
  0.00      0.00     0.00        1     0.00     0.00  std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::end()
  0.00      0.00     0.00        1     0.00     0.00  std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::find(char const&)
  0.00      0.00     0.00        1     0.00     0.00  std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::unordered_map()
  0.00      0.00     0.00        1     0.00     0.00  std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::~unordered_map()
  0.00      0.00     0.00        1     0.00     0.00  std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::operator[](char&&)
  0.00      0.00     0.00        1     0.00     0.00  std::pointer_traits<std::__detail::_Hash_node<std::pair<char const, bool>, false>*>::pointer_to(std::__detail::_Hash_node<std::pair<char const, bool>, false>&)
  0.00      0.00     0.00        1     0.00     0.00  std::pointer_traits<std::__detail::_Hash_node_base**>::pointer_to(std::__detail::_Hash_node_base*&)
  0.00      0.00     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int)
  0.00      0.00     0.00        1     0.00     0.00  void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::destroy<std::pair<char const, bool> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*)
  0.00      0.00     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, unsigned int)
  0.00      0.00     0.00        1     0.00     0.00  void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::construct<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&)
  0.00      0.00     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate(std::allocator<std::__detail::_Hash_node_base*>&, std::__detail::_Hash_node_base**, unsigned int)
  0.00      0.00     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned int)
  0.00      0.00     0.00        1     0.00     0.00  std::pair<char const, bool>::pair<char&&, 0u>(std::tuple<char&&>&, std::tuple<>&, std::_Index_tuple<0u>, std::_Index_tuple<>)
  0.00      0.00     0.00        1     0.00     0.00  std::pair<char const, bool>::pair<char&&>(std::piecewise_construct_t, std::tuple<char&&>, std::tuple<>)
  0.00      0.00     0.00        1     0.00     0.00  std::tuple<char&&>::tuple(std::tuple<char&&>&&)
  0.00      0.00     0.00        1     0.00     0.00  std::tuple<char&&>::tuple<char, true, true>(char&&)
  0.00      0.00     0.00        1     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char> const&)
  0.00      0.00     0.00        1     0.00     0.00  void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
  0.00      0.00     0.00        1     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
  0.00      0.00     0.00        1     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
  0.00      0.00     0.00        1     0.00     0.00  std::__detail::_Hash_node<std::pair<char const, bool>, false>::_Hash_node()
  0.00      0.00     0.00        1     0.00     0.00  std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&)
  0.00      0.00     0.00        1     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  0.00      0.00     0.00        1     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_buckets(unsigned int)
  0.00      0.00     0.00        1     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  0.00      0.00     0.00        1     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int)
  0.00      0.00     0.00        1     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  0.00      0.00     0.00        1     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_Hashtable_alloc()
  0.00      0.00     0.00        1     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::~_Hashtable_alloc()
  0.00      0.00     0.00        1     0.00     0.00  std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float)
  0.00      0.00     0.00        1     0.00     0.00  std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::_Hashtable_ebo_helper()
  0.00      0.00     0.00        1     0.00     0.00  std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::~_Hashtable_ebo_helper()
  0.00      0.00     0.00        1     0.00     0.00  std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&)
  0.00      0.00     0.00        1     0.00     0.00  std::__detail::operator==(std::__detail::_Node_iterator_base<std::pair<char const, bool>, false> const&, std::__detail::_Node_iterator_base<std::pair<char const, bool>, false> const&)
  0.00      0.00     0.00        1     0.00     0.00  std::iterator_traits<char const*>::difference_type std::__distance<char const*>(char const*, char const*, std::random_access_iterator_tag)
  0.00      0.00     0.00        1     0.00     0.00  void std::destroy_at<std::pair<char const, bool> >(std::pair<char const, bool>*)
  0.00      0.00     0.00        1     0.00     0.00  std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__addressof<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>&)
  0.00      0.00     0.00        1     0.00     0.00  std::__detail::_Hash_node_base** std::__addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&)
  0.00      0.00     0.00        1     0.00     0.00  char& std::__get_helper<0u, char&&>(std::_Tuple_impl<0u, char&&>&)
  0.00      0.00     0.00        1     0.00     0.00  std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__to_address<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  0.00      0.00     0.00        1     0.00     0.00  std::__detail::_Hash_node_base** std::__to_address<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base**)
  0.00      0.00     0.00        1     0.00     0.00  decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&)
  0.00      0.00     0.00        1     0.00     0.00  std::tuple<char&&> std::forward_as_tuple<char>(char&&)
  0.00      0.00     0.00        1     0.00     0.00  std::iterator_traits<char const*>::iterator_category std::__iterator_category<char const*>(char const* const&)
  0.00      0.00     0.00        1     0.00     0.00  std::tuple_element<0u, std::tuple<char&&> >::type& std::get<0u, char&&>(std::tuple<char&&>&)
  0.00      0.00     0.00        1     0.00     0.00  std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*)
  0.00      0.00     0.00        1     0.00     0.00  std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::addressof<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>&)
  0.00      0.00     0.00        1     0.00     0.00  std::__detail::_Hash_node_base** std::addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2022 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) no time propagated

index % time    self  children    called     name
                0.00    0.00     202/608         decltype (std::__detail::__synth3way((declval<char*&>)(), (declval<char*&>)())) __gnu_cxx::operator<=><char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [28]
                0.00    0.00     406/608         bool __gnu_cxx::operator==<char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [14]
[8]      0.0    0.00    0.00     608         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const [8]
-----------------------------------------------
                0.00    0.00       1/469         void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [185]
                0.00    0.00       2/469         void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [108]
                0.00    0.00       4/469         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::begin() [75]
                0.00    0.00       4/469         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::end() [74]
                0.00    0.00       4/469         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [111]
                0.00    0.00      10/469         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int) [63]
                0.00    0.00      12/469         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned int) [58]
                0.00    0.00     134/469         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [26]
                0.00    0.00     139/469         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned int) [23]
                0.00    0.00     159/469         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const [17]
[9]      0.0    0.00    0.00     469         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [9]
-----------------------------------------------
                0.00    0.00     133/465         infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [123]
                0.00    0.00     134/465         createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [124]
                0.00    0.00     198/465         void std::iter_swap<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [33]
[10]     0.0    0.00    0.00     465         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const [10]
-----------------------------------------------
                0.00    0.00       1/299         std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::operator[](char&&) [171]
                0.00    0.00       1/299         std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [200]
                0.00    0.00     297/299         std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<char> >, std::is_move_constructible<char>, std::is_move_assignable<char> >::value, void>::type std::swap<char>(char&, char&) [32]
[11]     0.0    0.00    0.00     299         std::remove_reference<char&>::type&& std::move<char&>(char&) [11]
-----------------------------------------------
                0.00    0.00     134/273         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [26]
                0.00    0.00     139/273         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned int) [23]
[12]     0.0    0.00    0.00     273         std::char_traits<char>::assign(char&, char const&) [12]
-----------------------------------------------
                0.00    0.00      99/232         void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag) [120]
                0.00    0.00     133/232         infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [123]
[13]     0.0    0.00    0.00     232         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++() [13]
-----------------------------------------------
                0.00    0.00       2/203         void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag) [120]
                0.00    0.00      67/203         createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [124]
                0.00    0.00     134/203         infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [123]
[14]     0.0    0.00    0.00     203         bool __gnu_cxx::operator==<char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [14]
                0.00    0.00     406/608         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const [8]
-----------------------------------------------
                0.00    0.00       1/168         getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [127]
                0.00    0.00      67/168         getNodeHeight(ParseTree*) [122]
                0.00    0.00     100/168         inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [125]
[15]     0.0    0.00    0.00     168         ParseTree::getLeftNode(ParseTree*) [15]
-----------------------------------------------
                0.00    0.00      67/167         getNodeHeight(ParseTree*) [122]
                0.00    0.00     100/167         inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [125]
[16]     0.0    0.00    0.00     167         ParseTree::getRightNode(ParseTree*) [16]
-----------------------------------------------
                0.00    0.00      15/159         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [50]
                0.00    0.00     144/159         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const [22]
[17]     0.0    0.00    0.00     159         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const [17]
                0.00    0.00     159/469         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [9]
                0.00    0.00     159/159         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() const [18]
-----------------------------------------------
                0.00    0.00     159/159         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const [17]
[18]     0.0    0.00    0.00     159         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() const [18]
                0.00    0.00     159/159         std::pointer_traits<char const*>::pointer_to(char const&) [19]
-----------------------------------------------
                0.00    0.00     159/159         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() const [18]
[19]     0.0    0.00    0.00     159         std::pointer_traits<char const*>::pointer_to(char const&) [19]
                0.00    0.00     159/159         char const* std::addressof<char const>(char const&) [21]
-----------------------------------------------
                0.00    0.00     159/159         char const* std::addressof<char const>(char const&) [21]
[20]     0.0    0.00    0.00     159         char const* std::__addressof<char const>(char const&) [20]
-----------------------------------------------
                0.00    0.00     159/159         std::pointer_traits<char const*>::pointer_to(char const&) [19]
[21]     0.0    0.00    0.00     159         char const* std::addressof<char const>(char const&) [21]
                0.00    0.00     159/159         char const* std::__addressof<char const>(char const&) [20]
-----------------------------------------------
                0.00    0.00      10/144         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int) [63]
                0.00    0.00     134/144         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [26]
[22]     0.0    0.00    0.00     144         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const [22]
                0.00    0.00     144/159         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const [17]
-----------------------------------------------
                0.00    0.00       1/139         void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [185]
                0.00    0.00       2/139         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string() [112]
                0.00    0.00       2/139         void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [108]
                0.00    0.00     134/139         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [26]
[23]     0.0    0.00    0.00     139         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned int) [23]
                0.00    0.00     139/139         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_length(unsigned int) [24]
                0.00    0.00     139/469         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [9]
                0.00    0.00     139/273         std::char_traits<char>::assign(char&, char const&) [12]
-----------------------------------------------
                0.00    0.00     139/139         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned int) [23]
[24]     0.0    0.00    0.00     139         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_length(unsigned int) [24]
-----------------------------------------------
                0.00    0.00       4/138         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::end() [74]
                0.00    0.00     134/138         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [26]
[25]     0.0    0.00    0.00     138         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size() const [25]
-----------------------------------------------
                0.00    0.00      67/134         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char) [38]
                0.00    0.00      67/134         inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [125]
[26]     0.0    0.00    0.00     134         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [26]
                0.00    0.00     134/138         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size() const [25]
                0.00    0.00     134/144         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const [22]
                0.00    0.00     134/469         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [9]
                0.00    0.00     134/273         std::char_traits<char>::assign(char&, char const&) [12]
                0.00    0.00     134/139         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned int) [23]
                0.00    0.00       6/6           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int) [63]
-----------------------------------------------
                0.00    0.00     101/101         void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag) [120]
[27]     0.0    0.00    0.00     101         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator--() [27]
-----------------------------------------------
                0.00    0.00     101/101         void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag) [120]
[28]     0.0    0.00    0.00     101         decltype (std::__detail::__synth3way((declval<char*&>)(), (declval<char*&>)())) __gnu_cxx::operator<=><char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [28]
                0.00    0.00     202/608         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const [8]
                0.00    0.00     101/101         auto std::__detail::_Synth3way::operator()<char*, char*>(char* const&, char* const&) const [29]
-----------------------------------------------
                0.00    0.00     101/101         decltype (std::__detail::__synth3way((declval<char*&>)(), (declval<char*&>)())) __gnu_cxx::operator<=><char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [28]
[29]     0.0    0.00    0.00     101         auto std::__detail::_Synth3way::operator()<char*, char*>(char* const&, char* const&) const [29]
-----------------------------------------------
                0.00    0.00     101/101         void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag) [120]
[30]     0.0    0.00    0.00     101         std::__cmp_cat::__unspec::__unspec(std::__cmp_cat::__unspec*) [30]
-----------------------------------------------
                0.00    0.00     101/101         void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag) [120]
[31]     0.0    0.00    0.00     101         std::operator<(std::strong_ordering, std::__cmp_cat::__unspec) [31]
-----------------------------------------------
                0.00    0.00      99/99          void std::iter_swap<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [33]
[32]     0.0    0.00    0.00      99         std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<char> >, std::is_move_constructible<char>, std::is_move_assignable<char> >::value, void>::type std::swap<char>(char&, char&) [32]
                0.00    0.00     297/299         std::remove_reference<char&>::type&& std::move<char&>(char&) [11]
-----------------------------------------------
                0.00    0.00      99/99          void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag) [120]
[33]     0.0    0.00    0.00      99         void std::iter_swap<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [33]
                0.00    0.00     198/465         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const [10]
                0.00    0.00      99/99          std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<char> >, std::is_move_constructible<char>, std::is_move_assignable<char> >::value, void>::type std::swap<char>(char&, char&) [32]
-----------------------------------------------
                0.00    0.00       4/75          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::begin() [75]
                0.00    0.00       4/75          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::end() [74]
                0.00    0.00      67/75          __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++(int) [37]
[34]     0.0    0.00    0.00      75         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__normal_iterator(char* const&) [34]
-----------------------------------------------
                0.00    0.00       4/71          getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [127]
                0.00    0.00      67/71          inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [125]
[35]     0.0    0.00    0.00      71         ParseTree::getValue() [35]
-----------------------------------------------
                0.00    0.00      67/67          createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [124]
[36]     0.0    0.00    0.00      67         ParseTree::ParseTree(char) [36]
-----------------------------------------------
                0.00    0.00      67/67          createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [124]
[37]     0.0    0.00    0.00      67         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++(int) [37]
                0.00    0.00      67/75          __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__normal_iterator(char* const&) [34]
-----------------------------------------------
                0.00    0.00      67/67          infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [123]
[38]     0.0    0.00    0.00      67         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char) [38]
                0.00    0.00      67/134         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [26]
-----------------------------------------------
                0.00    0.00      67/67          getNodeHeight(ParseTree*) [122]
[39]     0.0    0.00    0.00      67         long long const& std::max<long long>(long long const&, long long const&) [39]
-----------------------------------------------
                0.00    0.00      66/66          infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [123]
[40]     0.0    0.00    0.00      66         Stack::pop() [40]
-----------------------------------------------
                0.00    0.00      66/66          infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [123]
[41]     0.0    0.00    0.00      66         Stack::push(char) [41]
                0.00    0.00       6/6           Stack::resizeArray() [62]
-----------------------------------------------
                0.00    0.00       1/40          std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, unsigned int) [176]
                0.00    0.00       1/40          std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [174]
                0.00    0.00       1/40          std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate(std::allocator<std::__detail::_Hash_node_base*>&, std::__detail::_Hash_node_base**, unsigned int) [178]
                0.00    0.00       1/40          std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned int) [179]
                0.00    0.00      12/40          std::char_traits<char>::copy(char*, char const*, unsigned int) [51]
                0.00    0.00      12/40          std::allocator_traits<std::allocator<char> >::allocate(std::allocator<char>&, unsigned int) [57]
                0.00    0.00      12/40          std::allocator_traits<std::allocator<char> >::deallocate(std::allocator<char>&, char*, unsigned int) [56]
[42]     0.0    0.00    0.00      40         std::is_constant_evaluated() [42]
-----------------------------------------------
                0.00    0.00      33/33          createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [124]
[43]     0.0    0.00    0.00      33         ParseTree::setLeftNode(ParseTree*) [43]
-----------------------------------------------
                0.00    0.00      33/33          createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [124]
[44]     0.0    0.00    0.00      33         ParseTree::setRightNode(ParseTree*) [44]
-----------------------------------------------
                0.00    0.00       2/24          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [111]
                0.00    0.00      22/24          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::max_size() const [48]
[45]     0.0    0.00    0.00      24         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() const [45]
-----------------------------------------------
                0.00    0.00      12/24          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [61]
                0.00    0.00      12/24          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned int) [58]
[46]     0.0    0.00    0.00      24         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() [46]
-----------------------------------------------
                0.00    0.00       2/22          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [111]
                0.00    0.00      20/22          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int) [63]
[47]     0.0    0.00    0.00      22         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::length() const [47]
-----------------------------------------------
                0.00    0.00      22/22          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [61]
[48]     0.0    0.00    0.00      22         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::max_size() const [48]
                0.00    0.00      22/24          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() const [45]
                0.00    0.00      22/22          std::allocator_traits<std::allocator<char> >::max_size(std::allocator<char> const&) [49]
-----------------------------------------------
                0.00    0.00      22/22          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::max_size() const [48]
[49]     0.0    0.00    0.00      22         std::allocator_traits<std::allocator<char> >::max_size(std::allocator<char> const&) [49]
-----------------------------------------------
                0.00    0.00       5/15          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() [69]
                0.00    0.00      10/15          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int) [63]
[50]     0.0    0.00    0.00      15         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [50]
                0.00    0.00      15/159         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const [17]
                0.00    0.00      12/12          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned int) [58]
-----------------------------------------------
                0.00    0.00      13/13          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int) [52]
[51]     0.0    0.00    0.00      13         std::char_traits<char>::copy(char*, char const*, unsigned int) [51]
                0.00    0.00      12/40          std::is_constant_evaluated() [42]
-----------------------------------------------
                0.00    0.00       1/13          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*) [186]
                0.00    0.00       2/13          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*) [109]
                0.00    0.00      10/13          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int) [63]
[52]     0.0    0.00    0.00      13         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int) [52]
                0.00    0.00      13/13          std::char_traits<char>::copy(char*, char const*, unsigned int) [51]
-----------------------------------------------
                0.00    0.00      12/12          std::allocator_traits<std::allocator<char> >::deallocate(std::allocator<char>&, char*, unsigned int) [56]
[53]     0.0    0.00    0.00      12         __gnu_cxx::new_allocator<char>::deallocate(char*, unsigned int) [53]
-----------------------------------------------
                0.00    0.00      12/12          std::allocator_traits<std::allocator<char> >::allocate(std::allocator<char>&, unsigned int) [57]
[54]     0.0    0.00    0.00      12         __gnu_cxx::new_allocator<char>::allocate(unsigned int, void const*) [54]
                0.00    0.00      12/12          __gnu_cxx::new_allocator<char>::_M_max_size() const [55]
-----------------------------------------------
                0.00    0.00      12/12          __gnu_cxx::new_allocator<char>::allocate(unsigned int, void const*) [54]
[55]     0.0    0.00    0.00      12         __gnu_cxx::new_allocator<char>::_M_max_size() const [55]
-----------------------------------------------
                0.00    0.00      12/12          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned int) [58]
[56]     0.0    0.00    0.00      12         std::allocator_traits<std::allocator<char> >::deallocate(std::allocator<char>&, char*, unsigned int) [56]
                0.00    0.00      12/40          std::is_constant_evaluated() [42]
                0.00    0.00      12/12          __gnu_cxx::new_allocator<char>::deallocate(char*, unsigned int) [53]
-----------------------------------------------
                0.00    0.00      12/12          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [61]
[57]     0.0    0.00    0.00      12         std::allocator_traits<std::allocator<char> >::allocate(std::allocator<char>&, unsigned int) [57]
                0.00    0.00      12/40          std::is_constant_evaluated() [42]
                0.00    0.00      12/12          __gnu_cxx::new_allocator<char>::allocate(unsigned int, void const*) [54]
-----------------------------------------------
                0.00    0.00      12/12          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [50]
[58]     0.0    0.00    0.00      12         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned int) [58]
                0.00    0.00      12/469         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [9]
                0.00    0.00      12/24          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() [46]
                0.00    0.00      12/12          std::allocator_traits<std::allocator<char> >::deallocate(std::allocator<char>&, char*, unsigned int) [56]
-----------------------------------------------
                0.00    0.00       2/12          void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [108]
                0.00    0.00      10/12          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int) [63]
[59]     0.0    0.00    0.00      12         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_capacity(unsigned int) [59]
-----------------------------------------------
                0.00    0.00       2/12          void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [108]
                0.00    0.00      10/12          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int) [63]
[60]     0.0    0.00    0.00      12         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data(char*) [60]
-----------------------------------------------
                0.00    0.00       2/12          void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [108]
                0.00    0.00      10/12          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int) [63]
[61]     0.0    0.00    0.00      12         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [61]
                0.00    0.00      22/22          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::max_size() const [48]
                0.00    0.00      12/24          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() [46]
                0.00    0.00      12/12          std::allocator_traits<std::allocator<char> >::allocate(std::allocator<char>&, unsigned int) [57]
-----------------------------------------------
                0.00    0.00       6/6           Stack::push(char) [41]
[62]     0.0    0.00    0.00       6         Stack::resizeArray() [62]
-----------------------------------------------
                0.00    0.00       6/6           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [26]
[63]     0.0    0.00    0.00       6         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int) [63]
                0.00    0.00      20/22          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::length() const [47]
                0.00    0.00      10/144         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const [22]
                0.00    0.00      10/12          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [61]
                0.00    0.00      10/469         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [9]
                0.00    0.00      10/13          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int) [52]
                0.00    0.00      10/15          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [50]
                0.00    0.00      10/12          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data(char*) [60]
                0.00    0.00      10/12          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_capacity(unsigned int) [59]
-----------------------------------------------
                0.00    0.00       1/6           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [190]
                0.00    0.00       1/6           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int) [193]
                0.00    0.00       1/6           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [194]
                0.00    0.00       1/6           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_buckets(unsigned int) [191]
                0.00    0.00       2/6           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [189]
[64]     0.0    0.00    0.00       6         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_node_allocator() [64]
                0.00    0.00       6/6           std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::_M_get() [65]
-----------------------------------------------
                0.00    0.00       6/6           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_node_allocator() [64]
[65]     0.0    0.00    0.00       6         std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::_M_get() [65]
-----------------------------------------------
                0.00    0.00       5/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() [68]
[66]     0.0    0.00    0.00       5         std::pointer_traits<char*>::pointer_to(char&) [66]
                0.00    0.00       5/5           char* std::addressof<char>(char&) [72]
-----------------------------------------------
                0.00    0.00       5/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() [69]
[67]     0.0    0.00    0.00       5         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider() [67]
-----------------------------------------------
                0.00    0.00       1/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [187]
                0.00    0.00       2/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string() [112]
                0.00    0.00       2/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [111]
[68]     0.0    0.00    0.00       5         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() [68]
                0.00    0.00       5/5           std::pointer_traits<char*>::pointer_to(char&) [66]
-----------------------------------------------
                0.00    0.00       5/5           main [6]
[69]     0.0    0.00    0.00       5         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() [69]
                0.00    0.00       5/15          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [50]
                0.00    0.00       5/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider() [67]
-----------------------------------------------
                0.00    0.00       5/5           char* std::addressof<char>(char&) [72]
[70]     0.0    0.00    0.00       5         char* std::__addressof<char>(char&) [70]
-----------------------------------------------
                0.00    0.00       1/5           std::tuple<char&&> std::forward_as_tuple<char>(char&&) [210]
                0.00    0.00       1/5           std::tuple<char&&>::tuple<char, true, true>(char&&) [183]
                0.00    0.00       1/5           std::_Tuple_impl<0u, char&&>::_Tuple_impl<char>(char&&) [165]
                0.00    0.00       2/5           std::_Head_base<0u, char&&, false>::_Head_base<char>(char&&) [104]
[71]     0.0    0.00    0.00       5         char&& std::forward<char>(std::remove_reference<char>::type&) [71]
-----------------------------------------------
                0.00    0.00       5/5           std::pointer_traits<char*>::pointer_to(char&) [66]
[72]     0.0    0.00    0.00       5         char* std::addressof<char>(char&) [72]
                0.00    0.00       5/5           char* std::__addressof<char>(char&) [70]
-----------------------------------------------
                0.00    0.00       2/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string() [112]
                0.00    0.00       2/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [111]
[73]     0.0    0.00    0.00       4         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char>&&) [73]
                0.00    0.00       4/4           std::remove_reference<std::allocator<char>&>::type&& std::move<std::allocator<char>&>(std::allocator<char>&) [76]
-----------------------------------------------
                0.00    0.00       1/4           prefixToParseTree(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [128]
                0.00    0.00       3/4           infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [123]
[74]     0.0    0.00    0.00       4         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::end() [74]
                0.00    0.00       4/469         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [9]
                0.00    0.00       4/138         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size() const [25]
                0.00    0.00       4/75          __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__normal_iterator(char* const&) [34]
-----------------------------------------------
                0.00    0.00       1/4           prefixToParseTree(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [128]
                0.00    0.00       3/4           infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [123]
[75]     0.0    0.00    0.00       4         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::begin() [75]
                0.00    0.00       4/469         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [9]
                0.00    0.00       4/75          __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__normal_iterator(char* const&) [34]
-----------------------------------------------
                0.00    0.00       4/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char>&&) [73]
[76]     0.0    0.00    0.00       4         std::remove_reference<std::allocator<char>&>::type&& std::move<std::allocator<char>&>(std::allocator<char>&) [76]
-----------------------------------------------
                0.00    0.00       1/4           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [152]
                0.00    0.00       1/4           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [189]
                0.00    0.00       1/4           decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [209]
                0.00    0.00       1/4           void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::construct<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [177]
[77]     0.0    0.00    0.00       4         std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&) [77]
-----------------------------------------------
                0.00    0.00       1/4           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [152]
                0.00    0.00       1/4           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [189]
                0.00    0.00       1/4           decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [209]
                0.00    0.00       1/4           void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::construct<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [177]
[78]     0.0    0.00    0.00       4         std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&) [78]
-----------------------------------------------
                0.00    0.00       1/4           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [152]
                0.00    0.00       1/4           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [189]
                0.00    0.00       1/4           decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [209]
                0.00    0.00       1/4           void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::construct<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [177]
[79]     0.0    0.00    0.00       4         std::tuple<char&&>&& std::forward<std::tuple<char&&> >(std::remove_reference<std::tuple<char&&> >::type&) [79]
-----------------------------------------------
                0.00    0.00       3/3           std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_valptr() [87]
[80]     0.0    0.00    0.00       3         __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_ptr() [80]
                0.00    0.00       3/3           __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_addr() [81]
-----------------------------------------------
                0.00    0.00       3/3           __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_ptr() [80]
[81]     0.0    0.00    0.00       3         __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_addr() [81]
-----------------------------------------------
                0.00    0.00       1/3           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(char const&) [159]
                0.00    0.00       1/3           std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [200]
                0.00    0.00       1/3           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int, unsigned int, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [156]
[82]     0.0    0.00    0.00       3         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(unsigned int) const [82]
                0.00    0.00       3/3           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(unsigned int, unsigned int) const [83]
-----------------------------------------------
                0.00    0.00       3/3           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(unsigned int) const [82]
[83]     0.0    0.00    0.00       3         std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(unsigned int, unsigned int) const [83]
                0.00    0.00       3/3           std::__detail::_Mod_range_hashing::operator()(unsigned int, unsigned int) const [84]
-----------------------------------------------
                0.00    0.00       3/3           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(unsigned int, unsigned int) const [83]
[84]     0.0    0.00    0.00       3         std::__detail::_Mod_range_hashing::operator()(unsigned int, unsigned int) const [84]
-----------------------------------------------
                0.00    0.00       1/3           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(char const&) [159]
                0.00    0.00       1/3           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::end() [158]
                0.00    0.00       1/3           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int, unsigned int, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [156]
[85]     0.0    0.00    0.00       3         std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [85]
                0.00    0.00       3/3           std::__detail::_Node_iterator_base<std::pair<char const, bool>, false>::_Node_iterator_base(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [86]
-----------------------------------------------
                0.00    0.00       3/3           std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [85]
[86]     0.0    0.00    0.00       3         std::__detail::_Node_iterator_base<std::pair<char const, bool>, false>::_Node_iterator_base(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [86]
-----------------------------------------------
                0.00    0.00       1/3           std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::operator->() const [147]
                0.00    0.00       1/3           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [189]
                0.00    0.00       1/3           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [190]
[87]     0.0    0.00    0.00       3         std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_valptr() [87]
                0.00    0.00       3/3           __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_ptr() [80]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > const&) [99]
[88]     0.0    0.00    0.00       2         __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::new_allocator() [88]
-----------------------------------------------
                0.00    0.00       2/2           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [111]
[89]     0.0    0.00    0.00       2         __gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy(std::allocator<char> const&) [89]
                0.00    0.00       2/2           std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction(std::allocator<char> const&) [106]
-----------------------------------------------
                0.00    0.00       2/2           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [108]
[90]     0.0    0.00    0.00       2         bool __gnu_cxx::__is_null_pointer<char>(char*) [90]
-----------------------------------------------
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(char const&) [159]
                0.00    0.00       1/2           std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [200]
[91]     0.0    0.00    0.00       2         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned int, char const&, unsigned int) const [91]
                0.00    0.00       2/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned int, char const&, unsigned int) const [92]
-----------------------------------------------
                0.00    0.00       2/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned int, char const&, unsigned int) const [91]
[92]     0.0    0.00    0.00       2         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned int, char const&, unsigned int) const [92]
-----------------------------------------------
                0.00    0.00       2/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int) [101]
[93]     0.0    0.00    0.00       2         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_uses_single_bucket(std::__detail::_Hash_node_base**) const [93]
-----------------------------------------------
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [160]
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned int, std::integral_constant<bool, true>) [154]
[94]     0.0    0.00    0.00       2         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const [94]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(char const&) const [96]
[95]     0.0    0.00    0.00       2         std::hash<char>::operator()(char) const [95]
-----------------------------------------------
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(char const&) [159]
                0.00    0.00       1/2           std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [200]
[96]     0.0    0.00    0.00       2         std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(char const&) const [96]
                0.00    0.00       2/2           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash() const [97]
                0.00    0.00       2/2           std::hash<char>::operator()(char) const [95]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(char const&) const [96]
[97]     0.0    0.00    0.00       2         std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash() const [97]
                0.00    0.00       2/2           std::__detail::_Hashtable_ebo_helper<1, std::hash<char>, true>::_M_cget() const [98]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash() const [97]
[98]     0.0    0.00    0.00       2         std::__detail::_Hashtable_ebo_helper<1, std::hash<char>, true>::_M_cget() const [98]
-----------------------------------------------
                0.00    0.00       1/2           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int) [193]
                0.00    0.00       1/2           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_buckets(unsigned int) [191]
[99]     0.0    0.00    0.00       2         std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > const&) [99]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::new_allocator() [88]
-----------------------------------------------
                0.00    0.00       1/2           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int) [193]
                0.00    0.00       1/2           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_buckets(unsigned int) [191]
[100]    0.0    0.00    0.00       2         std::allocator<std::__detail::_Hash_node_base*>::~allocator() [100]
-----------------------------------------------
                0.00    0.00       2/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets() [102]
[101]    0.0    0.00    0.00       2         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int) [101]
                0.00    0.00       2/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_uses_single_bucket(std::__detail::_Hash_node_base**) const [93]
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int) [193]
-----------------------------------------------
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [163]
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned int, std::integral_constant<bool, true>) [154]
[102]    0.0    0.00    0.00       2         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets() [102]
                0.00    0.00       2/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int) [101]
-----------------------------------------------
                0.00    0.00       2/2           std::_Tuple_impl<0u, char&&>::_M_head(std::_Tuple_impl<0u, char&&>&) [105]
[103]    0.0    0.00    0.00       2         std::_Head_base<0u, char&&, false>::_M_head(std::_Head_base<0u, char&&, false>&) [103]
-----------------------------------------------
                0.00    0.00       1/2           std::_Tuple_impl<0u, char&&>::_Tuple_impl<char>(char&&) [165]
                0.00    0.00       1/2           std::_Tuple_impl<0u, char&&>::_Tuple_impl(std::_Tuple_impl<0u, char&&>&&) [164]
[104]    0.0    0.00    0.00       2         std::_Head_base<0u, char&&, false>::_Head_base<char>(char&&) [104]
                0.00    0.00       2/5           char&& std::forward<char>(std::remove_reference<char>::type&) [71]
-----------------------------------------------
                0.00    0.00       1/2           std::_Tuple_impl<0u, char&&>::_Tuple_impl(std::_Tuple_impl<0u, char&&>&&) [164]
                0.00    0.00       1/2           char& std::__get_helper<0u, char&&>(std::_Tuple_impl<0u, char&&>&) [206]
[105]    0.0    0.00    0.00       2         std::_Tuple_impl<0u, char&&>::_M_head(std::_Tuple_impl<0u, char&&>&) [105]
                0.00    0.00       2/2           std::_Head_base<0u, char&&, false>::_M_head(std::_Head_base<0u, char&&, false>&) [103]
-----------------------------------------------
                0.00    0.00       2/2           __gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy(std::allocator<char> const&) [89]
[106]    0.0    0.00    0.00       2         std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction(std::allocator<char> const&) [106]
-----------------------------------------------
                0.00    0.00       2/2           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [111]
[107]    0.0    0.00    0.00       2         void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*) [107]
                0.00    0.00       2/2           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type) [110]
-----------------------------------------------
                0.00    0.00       2/2           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type) [110]
[108]    0.0    0.00    0.00       2         void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [108]
                0.00    0.00       2/2           bool __gnu_cxx::__is_null_pointer<char>(char*) [90]
                0.00    0.00       2/2           std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*) [119]
                0.00    0.00       2/12          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [61]
                0.00    0.00       2/12          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data(char*) [60]
                0.00    0.00       2/12          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_capacity(unsigned int) [59]
                0.00    0.00       2/469         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [9]
                0.00    0.00       2/2           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*) [109]
                0.00    0.00       2/139         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned int) [23]
-----------------------------------------------
                0.00    0.00       2/2           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [108]
[109]    0.0    0.00    0.00       2         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*) [109]
                0.00    0.00       2/13          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int) [52]
-----------------------------------------------
                0.00    0.00       2/2           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*) [107]
[110]    0.0    0.00    0.00       2         void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type) [110]
                0.00    0.00       2/2           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [108]
-----------------------------------------------
                0.00    0.00       2/2           main [6]
[111]    0.0    0.00    0.00       2         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [111]
                0.00    0.00       4/469         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [9]
                0.00    0.00       2/24          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() const [45]
                0.00    0.00       2/2           __gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy(std::allocator<char> const&) [89]
                0.00    0.00       2/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() [68]
                0.00    0.00       2/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char>&&) [73]
                0.00    0.00       2/22          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::length() const [47]
                0.00    0.00       2/2           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*) [107]
-----------------------------------------------
                0.00    0.00       1/2           infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [123]
                0.00    0.00       1/2           main [6]
[112]    0.0    0.00    0.00       2         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string() [112]
                0.00    0.00       2/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() [68]
                0.00    0.00       2/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char>&&) [73]
                0.00    0.00       2/139         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned int) [23]
-----------------------------------------------
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable() [162]
                0.00    0.00       1/2           std::__detail::_Hash_node<std::pair<char const, bool>, false>::_Hash_node() [188]
[113]    0.0    0.00    0.00       2         std::__detail::_Hash_node_base::_Hash_node_base() [113]
-----------------------------------------------
                0.00    0.00       2/2           std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*) [119]
[114]    0.0    0.00    0.00       2         std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag) [114]
-----------------------------------------------
                0.00    0.00       2/2           void std::reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [118]
[115]    0.0    0.00    0.00       2         std::iterator_traits<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [115]
-----------------------------------------------
                0.00    0.00       2/2           std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*) [119]
[116]    0.0    0.00    0.00       2         std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&) [116]
-----------------------------------------------
                0.00    0.00       1/2           std::_Tuple_impl<0u, char&&>::_Tuple_impl(std::_Tuple_impl<0u, char&&>&&) [164]
                0.00    0.00       1/2           std::pair<char const, bool>::pair<char&&, 0u>(std::tuple<char&&>&, std::tuple<>&, std::_Index_tuple<0u>, std::_Index_tuple<>) [180]
[117]    0.0    0.00    0.00       2         char&& std::forward<char&&>(std::remove_reference<char&&>::type&) [117]
-----------------------------------------------
                0.00    0.00       2/2           infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [123]
[118]    0.0    0.00    0.00       2         void std::reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [118]
                0.00    0.00       2/2           std::iterator_traits<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [115]
                0.00    0.00       2/2           void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag) [120]
-----------------------------------------------
                0.00    0.00       2/2           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [108]
[119]    0.0    0.00    0.00       2         std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*) [119]
                0.00    0.00       2/2           std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&) [116]
                0.00    0.00       2/2           std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag) [114]
-----------------------------------------------
                0.00    0.00       2/2           void std::reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [118]
[120]    0.0    0.00    0.00       2         void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag) [120]
                0.00    0.00     101/101         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator--() [27]
                0.00    0.00     101/101         std::__cmp_cat::__unspec::__unspec(std::__cmp_cat::__unspec*) [30]
                0.00    0.00     101/101         decltype (std::__detail::__synth3way((declval<char*&>)(), (declval<char*&>)())) __gnu_cxx::operator<=><char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [28]
                0.00    0.00     101/101         std::operator<(std::strong_ordering, std::__cmp_cat::__unspec) [31]
                0.00    0.00      99/99          void std::iter_swap<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [33]
                0.00    0.00      99/232         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++() [13]
                0.00    0.00       2/203         bool __gnu_cxx::operator==<char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [14]
-----------------------------------------------
                0.00    0.00       1/2           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [189]
                0.00    0.00       1/2           decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [209]
[121]    0.0    0.00    0.00       2         operator new(unsigned int, void*) [121]
-----------------------------------------------
                                 134             getNodeHeight(ParseTree*) [122]
                0.00    0.00       1/1           getBinaryTreeHeight(ParseTree*) [129]
[122]    0.0    0.00    0.00       1+134     getNodeHeight(ParseTree*) [122]
                0.00    0.00      67/167         ParseTree::getRightNode(ParseTree*) [16]
                0.00    0.00      67/168         ParseTree::getLeftNode(ParseTree*) [15]
                0.00    0.00      67/67          long long const& std::max<long long>(long long const&, long long const&) [39]
                                 134             getNodeHeight(ParseTree*) [122]
-----------------------------------------------
                0.00    0.00       1/1           main [6]
[123]    0.0    0.00    0.00       1         infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [123]
                0.00    0.00     134/203         bool __gnu_cxx::operator==<char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [14]
                0.00    0.00     133/465         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const [10]
                0.00    0.00     133/232         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++() [13]
                0.00    0.00      67/67          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char) [38]
                0.00    0.00      66/66          Stack::push(char) [41]
                0.00    0.00      66/66          Stack::pop() [40]
                0.00    0.00       3/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::end() [74]
                0.00    0.00       3/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::begin() [75]
                0.00    0.00       2/2           void std::reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [118]
                0.00    0.00       1/1           Stack::Stack() [135]
                0.00    0.00       1/2           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string() [112]
                0.00    0.00       1/1           Stack::~Stack() [136]
-----------------------------------------------
                                  66             createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [124]
                0.00    0.00       1/1           prefixToParseTree(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [128]
[124]    0.0    0.00    0.00       1+66      createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [124]
                0.00    0.00     134/465         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const [10]
                0.00    0.00      67/203         bool __gnu_cxx::operator==<char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [14]
                0.00    0.00      67/67          ParseTree::ParseTree(char) [36]
                0.00    0.00      67/67          __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++(int) [37]
                0.00    0.00      33/33          ParseTree::setLeftNode(ParseTree*) [43]
                0.00    0.00      33/33          ParseTree::setRightNode(ParseTree*) [44]
                                  66             createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [124]
-----------------------------------------------
                                  66             inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [125]
                0.00    0.00       1/1           parseTreeToInfix[abi:cxx11](ParseTree*) [126]
[125]    0.0    0.00    0.00       1+66      inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [125]
                0.00    0.00     100/168         ParseTree::getLeftNode(ParseTree*) [15]
                0.00    0.00     100/167         ParseTree::getRightNode(ParseTree*) [16]
                0.00    0.00      67/71          ParseTree::getValue() [35]
                0.00    0.00      67/134         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [26]
                                  66             inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [125]
-----------------------------------------------
                0.00    0.00       1/1           main [6]
[126]    0.0    0.00    0.00       1         parseTreeToInfix[abi:cxx11](ParseTree*) [126]
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [187]
                0.00    0.00       1/1           inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [125]
-----------------------------------------------
                                   1             getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [127]
                0.00    0.00       1/1           evaluateTreeTruthValue(ParseTree*) [130]
[127]    0.0    0.00    0.00       1+1       getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [127]
                0.00    0.00       4/71          ParseTree::getValue() [35]
                0.00    0.00       1/168         ParseTree::getLeftNode(ParseTree*) [15]
                0.00    0.00       1/1           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::end() [167]
                0.00    0.00       1/1           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::find(char const&) [168]
                0.00    0.00       1/1           std::__detail::operator==(std::__detail::_Node_iterator_base<std::pair<char const, bool>, false> const&, std::__detail::_Node_iterator_base<std::pair<char const, bool>, false> const&) [201]
                0.00    0.00       1/1           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::operator[](char&&) [171]
                                   1             getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [127]
-----------------------------------------------
                0.00    0.00       1/1           main [6]
[128]    0.0    0.00    0.00       1         prefixToParseTree(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [128]
                0.00    0.00       1/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::begin() [75]
                0.00    0.00       1/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::end() [74]
                0.00    0.00       1/1           createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [124]
-----------------------------------------------
                0.00    0.00       1/1           main [6]
[129]    0.0    0.00    0.00       1         getBinaryTreeHeight(ParseTree*) [129]
                0.00    0.00       1/1           getNodeHeight(ParseTree*) [122]
-----------------------------------------------
                0.00    0.00       1/1           main [6]
[130]    0.0    0.00    0.00       1         evaluateTreeTruthValue(ParseTree*) [130]
                0.00    0.00       1/1           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::unordered_map() [169]
                0.00    0.00       1/1           getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [127]
                0.00    0.00       1/1           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::~unordered_map() [170]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z13infixToPrefixNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE [216]
[131]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [131]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_main [219]
[132]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [132]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN5Stack11resizeArrayEv [217]
[133]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [133]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN9ParseTreeC2Ec [218]
[134]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [134]
-----------------------------------------------
                0.00    0.00       1/1           infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [123]
[135]    0.0    0.00    0.00       1         Stack::Stack() [135]
-----------------------------------------------
                0.00    0.00       1/1           infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [123]
[136]    0.0    0.00    0.00       1         Stack::~Stack() [136]
-----------------------------------------------
                                  66             ParseTree::~ParseTree() [137]
                0.00    0.00       1/1           main [6]
[137]    0.0    0.00    0.00       1+66      ParseTree::~ParseTree() [137]
                                  66             ParseTree::~ParseTree() [137]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [174]
[138]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::deallocate(std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [138]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, unsigned int) [176]
[139]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocate(unsigned int, void const*) [139]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::_M_max_size() const [144]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocator() [150]
[140]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::new_allocator() [140]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate(std::allocator<std::__detail::_Hash_node_base*>&, std::__detail::_Hash_node_base**, unsigned int) [178]
[141]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::deallocate(std::__detail::_Hash_node_base**, unsigned int) [141]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned int) [179]
[142]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned int, void const*) [142]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::_M_max_size() const [145]
-----------------------------------------------
                0.00    0.00       1/1           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [185]
[143]    0.0    0.00    0.00       1         bool __gnu_cxx::__is_null_pointer<char const>(char const*) [143]
-----------------------------------------------
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocate(unsigned int, void const*) [139]
[144]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::_M_max_size() const [144]
-----------------------------------------------
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned int, void const*) [142]
[145]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::_M_max_size() const [145]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [192]
[146]    0.0    0.00    0.00       1         std::__detail::_Hash_node<std::pair<char const, bool>, false>::_M_next() const [146]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [200]
[147]    0.0    0.00    0.00       1         std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::operator->() const [147]
                0.00    0.00       1/3           std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_valptr() [87]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int, unsigned int, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [156]
[148]    0.0    0.00    0.00       1         std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_node_code_cache<false>&, unsigned int) const [148]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int, unsigned int, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [156]
[149]    0.0    0.00    0.00       1         std::__detail::_Prime_rehash_policy::_M_state() const [149]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::_Hashtable_ebo_helper() [198]
[150]    0.0    0.00    0.00       1         std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocator() [150]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::new_allocator() [140]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::~_Hashtable_ebo_helper() [199]
[151]    0.0    0.00    0.00       1         std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::~allocator() [151]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [200]
[152]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [152]
                0.00    0.00       1/4           std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&) [78]
                0.00    0.00       1/4           std::tuple<char&&>&& std::forward<std::tuple<char&&> >(std::remove_reference<std::tuple<char&&> >::type&) [79]
                0.00    0.00       1/4           std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&) [77]
                0.00    0.00       1/1           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [189]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [200]
[153]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::~_Scoped_node() [153]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned int, unsigned int const&) [161]
[154]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned int, std::integral_constant<bool, true>) [154]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned int) [155]
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const [94]
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets() [102]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned int, std::integral_constant<bool, true>) [154]
[155]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned int) [155]
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_buckets(unsigned int) [191]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [200]
[156]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int, unsigned int, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [156]
                0.00    0.00       1/1           std::__detail::_Prime_rehash_policy::_M_state() const [149]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned int, unsigned int const&) [161]
                0.00    0.00       1/3           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(unsigned int) const [82]
                0.00    0.00       1/1           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_node_code_cache<false>&, unsigned int) const [148]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned int, std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [157]
                0.00    0.00       1/3           std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [85]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int, unsigned int, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [156]
[157]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned int, std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [157]
-----------------------------------------------
                0.00    0.00       1/1           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::end() [167]
[158]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::end() [158]
                0.00    0.00       1/3           std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [85]
-----------------------------------------------
                0.00    0.00       1/1           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::find(char const&) [168]
[159]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(char const&) [159]
                0.00    0.00       1/2           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(char const&) const [96]
                0.00    0.00       1/3           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(unsigned int) const [82]
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned int, char const&, unsigned int) const [91]
                0.00    0.00       1/3           std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [85]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [163]
[160]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [160]
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const [94]
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [192]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int, unsigned int, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [156]
[161]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned int, unsigned int const&) [161]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned int, std::integral_constant<bool, true>) [154]
-----------------------------------------------
                0.00    0.00       1/1           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::unordered_map() [169]
[162]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable() [162]
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_Hashtable_alloc() [195]
                0.00    0.00       1/2           std::__detail::_Hash_node_base::_Hash_node_base() [113]
                0.00    0.00       1/1           std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float) [197]
-----------------------------------------------
                0.00    0.00       1/1           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::~unordered_map() [170]
[163]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [163]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [160]
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets() [102]
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::~_Hashtable_alloc() [196]
-----------------------------------------------
                0.00    0.00       1/1           std::tuple<char&&>::tuple(std::tuple<char&&>&&) [182]
[164]    0.0    0.00    0.00       1         std::_Tuple_impl<0u, char&&>::_Tuple_impl(std::_Tuple_impl<0u, char&&>&&) [164]
                0.00    0.00       1/2           std::_Tuple_impl<0u, char&&>::_M_head(std::_Tuple_impl<0u, char&&>&) [105]
                0.00    0.00       1/2           char&& std::forward<char&&>(std::remove_reference<char&&>::type&) [117]
                0.00    0.00       1/2           std::_Head_base<0u, char&&, false>::_Head_base<char>(char&&) [104]
-----------------------------------------------
                0.00    0.00       1/1           std::tuple<char&&>::tuple<char, true, true>(char&&) [183]
[165]    0.0    0.00    0.00       1         std::_Tuple_impl<0u, char&&>::_Tuple_impl<char>(char&&) [165]
                0.00    0.00       1/5           char&& std::forward<char>(std::remove_reference<char>::type&) [71]
                0.00    0.00       1/2           std::_Head_base<0u, char&&, false>::_Head_base<char>(char&&) [104]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [187]
[166]    0.0    0.00    0.00       1         std::char_traits<char>::length(char const*) [166]
-----------------------------------------------
                0.00    0.00       1/1           getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [127]
[167]    0.0    0.00    0.00       1         std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::end() [167]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::end() [158]
-----------------------------------------------
                0.00    0.00       1/1           getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [127]
[168]    0.0    0.00    0.00       1         std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::find(char const&) [168]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(char const&) [159]
-----------------------------------------------
                0.00    0.00       1/1           evaluateTreeTruthValue(ParseTree*) [130]
[169]    0.0    0.00    0.00       1         std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::unordered_map() [169]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable() [162]
-----------------------------------------------
                0.00    0.00       1/1           evaluateTreeTruthValue(ParseTree*) [130]
[170]    0.0    0.00    0.00       1         std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::~unordered_map() [170]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [163]
-----------------------------------------------
                0.00    0.00       1/1           getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [127]
[171]    0.0    0.00    0.00       1         std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::operator[](char&&) [171]
                0.00    0.00       1/299         std::remove_reference<char&>::type&& std::move<char&>(char&) [11]
                0.00    0.00       1/1           std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [200]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [194]
[172]    0.0    0.00    0.00       1         std::pointer_traits<std::__detail::_Hash_node<std::pair<char const, bool>, false>*>::pointer_to(std::__detail::_Hash_node<std::pair<char const, bool>, false>&) [172]
                0.00    0.00       1/1           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::addressof<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>&) [214]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int) [193]
[173]    0.0    0.00    0.00       1         std::pointer_traits<std::__detail::_Hash_node_base**>::pointer_to(std::__detail::_Hash_node_base*&) [173]
                0.00    0.00       1/1           std::__detail::_Hash_node_base** std::addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&) [215]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [194]
[174]    0.0    0.00    0.00       1         std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [174]
                0.00    0.00       1/40          std::is_constant_evaluated() [42]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::deallocate(std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [138]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [190]
[175]    0.0    0.00    0.00       1         void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::destroy<std::pair<char const, bool> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*) [175]
                0.00    0.00       1/1           void std::destroy_at<std::pair<char const, bool> >(std::pair<char const, bool>*) [203]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [189]
[176]    0.0    0.00    0.00       1         std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, unsigned int) [176]
                0.00    0.00       1/40          std::is_constant_evaluated() [42]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocate(unsigned int, void const*) [139]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [189]
[177]    0.0    0.00    0.00       1         void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::construct<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [177]
                0.00    0.00       1/4           std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&) [78]
                0.00    0.00       1/4           std::tuple<char&&>&& std::forward<std::tuple<char&&> >(std::remove_reference<std::tuple<char&&> >::type&) [79]
                0.00    0.00       1/4           std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&) [77]
                0.00    0.00       1/1           decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [209]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int) [193]
[178]    0.0    0.00    0.00       1         std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate(std::allocator<std::__detail::_Hash_node_base*>&, std::__detail::_Hash_node_base**, unsigned int) [178]
                0.00    0.00       1/40          std::is_constant_evaluated() [42]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::deallocate(std::__detail::_Hash_node_base**, unsigned int) [141]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_buckets(unsigned int) [191]
[179]    0.0    0.00    0.00       1         std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned int) [179]
                0.00    0.00       1/40          std::is_constant_evaluated() [42]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned int, void const*) [142]
-----------------------------------------------
                0.00    0.00       1/1           std::pair<char const, bool>::pair<char&&>(std::piecewise_construct_t, std::tuple<char&&>, std::tuple<>) [181]
[180]    0.0    0.00    0.00       1         std::pair<char const, bool>::pair<char&&, 0u>(std::tuple<char&&>&, std::tuple<>&, std::_Index_tuple<0u>, std::_Index_tuple<>) [180]
                0.00    0.00       1/1           std::tuple_element<0u, std::tuple<char&&> >::type& std::get<0u, char&&>(std::tuple<char&&>&) [212]
                0.00    0.00       1/2           char&& std::forward<char&&>(std::remove_reference<char&&>::type&) [117]
-----------------------------------------------
                0.00    0.00       1/1           decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [209]
[181]    0.0    0.00    0.00       1         std::pair<char const, bool>::pair<char&&>(std::piecewise_construct_t, std::tuple<char&&>, std::tuple<>) [181]
                0.00    0.00       1/1           std::pair<char const, bool>::pair<char&&, 0u>(std::tuple<char&&>&, std::tuple<>&, std::_Index_tuple<0u>, std::_Index_tuple<>) [180]
-----------------------------------------------
                0.00    0.00       1/1           decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [209]
[182]    0.0    0.00    0.00       1         std::tuple<char&&>::tuple(std::tuple<char&&>&&) [182]
                0.00    0.00       1/1           std::_Tuple_impl<0u, char&&>::_Tuple_impl(std::_Tuple_impl<0u, char&&>&&) [164]
-----------------------------------------------
                0.00    0.00       1/1           std::tuple<char&&> std::forward_as_tuple<char>(char&&) [210]
[183]    0.0    0.00    0.00       1         std::tuple<char&&>::tuple<char, true, true>(char&&) [183]
                0.00    0.00       1/5           char&& std::forward<char>(std::remove_reference<char>::type&) [71]
                0.00    0.00       1/1           std::_Tuple_impl<0u, char&&>::_Tuple_impl<char>(char&&) [165]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [187]
[184]    0.0    0.00    0.00       1         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char> const&) [184]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [187]
[185]    0.0    0.00    0.00       1         void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [185]
                0.00    0.00       1/1           bool __gnu_cxx::__is_null_pointer<char const>(char const*) [143]
                0.00    0.00       1/1           std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*) [213]
                0.00    0.00       1/469         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [9]
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*) [186]
                0.00    0.00       1/139         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned int) [23]
-----------------------------------------------
                0.00    0.00       1/1           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [185]
[186]    0.0    0.00    0.00       1         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*) [186]
                0.00    0.00       1/13          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int) [52]
-----------------------------------------------
                0.00    0.00       1/1           parseTreeToInfix[abi:cxx11](ParseTree*) [126]
[187]    0.0    0.00    0.00       1         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [187]
                0.00    0.00       1/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() [68]
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char> const&) [184]
                0.00    0.00       1/1           std::char_traits<char>::length(char const*) [166]
                0.00    0.00       1/1           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [185]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [189]
[188]    0.0    0.00    0.00       1         std::__detail::_Hash_node<std::pair<char const, bool>, false>::_Hash_node() [188]
                0.00    0.00       1/2           std::__detail::_Hash_node_base::_Hash_node_base() [113]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [152]
[189]    0.0    0.00    0.00       1         std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [189]
                0.00    0.00       2/6           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_node_allocator() [64]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, unsigned int) [176]
                0.00    0.00       1/1           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__to_address<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [207]
                0.00    0.00       1/2           operator new(unsigned int, void*) [121]
                0.00    0.00       1/1           std::__detail::_Hash_node<std::pair<char const, bool>, false>::_Hash_node() [188]
                0.00    0.00       1/4           std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&) [78]
                0.00    0.00       1/4           std::tuple<char&&>&& std::forward<std::tuple<char&&> >(std::remove_reference<std::tuple<char&&> >::type&) [79]
                0.00    0.00       1/4           std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&) [77]
                0.00    0.00       1/3           std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_valptr() [87]
                0.00    0.00       1/1           void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::construct<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [177]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [192]
[190]    0.0    0.00    0.00       1         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [190]
                0.00    0.00       1/3           std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_valptr() [87]
                0.00    0.00       1/6           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_node_allocator() [64]
                0.00    0.00       1/1           void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::destroy<std::pair<char const, bool> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*) [175]
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [194]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned int) [155]
[191]    0.0    0.00    0.00       1         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_buckets(unsigned int) [191]
                0.00    0.00       1/6           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_node_allocator() [64]
                0.00    0.00       1/2           std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > const&) [99]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned int) [179]
                0.00    0.00       1/1           std::__detail::_Hash_node_base** std::__to_address<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base**) [208]
                0.00    0.00       1/2           std::allocator<std::__detail::_Hash_node_base*>::~allocator() [100]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [160]
[192]    0.0    0.00    0.00       1         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [192]
                0.00    0.00       1/1           std::__detail::_Hash_node<std::pair<char const, bool>, false>::_M_next() const [146]
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [190]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int) [101]
[193]    0.0    0.00    0.00       1         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int) [193]
                0.00    0.00       1/1           std::pointer_traits<std::__detail::_Hash_node_base**>::pointer_to(std::__detail::_Hash_node_base*&) [173]
                0.00    0.00       1/6           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_node_allocator() [64]
                0.00    0.00       1/2           std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > const&) [99]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate(std::allocator<std::__detail::_Hash_node_base*>&, std::__detail::_Hash_node_base**, unsigned int) [178]
                0.00    0.00       1/2           std::allocator<std::__detail::_Hash_node_base*>::~allocator() [100]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [190]
[194]    0.0    0.00    0.00       1         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [194]
                0.00    0.00       1/1           std::pointer_traits<std::__detail::_Hash_node<std::pair<char const, bool>, false>*>::pointer_to(std::__detail::_Hash_node<std::pair<char const, bool>, false>&) [172]
                0.00    0.00       1/6           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_node_allocator() [64]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [174]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable() [162]
[195]    0.0    0.00    0.00       1         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_Hashtable_alloc() [195]
                0.00    0.00       1/1           std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::_Hashtable_ebo_helper() [198]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [163]
[196]    0.0    0.00    0.00       1         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::~_Hashtable_alloc() [196]
                0.00    0.00       1/1           std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::~_Hashtable_ebo_helper() [199]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable() [162]
[197]    0.0    0.00    0.00       1         std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float) [197]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_Hashtable_alloc() [195]
[198]    0.0    0.00    0.00       1         std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::_Hashtable_ebo_helper() [198]
                0.00    0.00       1/1           std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocator() [150]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::~_Hashtable_alloc() [196]
[199]    0.0    0.00    0.00       1         std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::~_Hashtable_ebo_helper() [199]
                0.00    0.00       1/1           std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::~allocator() [151]
-----------------------------------------------
                0.00    0.00       1/1           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::operator[](char&&) [171]
[200]    0.0    0.00    0.00       1         std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [200]
                0.00    0.00       1/2           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(char const&) const [96]
                0.00    0.00       1/3           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(unsigned int) const [82]
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned int, char const&, unsigned int) const [91]
                0.00    0.00       1/299         std::remove_reference<char&>::type&& std::move<char&>(char&) [11]
                0.00    0.00       1/1           std::tuple<char&&> std::forward_as_tuple<char>(char&&) [210]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [152]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int, unsigned int, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [156]
                0.00    0.00       1/1           std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::operator->() const [147]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::~_Scoped_node() [153]
-----------------------------------------------
                0.00    0.00       1/1           getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [127]
[201]    0.0    0.00    0.00       1         std::__detail::operator==(std::__detail::_Node_iterator_base<std::pair<char const, bool>, false> const&, std::__detail::_Node_iterator_base<std::pair<char const, bool>, false> const&) [201]
-----------------------------------------------
                0.00    0.00       1/1           std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*) [213]
[202]    0.0    0.00    0.00       1         std::iterator_traits<char const*>::difference_type std::__distance<char const*>(char const*, char const*, std::random_access_iterator_tag) [202]
-----------------------------------------------
                0.00    0.00       1/1           void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::destroy<std::pair<char const, bool> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*) [175]
[203]    0.0    0.00    0.00       1         void std::destroy_at<std::pair<char const, bool> >(std::pair<char const, bool>*) [203]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::addressof<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>&) [214]
[204]    0.0    0.00    0.00       1         std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__addressof<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>&) [204]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hash_node_base** std::addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&) [215]
[205]    0.0    0.00    0.00       1         std::__detail::_Hash_node_base** std::__addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&) [205]
-----------------------------------------------
                0.00    0.00       1/1           std::tuple_element<0u, std::tuple<char&&> >::type& std::get<0u, char&&>(std::tuple<char&&>&) [212]
[206]    0.0    0.00    0.00       1         char& std::__get_helper<0u, char&&>(std::_Tuple_impl<0u, char&&>&) [206]
                0.00    0.00       1/2           std::_Tuple_impl<0u, char&&>::_M_head(std::_Tuple_impl<0u, char&&>&) [105]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [189]
[207]    0.0    0.00    0.00       1         std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__to_address<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [207]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_buckets(unsigned int) [191]
[208]    0.0    0.00    0.00       1         std::__detail::_Hash_node_base** std::__to_address<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base**) [208]
-----------------------------------------------
                0.00    0.00       1/1           void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::construct<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [177]
[209]    0.0    0.00    0.00       1         decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [209]
                0.00    0.00       1/4           std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&) [77]
                0.00    0.00       1/4           std::tuple<char&&>&& std::forward<std::tuple<char&&> >(std::remove_reference<std::tuple<char&&> >::type&) [79]
                0.00    0.00       1/1           std::tuple<char&&>::tuple(std::tuple<char&&>&&) [182]
                0.00    0.00       1/4           std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&) [78]
                0.00    0.00       1/2           operator new(unsigned int, void*) [121]
                0.00    0.00       1/1           std::pair<char const, bool>::pair<char&&>(std::piecewise_construct_t, std::tuple<char&&>, std::tuple<>) [181]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [200]
[210]    0.0    0.00    0.00       1         std::tuple<char&&> std::forward_as_tuple<char>(char&&) [210]
                0.00    0.00       1/5           char&& std::forward<char>(std::remove_reference<char>::type&) [71]
                0.00    0.00       1/1           std::tuple<char&&>::tuple<char, true, true>(char&&) [183]
-----------------------------------------------
                0.00    0.00       1/1           std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*) [213]
[211]    0.0    0.00    0.00       1         std::iterator_traits<char const*>::iterator_category std::__iterator_category<char const*>(char const* const&) [211]
-----------------------------------------------
                0.00    0.00       1/1           std::pair<char const, bool>::pair<char&&, 0u>(std::tuple<char&&>&, std::tuple<>&, std::_Index_tuple<0u>, std::_Index_tuple<>) [180]
[212]    0.0    0.00    0.00       1         std::tuple_element<0u, std::tuple<char&&> >::type& std::get<0u, char&&>(std::tuple<char&&>&) [212]
                0.00    0.00       1/1           char& std::__get_helper<0u, char&&>(std::_Tuple_impl<0u, char&&>&) [206]
-----------------------------------------------
                0.00    0.00       1/1           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [185]
[213]    0.0    0.00    0.00       1         std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*) [213]
                0.00    0.00       1/1           std::iterator_traits<char const*>::iterator_category std::__iterator_category<char const*>(char const* const&) [211]
                0.00    0.00       1/1           std::iterator_traits<char const*>::difference_type std::__distance<char const*>(char const*, char const*, std::random_access_iterator_tag) [202]
-----------------------------------------------
                0.00    0.00       1/1           std::pointer_traits<std::__detail::_Hash_node<std::pair<char const, bool>, false>*>::pointer_to(std::__detail::_Hash_node<std::pair<char const, bool>, false>&) [172]
[214]    0.0    0.00    0.00       1         std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::addressof<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>&) [214]
                0.00    0.00       1/1           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__addressof<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>&) [204]
-----------------------------------------------
                0.00    0.00       1/1           std::pointer_traits<std::__detail::_Hash_node_base**>::pointer_to(std::__detail::_Hash_node_base*&) [173]
[215]    0.0    0.00    0.00       1         std::__detail::_Hash_node_base** std::addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&) [215]
                0.00    0.00       1/1           std::__detail::_Hash_node_base** std::__addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&) [205]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2022 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

 [122] getNodeHeight(ParseTree*) [84] std::__detail::_Mod_range_hashing::operator()(unsigned int, unsigned int) const [52] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int)
 [123] infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [149] std::__detail::_Prime_rehash_policy::_M_state() const [61] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
 [124] createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [98] std::__detail::_Hashtable_ebo_helper<1, std::hash<char>, true>::_M_cget() const [24] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_length(unsigned int)
 [125] inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [150] std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocator() [63] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
 [126] parseTreeToInfix[abi:cxx11](ParseTree*) [151] std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::~allocator() [26] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
 [127] getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [99] std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > const&) [111] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 [128] prefixToParseTree(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [100] std::allocator<std::__detail::_Hash_node_base*>::~allocator() [112] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string()
 [129] getBinaryTreeHeight(ParseTree*) [152] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [187] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
 [130] evaluateTreeTruthValue(ParseTree*) [153] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::~_Scoped_node() [69] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
 [131] __static_initialization_and_destruction_0(int, int) [154] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned int, std::integral_constant<bool, true>) [38] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char)
 [132] __static_initialization_and_destruction_0(int, int) [155] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned int) [188] std::__detail::_Hash_node<std::pair<char const, bool>, false>::_Hash_node()
 [133] __static_initialization_and_destruction_0(int, int) [101] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int) [85] std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
 [134] __static_initialization_and_destruction_0(int, int) [102] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets() [113] std::__detail::_Hash_node_base::_Hash_node_base()
  [62] Stack::resizeArray()  [156] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int, unsigned int, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [189] std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&)
  [40] Stack::pop()          [157] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned int, std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [64] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_node_allocator()
  [41] Stack::push(char)     [158] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::end() [190] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
 [135] Stack::Stack()        [159] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(char const&) [191] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_buckets(unsigned int)
 [136] Stack::~Stack()       [160] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [192] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  [15] ParseTree::getLeftNode(ParseTree*) [161] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned int, unsigned int const&) [193] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int)
  [43] ParseTree::setLeftNode(ParseTree*) [162] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable() [194] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  [16] ParseTree::getRightNode(ParseTree*) [163] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [195] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_Hashtable_alloc()
  [44] ParseTree::setRightNode(ParseTree*) [103] std::_Head_base<0u, char&&, false>::_M_head(std::_Head_base<0u, char&&, false>&) [196] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::~_Hashtable_alloc()
  [35] ParseTree::getValue() [104] std::_Head_base<0u, char&&, false>::_Head_base<char>(char&&) [86] std::__detail::_Node_iterator_base<std::pair<char const, bool>, false>::_Node_iterator_base(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  [36] ParseTree::ParseTree(char) [105] std::_Tuple_impl<0u, char&&>::_M_head(std::_Tuple_impl<0u, char&&>&) [197] std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float)
 [137] ParseTree::~ParseTree() [164] std::_Tuple_impl<0u, char&&>::_Tuple_impl(std::_Tuple_impl<0u, char&&>&&) [87] std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_valptr()
 [138] __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::deallocate(std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [165] std::_Tuple_impl<0u, char&&>::_Tuple_impl<char>(char&&) [65] std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::_M_get()
 [139] __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocate(unsigned int, void const*) [51] std::char_traits<char>::copy(char*, char const*, unsigned int) [198] std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::_Hashtable_ebo_helper()
 [140] __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::new_allocator() [12] std::char_traits<char>::assign(char&, char const&) [199] std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::~_Hashtable_ebo_helper()
 [141] __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::deallocate(std::__detail::_Hash_node_base**, unsigned int) [166] std::char_traits<char>::length(char const*) [200] std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&)
 [142] __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned int, void const*) [167] std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::end() [201] std::__detail::operator==(std::__detail::_Node_iterator_base<std::pair<char const, bool>, false> const&, std::__detail::_Node_iterator_base<std::pair<char const, bool>, false> const&)
  [88] __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::new_allocator() [168] std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::find(char const&) [30] std::__cmp_cat::__unspec::__unspec(std::__cmp_cat::__unspec*)
  [53] __gnu_cxx::new_allocator<char>::deallocate(char*, unsigned int) [169] std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::unordered_map() [202] std::iterator_traits<char const*>::difference_type std::__distance<char const*>(char const*, char const*, std::random_access_iterator_tag)
  [54] __gnu_cxx::new_allocator<char>::allocate(unsigned int, void const*) [170] std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::~unordered_map() [114] std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag)
  [89] __gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy(std::allocator<char> const&) [171] std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::operator[](char&&) [203] void std::destroy_at<std::pair<char const, bool> >(std::pair<char const, bool>*)
  [80] __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_ptr() [19] std::pointer_traits<char const*>::pointer_to(char const&) [20] char const* std::__addressof<char const>(char const&)
  [81] __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_addr() [172] std::pointer_traits<std::__detail::_Hash_node<std::pair<char const, bool>, false>*>::pointer_to(std::__detail::_Hash_node<std::pair<char const, bool>, false>&) [204] std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__addressof<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>&)
 [143] bool __gnu_cxx::__is_null_pointer<char const>(char const*) [173] std::pointer_traits<std::__detail::_Hash_node_base**>::pointer_to(std::__detail::_Hash_node_base*&) [205] std::__detail::_Hash_node_base** std::__addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&)
  [90] bool __gnu_cxx::__is_null_pointer<char>(char*) [66] std::pointer_traits<char*>::pointer_to(char&) [70] char* std::__addressof<char>(char&)
  [34] __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__normal_iterator(char* const&) [174] std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [206] char& std::__get_helper<0u, char&&>(std::_Tuple_impl<0u, char&&>&)
  [27] __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator--() [175] void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::destroy<std::pair<char const, bool> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*) [207] std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__to_address<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  [37] __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++(int) [176] std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, unsigned int) [208] std::__detail::_Hash_node_base** std::__to_address<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base**)
  [13] __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++() [177] void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::construct<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [209] decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&)
  [14] bool __gnu_cxx::operator==<char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [178] std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate(std::allocator<std::__detail::_Hash_node_base*>&, std::__detail::_Hash_node_base**, unsigned int) [210] std::tuple<char&&> std::forward_as_tuple<char>(char&&)
  [28] decltype (std::__detail::__synth3way((declval<char*&>)(), (declval<char*&>)())) __gnu_cxx::operator<=><char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [179] std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned int) [115] std::iterator_traits<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
 [144] __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::_M_max_size() const [56] std::allocator_traits<std::allocator<char> >::deallocate(std::allocator<char>&, char*, unsigned int) [211] std::iterator_traits<char const*>::iterator_category std::__iterator_category<char const*>(char const* const&)
 [145] __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::_M_max_size() const [106] std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction(std::allocator<char> const&) [116] std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&)
  [55] __gnu_cxx::new_allocator<char>::_M_max_size() const [57] std::allocator_traits<std::allocator<char> >::allocate(std::allocator<char>&, unsigned int) [42] std::is_constant_evaluated()
   [8] __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const [49] std::allocator_traits<std::allocator<char> >::max_size(std::allocator<char> const&) [212] std::tuple_element<0u, std::tuple<char&&> >::type& std::get<0u, char&&>(std::tuple<char&&>&)
  [10] __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const [180] std::pair<char const, bool>::pair<char&&, 0u>(std::tuple<char&&>&, std::tuple<>&, std::_Index_tuple<0u>, std::_Index_tuple<>) [39] long long const& std::max<long long>(long long const&, long long const&)
  [91] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned int, char const&, unsigned int) const [181] std::pair<char const, bool>::pair<char&&>(std::piecewise_construct_t, std::tuple<char&&>, std::tuple<>) [76] std::remove_reference<std::allocator<char>&>::type&& std::move<std::allocator<char>&>(std::allocator<char>&)
  [82] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(unsigned int) const [182] std::tuple<char&&>::tuple(std::tuple<char&&>&&) [11] std::remove_reference<char&>::type&& std::move<char&>(char&)
  [92] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned int, char const&, unsigned int) const [183] std::tuple<char&&>::tuple<char, true, true>(char&&) [32] std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<char> >, std::is_move_constructible<char>, std::is_move_assignable<char> >::value, void>::type std::swap<char>(char&, char&)
  [93] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_uses_single_bucket(std::__detail::_Hash_node_base**) const [58] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned int) [117] char&& std::forward<char&&>(std::remove_reference<char&&>::type&)
  [94] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const [50] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [77] std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&)
  [95] std::hash<char>::operator()(char) const [59] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_capacity(unsigned int) [78] std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&)
  [17] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const [73] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char>&&) [79] std::tuple<char&&>&& std::forward<std::tuple<char&&> >(std::remove_reference<std::tuple<char&&> >::type&)
  [18] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() const [184] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char> const&) [71] char&& std::forward<char>(std::remove_reference<char>::type&)
  [45] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() const [67] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider() [118] void std::reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
  [25] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size() const [185] void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [213] std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*)
  [47] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::length() const [107] void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*) [119] std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*)
   [9] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [108] void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [120] void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag)
  [22] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const [68] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() [21] char const* std::addressof<char const>(char const&)
  [48] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::max_size() const [23] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned int) [214] std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::addressof<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>&)
 [146] std::__detail::_Hash_node<std::pair<char const, bool>, false>::_M_next() const [186] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*) [215] std::__detail::_Hash_node_base** std::addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&)
  [29] auto std::__detail::_Synth3way::operator()<char*, char*>(char* const&, char* const&) const [109] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*) [72] char* std::addressof<char>(char&)
 [147] std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::operator->() const [110] void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type) [33] void std::iter_swap<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
  [96] std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(char const&) const [46] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() [31] std::operator<(std::strong_ordering, std::__cmp_cat::__unspec)
 [148] std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_node_code_cache<false>&, unsigned int) const [74] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::end() [121] operator new(unsigned int, void*)
  [83] std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(unsigned int, unsigned int) const [75] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::begin()
  [97] std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash() const [60] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data(char*)
