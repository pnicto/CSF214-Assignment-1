Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 14.29      0.05     0.05    60008     0.00     0.00  __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const
  8.57      0.08     0.03    46665     0.00     0.00  __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const
  8.57      0.11     0.03    40141     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const
  5.72      0.13     0.02    16669     0.00     0.00  ParseTree::getLeftNode(ParseTree*)
  5.72      0.15     0.02    13395     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const
  5.72      0.17     0.02    13338     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size() const
  5.72      0.19     0.02        1    20.00    20.00  ParseTree::~ParseTree()
  4.29      0.21     0.02                             __x86.get_pc_thunk.bx
  4.29      0.22     0.02                             _dl_relocate_static_pie
  2.86      0.23     0.01    26673     0.00     0.00  std::char_traits<char>::assign(char&, char const&)
  2.86      0.24     0.01    16668     0.00     0.00  ParseTree::getRightNode(ParseTree*)
  2.86      0.25     0.01    13395     0.00     0.00  std::pointer_traits<char const*>::pointer_to(char const&)
  2.86      0.26     0.01    13395     0.00     0.00  char const* std::__addressof<char const>(char const&)
  2.86      0.27     0.01    13395     0.00     0.00  char const* std::addressof<char const>(char const&)
  2.86      0.28     0.01    13362     0.00     0.01  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const
  2.86      0.29     0.01    13339     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned int)
  2.86      0.30     0.01     9999     0.00     0.00  void std::iter_swap<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
  2.86      0.31     0.01     6667     0.00     0.00  ParseTree::ParseTree(char)
  2.86      0.32     0.01     6667     0.00     0.00  __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++(int)
  2.86      0.33     0.01        1    10.00    22.00  getNodeHeight(ParseTree*)
  2.86      0.34     0.01        1    10.00    10.00  Stack::~Stack()
  2.86      0.35     0.01                             _init
  0.00      0.35     0.00    30001     0.00     0.00  std::remove_reference<char&>::type&& std::move<char&>(char&)
  0.00      0.35     0.00    23332     0.00     0.00  __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++()
  0.00      0.35     0.00    20003     0.00     0.00  bool __gnu_cxx::operator==<char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
  0.00      0.35     0.00    13395     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() const
  0.00      0.35     0.00    13339     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_length(unsigned int)
  0.00      0.35     0.00    13334     0.00     0.01  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
  0.00      0.35     0.00    10001     0.00     0.00  __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator--()
  0.00      0.35     0.00    10001     0.00     0.00  decltype (std::__detail::__synth3way((declval<char*&>)(), (declval<char*&>)())) __gnu_cxx::operator<=><char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
  0.00      0.35     0.00    10001     0.00     0.00  auto std::__detail::_Synth3way::operator()<char*, char*>(char* const&, char* const&) const
  0.00      0.35     0.00    10001     0.00     0.00  std::__cmp_cat::__unspec::__unspec(std::__cmp_cat::__unspec*)
  0.00      0.35     0.00    10001     0.00     0.00  std::operator<(std::strong_ordering, std::__cmp_cat::__unspec)
  0.00      0.35     0.00     9999     0.00     0.00  std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<char> >, std::is_move_constructible<char>, std::is_move_assignable<char> >::value, void>::type std::swap<char>(char&, char&)
  0.00      0.35     0.00     6675     0.00     0.00  ParseTree::getValue()
  0.00      0.35     0.00     6675     0.00     0.00  __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__normal_iterator(char* const&)
  0.00      0.35     0.00     6667     0.00     0.01  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char)
  0.00      0.35     0.00     6667     0.00     0.00  long long const& std::max<long long>(long long const&, long long const&)
  0.00      0.35     0.00     6666     0.00     0.00  Stack::pop()
  0.00      0.35     0.00     6666     0.00     0.00  Stack::push(char)
  0.00      0.35     0.00     3333     0.00     0.00  ParseTree::setLeftNode(ParseTree*)
  0.00      0.35     0.00     3333     0.00     0.00  ParseTree::setRightNode(ParseTree*)
  0.00      0.35     0.00       96     0.00     0.00  std::is_constant_evaluated()
  0.00      0.35     0.00       60     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() const
  0.00      0.35     0.00       60     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator()
  0.00      0.35     0.00       58     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::length() const
  0.00      0.35     0.00       58     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::max_size() const
  0.00      0.35     0.00       58     0.00     0.00  std::allocator_traits<std::allocator<char> >::max_size(std::allocator<char> const&)
  0.00      0.35     0.00       33     0.00     0.01  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
  0.00      0.35     0.00       31     0.00     0.00  std::char_traits<char>::copy(char*, char const*, unsigned int)
  0.00      0.35     0.00       31     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int)
  0.00      0.35     0.00       30     0.00     0.00  __gnu_cxx::new_allocator<char>::deallocate(char*, unsigned int)
  0.00      0.35     0.00       30     0.00     0.00  __gnu_cxx::new_allocator<char>::allocate(unsigned int, void const*)
  0.00      0.35     0.00       30     0.00     0.00  __gnu_cxx::new_allocator<char>::_M_max_size() const
  0.00      0.35     0.00       30     0.00     0.00  std::allocator_traits<std::allocator<char> >::deallocate(std::allocator<char>&, char*, unsigned int)
  0.00      0.35     0.00       30     0.00     0.00  std::allocator_traits<std::allocator<char> >::allocate(std::allocator<char>&, unsigned int)
  0.00      0.35     0.00       30     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned int)
  0.00      0.35     0.00       30     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_capacity(unsigned int)
  0.00      0.35     0.00       30     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data(char*)
  0.00      0.35     0.00       30     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
  0.00      0.35     0.00       18     0.00     0.02  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
  0.00      0.35     0.00       12     0.00     0.00  Stack::resizeArray()
  0.00      0.35     0.00       10     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_node_allocator()
  0.00      0.35     0.00       10     0.00     0.00  std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::_M_get()
  0.00      0.35     0.00       10     0.00     0.00  char&& std::forward<char>(std::remove_reference<char>::type&)
  0.00      0.35     0.00        8     0.00     0.00  std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&)
  0.00      0.35     0.00        8     0.00     0.00  std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&)
  0.00      0.35     0.00        8     0.00     0.00  std::tuple<char&&>&& std::forward<std::tuple<char&&> >(std::remove_reference<std::tuple<char&&> >::type&)
  0.00      0.35     0.00        6     0.00     0.00  __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_ptr()
  0.00      0.35     0.00        6     0.00     0.00  __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_addr()
  0.00      0.35     0.00        6     0.00     0.00  std::__detail::_Mod_range_hashing::operator()(unsigned int, unsigned int) const
  0.00      0.35     0.00        6     0.00     0.00  std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  0.00      0.35     0.00        6     0.00     0.00  std::__detail::_Node_iterator_base<std::pair<char const, bool>, false>::_Node_iterator_base(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  0.00      0.35     0.00        6     0.00     0.00  std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_valptr()
  0.00      0.35     0.00        5     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(unsigned int) const
  0.00      0.35     0.00        5     0.00     0.00  std::hash<char>::operator()(char) const
  0.00      0.35     0.00        5     0.00     0.00  std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(char const&) const
  0.00      0.35     0.00        5     0.00     0.00  std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(unsigned int, unsigned int) const
  0.00      0.35     0.00        5     0.00     0.00  std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash() const
  0.00      0.35     0.00        5     0.00     0.00  std::__detail::_Hashtable_ebo_helper<1, std::hash<char>, true>::_M_cget() const
  0.00      0.35     0.00        5     0.00     0.00  std::pointer_traits<char*>::pointer_to(char&)
  0.00      0.35     0.00        5     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider()
  0.00      0.35     0.00        5     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data()
  0.00      0.35     0.00        5     0.00     0.01  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
  0.00      0.35     0.00        5     0.00     0.00  char* std::__addressof<char>(char&)
  0.00      0.35     0.00        5     0.00     0.00  char* std::addressof<char>(char&)
  0.00      0.35     0.00        4     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned int, char const&, unsigned int) const
  0.00      0.35     0.00        4     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned int, char const&, unsigned int) const
  0.00      0.35     0.00        4     0.00     0.00  std::_Head_base<0u, char&&, false>::_M_head(std::_Head_base<0u, char&&, false>&)
  0.00      0.35     0.00        4     0.00     0.00  std::_Head_base<0u, char&&, false>::_Head_base<char>(char&&)
  0.00      0.35     0.00        4     0.00     0.00  std::_Tuple_impl<0u, char&&>::_M_head(std::_Tuple_impl<0u, char&&>&)
  0.00      0.35     0.00        4     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char>&&)
  0.00      0.35     0.00        4     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::end()
  0.00      0.35     0.00        4     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::begin()
  0.00      0.35     0.00        4     0.00     0.00  std::remove_reference<std::allocator<char>&>::type&& std::move<std::allocator<char>&>(std::allocator<char>&)
  0.00      0.35     0.00        4     0.00     0.00  char&& std::forward<char&&>(std::remove_reference<char&&>::type&)
  0.00      0.35     0.00        4     0.00     0.00  operator new(unsigned int, void*)
  0.00      0.35     0.00        3     0.00     0.00  std::__detail::_Hash_node<std::pair<char const, bool>, false>::_M_next() const
  0.00      0.35     0.00        3     0.00     0.00  std::__detail::_Hash_node_base::_Hash_node_base()
  0.00      0.35     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::deallocate(std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int)
  0.00      0.35     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocate(unsigned int, void const*)
  0.00      0.35     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::new_allocator()
  0.00      0.35     0.00        2     0.00     0.00  __gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy(std::allocator<char> const&)
  0.00      0.35     0.00        2     0.00     0.00  bool __gnu_cxx::__is_null_pointer<char>(char*)
  0.00      0.35     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::_M_max_size() const
  0.00      0.35     0.00        2     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_uses_single_bucket(std::__detail::_Hash_node_base**) const
  0.00      0.35     0.00        2     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const
  0.00      0.35     0.00        2     0.00     0.00  std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::operator->() const
  0.00      0.35     0.00        2     0.00     0.00  std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_node_code_cache<false>&, unsigned int) const
  0.00      0.35     0.00        2     0.00     0.00  std::__detail::_Prime_rehash_policy::_M_state() const
  0.00      0.35     0.00        2     0.00     0.00  std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > const&)
  0.00      0.35     0.00        2     0.00     0.00  std::allocator<std::__detail::_Hash_node_base*>::~allocator()
  0.00      0.35     0.00        2     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&)
  0.00      0.35     0.00        2     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::~_Scoped_node()
  0.00      0.35     0.00        2     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int)
  0.00      0.35     0.00        2     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets()
  0.00      0.35     0.00        2     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int, unsigned int, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int)
  0.00      0.35     0.00        2     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned int, std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  0.00      0.35     0.00        2     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::end()
  0.00      0.35     0.00        2     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(char const&)
  0.00      0.35     0.00        2     0.00     0.00  std::_Tuple_impl<0u, char&&>::_Tuple_impl(std::_Tuple_impl<0u, char&&>&&)
  0.00      0.35     0.00        2     0.00     0.00  std::_Tuple_impl<0u, char&&>::_Tuple_impl<char>(char&&)
  0.00      0.35     0.00        2     0.00     0.00  std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::end()
  0.00      0.35     0.00        2     0.00     0.00  std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::find(char const&)
  0.00      0.35     0.00        2     0.00     0.00  std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::operator[](char&&)
  0.00      0.35     0.00        2     0.00     0.00  std::pointer_traits<std::__detail::_Hash_node<std::pair<char const, bool>, false>*>::pointer_to(std::__detail::_Hash_node<std::pair<char const, bool>, false>&)
  0.00      0.35     0.00        2     0.00     0.00  std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int)
  0.00      0.35     0.00        2     0.00     0.00  void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::destroy<std::pair<char const, bool> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*)
  0.00      0.35     0.00        2     0.00     0.00  std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, unsigned int)
  0.00      0.35     0.00        2     0.00     0.00  void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::construct<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&)
  0.00      0.35     0.00        2     0.00     0.00  std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction(std::allocator<char> const&)
  0.00      0.35     0.00        2     0.00     0.00  std::pair<char const, bool>::pair<char&&, 0u>(std::tuple<char&&>&, std::tuple<>&, std::_Index_tuple<0u>, std::_Index_tuple<>)
  0.00      0.35     0.00        2     0.00     0.00  std::pair<char const, bool>::pair<char&&>(std::piecewise_construct_t, std::tuple<char&&>, std::tuple<>)
  0.00      0.35     0.00        2     0.00     0.00  std::tuple<char&&>::tuple(std::tuple<char&&>&&)
  0.00      0.35     0.00        2     0.00     0.00  std::tuple<char&&>::tuple<char, true, true>(char&&)
  0.00      0.35     0.00        2     0.00     0.00  void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*)
  0.00      0.35     0.00        2     0.00     0.00  void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)
  0.00      0.35     0.00        2     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*)
  0.00      0.35     0.00        2     0.00     0.00  void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type)
  0.00      0.35     0.00        2     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      0.35     0.00        2     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string()
  0.00      0.35     0.00        2     0.00     0.00  std::__detail::_Hash_node<std::pair<char const, bool>, false>::_Hash_node()
  0.00      0.35     0.00        2     0.00     0.00  std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&)
  0.00      0.35     0.00        2     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  0.00      0.35     0.00        2     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  0.00      0.35     0.00        2     0.00     0.00  std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&)
  0.00      0.35     0.00        2     0.00     0.00  std::__detail::operator==(std::__detail::_Node_iterator_base<std::pair<char const, bool>, false> const&, std::__detail::_Node_iterator_base<std::pair<char const, bool>, false> const&)
  0.00      0.35     0.00        2     0.00     0.00  std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag)
  0.00      0.35     0.00        2     0.00     0.00  void std::destroy_at<std::pair<char const, bool> >(std::pair<char const, bool>*)
  0.00      0.35     0.00        2     0.00     0.00  std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__addressof<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>&)
  0.00      0.35     0.00        2     0.00     0.00  char& std::__get_helper<0u, char&&>(std::_Tuple_impl<0u, char&&>&)
  0.00      0.35     0.00        2     0.00     0.00  std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__to_address<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  0.00      0.35     0.00        2     0.00     0.00  decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&)
  0.00      0.35     0.00        2     0.00     0.00  std::tuple<char&&> std::forward_as_tuple<char>(char&&)
  0.00      0.35     0.00        2     0.00     0.00  std::iterator_traits<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
  0.00      0.35     0.00        2     0.00     0.00  std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&)
  0.00      0.35     0.00        2     0.00     0.00  std::tuple_element<0u, std::tuple<char&&> >::type& std::get<0u, char&&>(std::tuple<char&&>&)
  0.00      0.35     0.00        2     0.00    19.77  void std::reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
  0.00      0.35     0.00        2     0.00     0.00  std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*)
  0.00      0.35     0.00        2     0.00    19.77  void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag)
  0.00      0.35     0.00        2     0.00     0.00  std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::addressof<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>&)
  0.00      0.35     0.00        1     0.00   145.32  infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
  0.00      0.35     0.00        1     0.00    39.69  createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
  0.00      0.35     0.00        1     0.00    82.98  inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
  0.00      0.35     0.00        1     0.00    82.99  parseTreeToInfix[abi:cxx11](ParseTree*)
  0.00      0.35     0.00        1     0.00     0.00  getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*)
  0.00      0.35     0.00        1     0.00    39.69  prefixToParseTree(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
  0.00      0.35     0.00        1     0.00    22.00  getBinaryTreeHeight(ParseTree*)
  0.00      0.35     0.00        1     0.00     0.00  evaluateTreeTruthValue(ParseTree*)
  0.00      0.35     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.35     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.35     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.35     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.35     0.00        1     0.00     0.00  Stack::Stack()
  0.00      0.35     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::new_allocator()
  0.00      0.35     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::deallocate(std::__detail::_Hash_node_base**, unsigned int)
  0.00      0.35     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned int, void const*)
  0.00      0.35     0.00        1     0.00     0.00  bool __gnu_cxx::__is_null_pointer<char const>(char const*)
  0.00      0.35     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::_M_max_size() const
  0.00      0.35     0.00        1     0.00     0.00  __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_ptr() const
  0.00      0.35     0.00        1     0.00     0.00  __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_addr() const
  0.00      0.35     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(std::__detail::_Hash_node_value<std::pair<char const, bool>, false> const&) const
  0.00      0.35     0.00        1     0.00     0.00  decltype ((get<0>)((forward<std::pair<char const, bool> const&>)({parm#1}))) std::__detail::_Select1st::operator()<std::pair<char const, bool> const&>(std::pair<char const, bool> const&) const
  0.00      0.35     0.00        1     0.00     0.00  std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node_value<std::pair<char const, bool>, false> const&, unsigned int) const
  0.00      0.35     0.00        1     0.00     0.00  std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_v() const
  0.00      0.35     0.00        1     0.00     0.00  std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_valptr() const
  0.00      0.35     0.00        1     0.00     0.00  std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocator()
  0.00      0.35     0.00        1     0.00     0.00  std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::~allocator()
  0.00      0.35     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned int, std::integral_constant<bool, true>)
  0.00      0.35     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned int)
  0.00      0.35     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear()
  0.00      0.35     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned int, unsigned int const&)
  0.00      0.35     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable()
  0.00      0.35     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable()
  0.00      0.35     0.00        1     0.00     0.00  char const& std::__pair_get<0u>::__const_get<char const, bool>(std::pair<char const, bool> const&)
  0.00      0.35     0.00        1     0.00     0.00  std::char_traits<char>::length(char const*)
  0.00      0.35     0.00        1     0.00     0.00  std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::unordered_map()
  0.00      0.35     0.00        1     0.00     0.00  std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::~unordered_map()
  0.00      0.35     0.00        1     0.00     0.00  std::pointer_traits<std::__detail::_Hash_node_base**>::pointer_to(std::__detail::_Hash_node_base*&)
  0.00      0.35     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate(std::allocator<std::__detail::_Hash_node_base*>&, std::__detail::_Hash_node_base**, unsigned int)
  0.00      0.35     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned int)
  0.00      0.35     0.00        1     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char> const&)
  0.00      0.35     0.00        1     0.00     0.00  void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
  0.00      0.35     0.00        1     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
  0.00      0.35     0.00        1     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
  0.00      0.35     0.00        1     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_buckets(unsigned int)
  0.00      0.35     0.00        1     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  0.00      0.35     0.00        1     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int)
  0.00      0.35     0.00        1     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_Hashtable_alloc()
  0.00      0.35     0.00        1     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::~_Hashtable_alloc()
  0.00      0.35     0.00        1     0.00     0.00  std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float)
  0.00      0.35     0.00        1     0.00     0.00  std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::_Hashtable_ebo_helper()
  0.00      0.35     0.00        1     0.00     0.00  std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::~_Hashtable_ebo_helper()
  0.00      0.35     0.00        1     0.00     0.00  std::iterator_traits<char const*>::difference_type std::__distance<char const*>(char const*, char const*, std::random_access_iterator_tag)
  0.00      0.35     0.00        1     0.00     0.00  std::__detail::_Hash_node_base** std::__addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&)
  0.00      0.35     0.00        1     0.00     0.00  std::__detail::_Hash_node_base** std::__to_address<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base**)
  0.00      0.35     0.00        1     0.00     0.00  std::iterator_traits<char const*>::iterator_category std::__iterator_category<char const*>(char const* const&)
  0.00      0.35     0.00        1     0.00     0.00  std::tuple_element<0u, std::pair<char const, bool> >::type const& std::get<0u, char const, bool>(std::pair<char const, bool> const&)
  0.00      0.35     0.00        1     0.00     0.00  std::pair<char const, bool> const& std::forward<std::pair<char const, bool> const&>(std::remove_reference<std::pair<char const, bool> const&>::type&)
  0.00      0.35     0.00        1     0.00     0.00  std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*)
  0.00      0.35     0.00        1     0.00     0.00  std::__detail::_Hash_node_base** std::addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2022 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 2.86% of 0.35 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     88.6    0.00    0.31                 main [1]
                0.00    0.15       1/1           infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
                0.00    0.08       1/1           parseTreeToInfix[abi:cxx11](ParseTree*) [4]
                0.00    0.04       1/1           prefixToParseTree(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [10]
                0.00    0.02       1/1           getBinaryTreeHeight(ParseTree*) [22]
                0.02    0.00       1/1           ParseTree::~ParseTree() [26]
                0.00    0.00       5/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() [39]
                0.00    0.00       2/2           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [42]
                0.00    0.00       1/1           evaluateTreeTruthValue(ParseTree*) [48]
                0.00    0.00       1/2           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string() [46]
-----------------------------------------------
                0.00    0.15       1/1           main [1]
[2]     41.5    0.00    0.15       1         infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
                0.00    0.06    6667/6667        std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char) [7]
                0.00    0.04       2/2           void std::reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [12]
                0.00    0.02   13334/20003       bool __gnu_cxx::operator==<char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [14]
                0.01    0.00       1/1           Stack::~Stack() [35]
                0.01    0.00   13333/46665       __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const [15]
                0.00    0.00       3/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::end() [41]
                0.00    0.00       3/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::begin() [49]
                0.00    0.00       1/2           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string() [46]
                0.00    0.00   13333/23332       __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++() [59]
                0.00    0.00    6666/6666        Stack::push(char) [70]
                0.00    0.00    6666/6666        Stack::pop() [69]
                0.00    0.00       1/1           Stack::Stack() [183]
-----------------------------------------------
                0.00    0.06    6667/13334       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char) [7]
                0.00    0.06    6667/13334       inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [5]
[3]     37.1    0.00    0.13   13334         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [3]
                0.01    0.06   13334/13362       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const [6]
                0.01    0.01   13334/13339       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned int) [19]
                0.02    0.00   13334/13338       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size() const [25]
                0.01    0.00   13334/40141       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [16]
                0.00    0.00   13334/26673       std::char_traits<char>::assign(char&, char const&) [30]
                0.00    0.00      18/18          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int) [37]
-----------------------------------------------
                0.00    0.08       1/1           main [1]
[4]     23.7    0.00    0.08       1         parseTreeToInfix[abi:cxx11](ParseTree*) [4]
                0.00    0.08       1/1           inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [5]
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [51]
-----------------------------------------------
                                6666             inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [5]
                0.00    0.08       1/1           parseTreeToInfix[abi:cxx11](ParseTree*) [4]
[5]     23.7    0.00    0.08       1+6666    inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [5]
                0.00    0.06    6667/13334       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [3]
                0.01    0.00   10000/16669       ParseTree::getLeftNode(ParseTree*) [23]
                0.01    0.00   10000/16668       ParseTree::getRightNode(ParseTree*) [31]
                0.00    0.00    6667/6675        ParseTree::getValue() [66]
                                6666             inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [5]
-----------------------------------------------
                0.00    0.00      28/13362       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int) [37]
                0.01    0.06   13334/13362       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [3]
[6]     20.0    0.01    0.06   13362         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const [6]
                0.02    0.04   13362/13395       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const [8]
-----------------------------------------------
                0.00    0.06    6667/6667        infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
[7]     18.6    0.00    0.06    6667         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char) [7]
                0.00    0.06    6667/13334       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [3]
-----------------------------------------------
                0.00    0.00      33/13395       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [38]
                0.02    0.04   13362/13395       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const [6]
[8]     17.1    0.02    0.04   13395         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const [8]
                0.00    0.03   13395/13395       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() const [17]
                0.01    0.00   13395/40141       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [16]
-----------------------------------------------
                0.02    0.00   20002/60008       decltype (std::__detail::__synth3way((declval<char*&>)(), (declval<char*&>)())) __gnu_cxx::operator<=><char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [27]
                0.03    0.00   40006/60008       bool __gnu_cxx::operator==<char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [14]
[9]     14.3    0.05    0.00   60008         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const [9]
-----------------------------------------------
                0.00    0.04       1/1           main [1]
[10]    11.3    0.00    0.04       1         prefixToParseTree(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [10]
                0.00    0.04       1/1           createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [11]
                0.00    0.00       1/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::end() [41]
                0.00    0.00       1/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::begin() [49]
-----------------------------------------------
                                6666             createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [11]
                0.00    0.04       1/1           prefixToParseTree(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [10]
[11]    11.3    0.00    0.04       1+6666    createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [11]
                0.00    0.01    6667/20003       bool __gnu_cxx::operator==<char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [14]
                0.01    0.00    6667/6667        ParseTree::ParseTree(char) [33]
                0.01    0.00    6667/6667        __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++(int) [34]
                0.01    0.00   13334/46665       __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const [15]
                0.00    0.00    3333/3333        ParseTree::setLeftNode(ParseTree*) [71]
                0.00    0.00    3333/3333        ParseTree::setRightNode(ParseTree*) [72]
                                6666             createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [11]
-----------------------------------------------
                0.00    0.04       2/2           infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
[12]    11.3    0.00    0.04       2         void std::reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [12]
                0.00    0.04       2/2           void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag) [13]
                0.00    0.00       2/2           std::iterator_traits<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [174]
-----------------------------------------------
                0.00    0.04       2/2           void std::reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [12]
[13]    11.3    0.00    0.04       2         void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag) [13]
                0.01    0.01    9999/9999        void std::iter_swap<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [20]
                0.00    0.02   10001/10001       decltype (std::__detail::__synth3way((declval<char*&>)(), (declval<char*&>)())) __gnu_cxx::operator<=><char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [27]
                0.00    0.00       2/20003       bool __gnu_cxx::operator==<char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [14]
                0.00    0.00   10001/10001       __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator--() [61]
                0.00    0.00   10001/10001       std::__cmp_cat::__unspec::__unspec(std::__cmp_cat::__unspec*) [63]
                0.00    0.00   10001/10001       std::operator<(std::strong_ordering, std::__cmp_cat::__unspec) [64]
                0.00    0.00    9999/23332       __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++() [59]
-----------------------------------------------
                0.00    0.00       2/20003       void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag) [13]
                0.00    0.01    6667/20003       createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [11]
                0.00    0.02   13334/20003       infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
[14]     9.5    0.00    0.03   20003         bool __gnu_cxx::operator==<char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [14]
                0.03    0.00   40006/60008       __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const [9]
-----------------------------------------------
                0.01    0.00   13333/46665       infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
                0.01    0.00   13334/46665       createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [11]
                0.01    0.00   19998/46665       void std::iter_swap<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [20]
[15]     8.6    0.03    0.00   46665         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const [15]
-----------------------------------------------
                0.00    0.00       1/40141       void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [50]
                0.00    0.00       2/40141       void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [44]
                0.00    0.00       4/40141       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::begin() [49]
                0.00    0.00       4/40141       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::end() [41]
                0.00    0.00       4/40141       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [42]
                0.00    0.00      28/40141       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int) [37]
                0.00    0.00      30/40141       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned int) [40]
                0.01    0.00   13334/40141       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [3]
                0.01    0.00   13339/40141       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned int) [19]
                0.01    0.00   13395/40141       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const [8]
[16]     8.6    0.03    0.00   40141         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [16]
-----------------------------------------------
                0.00    0.03   13395/13395       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const [8]
[17]     8.6    0.00    0.03   13395         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() const [17]
                0.01    0.02   13395/13395       std::pointer_traits<char const*>::pointer_to(char const&) [18]
-----------------------------------------------
                0.01    0.02   13395/13395       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() const [17]
[18]     8.6    0.01    0.02   13395         std::pointer_traits<char const*>::pointer_to(char const&) [18]
                0.01    0.01   13395/13395       char const* std::addressof<char const>(char const&) [24]
-----------------------------------------------
                0.00    0.00       1/13339       void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [50]
                0.00    0.00       2/13339       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string() [46]
                0.00    0.00       2/13339       void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [44]
                0.01    0.01   13334/13339       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [3]
[19]     7.1    0.01    0.01   13339         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned int) [19]
                0.01    0.00   13339/40141       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [16]
                0.01    0.00   13339/26673       std::char_traits<char>::assign(char&, char const&) [30]
                0.00    0.00   13339/13339       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_length(unsigned int) [60]
-----------------------------------------------
                0.01    0.01    9999/9999        void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag) [13]
[20]     6.5    0.01    0.01    9999         void std::iter_swap<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [20]
                0.01    0.00   19998/46665       __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const [15]
                0.00    0.00    9999/9999        std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<char> >, std::is_move_constructible<char>, std::is_move_assignable<char> >::value, void>::type std::swap<char>(char&, char&) [65]
-----------------------------------------------
                               13334             getNodeHeight(ParseTree*) [21]
                0.01    0.01       1/1           getBinaryTreeHeight(ParseTree*) [22]
[21]     6.3    0.01    0.01       1+13334   getNodeHeight(ParseTree*) [21]
                0.01    0.00    6667/16669       ParseTree::getLeftNode(ParseTree*) [23]
                0.00    0.00    6667/16668       ParseTree::getRightNode(ParseTree*) [31]
                0.00    0.00    6667/6667        long long const& std::max<long long>(long long const&, long long const&) [68]
                               13334             getNodeHeight(ParseTree*) [21]
-----------------------------------------------
                0.00    0.02       1/1           main [1]
[22]     6.3    0.00    0.02       1         getBinaryTreeHeight(ParseTree*) [22]
                0.01    0.01       1/1           getNodeHeight(ParseTree*) [21]
-----------------------------------------------
                0.00    0.00       2/16669       getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [47]
                0.01    0.00    6667/16669       getNodeHeight(ParseTree*) [21]
                0.01    0.00   10000/16669       inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [5]
[23]     5.7    0.02    0.00   16669         ParseTree::getLeftNode(ParseTree*) [23]
-----------------------------------------------
                0.01    0.01   13395/13395       std::pointer_traits<char const*>::pointer_to(char const&) [18]
[24]     5.7    0.01    0.01   13395         char const* std::addressof<char const>(char const&) [24]
                0.01    0.00   13395/13395       char const* std::__addressof<char const>(char const&) [32]
-----------------------------------------------
                0.00    0.00       4/13338       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::end() [41]
                0.02    0.00   13334/13338       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [3]
[25]     5.7    0.02    0.00   13338         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size() const [25]
-----------------------------------------------
                                6666             ParseTree::~ParseTree() [26]
                0.02    0.00       1/1           main [1]
[26]     5.7    0.02    0.00       1+6666    ParseTree::~ParseTree() [26]
                                6666             ParseTree::~ParseTree() [26]
-----------------------------------------------
                0.00    0.02   10001/10001       void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag) [13]
[27]     4.8    0.00    0.02   10001         decltype (std::__detail::__synth3way((declval<char*&>)(), (declval<char*&>)())) __gnu_cxx::operator<=><char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [27]
                0.02    0.00   20002/60008       __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const [9]
                0.00    0.00   10001/10001       auto std::__detail::_Synth3way::operator()<char*, char*>(char* const&, char* const&) const [62]
-----------------------------------------------
                                                 <spontaneous>
[28]     4.3    0.02    0.00                 __x86.get_pc_thunk.bx [28]
-----------------------------------------------
                                                 <spontaneous>
[29]     4.3    0.02    0.00                 _dl_relocate_static_pie [29]
-----------------------------------------------
                0.00    0.00   13334/26673       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [3]
                0.01    0.00   13339/26673       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned int) [19]
[30]     2.9    0.01    0.00   26673         std::char_traits<char>::assign(char&, char const&) [30]
-----------------------------------------------
                0.00    0.00       1/16668       getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [47]
                0.00    0.00    6667/16668       getNodeHeight(ParseTree*) [21]
                0.01    0.00   10000/16668       inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [5]
[31]     2.9    0.01    0.00   16668         ParseTree::getRightNode(ParseTree*) [31]
-----------------------------------------------
                0.01    0.00   13395/13395       char const* std::addressof<char const>(char const&) [24]
[32]     2.9    0.01    0.00   13395         char const* std::__addressof<char const>(char const&) [32]
-----------------------------------------------
                0.01    0.00    6667/6667        createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [11]
[33]     2.9    0.01    0.00    6667         ParseTree::ParseTree(char) [33]
-----------------------------------------------
                0.01    0.00    6667/6667        createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [11]
[34]     2.9    0.01    0.00    6667         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++(int) [34]
                0.00    0.00    6667/6675        __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__normal_iterator(char* const&) [67]
-----------------------------------------------
                0.01    0.00       1/1           infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
[35]     2.9    0.01    0.00       1         Stack::~Stack() [35]
-----------------------------------------------
                                                 <spontaneous>
[36]     2.9    0.01    0.00                 _init [36]
-----------------------------------------------
                0.00    0.00      18/18          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [3]
[37]     0.1    0.00    0.00      18         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int) [37]
                0.00    0.00      28/13362       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const [6]
                0.00    0.00      28/33          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [38]
                0.00    0.00      28/40141       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [16]
                0.00    0.00      56/58          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::length() const [76]
                0.00    0.00      28/30          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [88]
                0.00    0.00      28/31          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int) [80]
                0.00    0.00      28/30          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data(char*) [87]
                0.00    0.00      28/30          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_capacity(unsigned int) [86]
-----------------------------------------------
                0.00    0.00       5/33          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() [39]
                0.00    0.00      28/33          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int) [37]
[38]     0.0    0.00    0.00      33         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [38]
                0.00    0.00      33/13395       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const [8]
                0.00    0.00      30/30          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned int) [40]
-----------------------------------------------
                0.00    0.00       5/5           main [1]
[39]     0.0    0.00    0.00       5         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() [39]
                0.00    0.00       5/33          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [38]
                0.00    0.00       5/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider() [109]
-----------------------------------------------
                0.00    0.00      30/30          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [38]
[40]     0.0    0.00    0.00      30         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned int) [40]
                0.00    0.00      30/40141       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [16]
                0.00    0.00      30/60          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() [75]
                0.00    0.00      30/30          std::allocator_traits<std::allocator<char> >::deallocate(std::allocator<char>&, char*, unsigned int) [84]
-----------------------------------------------
                0.00    0.00       1/4           prefixToParseTree(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [10]
                0.00    0.00       3/4           infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
[41]     0.0    0.00    0.00       4         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::end() [41]
                0.00    0.00       4/13338       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size() const [25]
                0.00    0.00       4/40141       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [16]
                0.00    0.00       4/6675        __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__normal_iterator(char* const&) [67]
-----------------------------------------------
                0.00    0.00       2/2           main [1]
[42]     0.0    0.00    0.00       2         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [42]
                0.00    0.00       2/2           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*) [43]
                0.00    0.00       4/40141       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [16]
                0.00    0.00       2/60          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() const [74]
                0.00    0.00       2/2           __gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy(std::allocator<char> const&) [127]
                0.00    0.00       2/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() [110]
                0.00    0.00       2/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char>&&) [118]
                0.00    0.00       2/58          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::length() const [76]
-----------------------------------------------
                0.00    0.00       2/2           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [42]
[43]     0.0    0.00    0.00       2         void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*) [43]
                0.00    0.00       2/2           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type) [45]
-----------------------------------------------
                0.00    0.00       2/2           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type) [45]
[44]     0.0    0.00    0.00       2         void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [44]
                0.00    0.00       2/13339       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned int) [19]
                0.00    0.00       2/40141       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [16]
                0.00    0.00       2/2           bool __gnu_cxx::__is_null_pointer<char>(char*) [128]
                0.00    0.00       2/2           std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*) [177]
                0.00    0.00       2/30          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [88]
                0.00    0.00       2/30          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data(char*) [87]
                0.00    0.00       2/30          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_capacity(unsigned int) [86]
                0.00    0.00       2/2           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*) [160]
-----------------------------------------------
                0.00    0.00       2/2           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*) [43]
[45]     0.0    0.00    0.00       2         void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type) [45]
                0.00    0.00       2/2           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [44]
-----------------------------------------------
                0.00    0.00       1/2           infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
                0.00    0.00       1/2           main [1]
[46]     0.0    0.00    0.00       2         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string() [46]
                0.00    0.00       2/13339       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned int) [19]
                0.00    0.00       2/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() [110]
                0.00    0.00       2/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char>&&) [118]
-----------------------------------------------
                                   3             getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [47]
                0.00    0.00       1/1           evaluateTreeTruthValue(ParseTree*) [48]
[47]     0.0    0.00    0.00       1+3       getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [47]
                0.00    0.00       2/16669       ParseTree::getLeftNode(ParseTree*) [23]
                0.00    0.00       1/16668       ParseTree::getRightNode(ParseTree*) [31]
                0.00    0.00       8/6675        ParseTree::getValue() [66]
                0.00    0.00       2/2           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::end() [147]
                0.00    0.00       2/2           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::find(char const&) [148]
                0.00    0.00       2/2           std::__detail::operator==(std::__detail::_Node_iterator_base<std::pair<char const, bool>, false> const&, std::__detail::_Node_iterator_base<std::pair<char const, bool>, false> const&) [166]
                0.00    0.00       2/2           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::operator[](char&&) [149]
                                   3             getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [47]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[48]     0.0    0.00    0.00       1         evaluateTreeTruthValue(ParseTree*) [48]
                0.00    0.00       1/1           getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [47]
                0.00    0.00       1/1           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::unordered_map() [206]
                0.00    0.00       1/1           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::~unordered_map() [207]
-----------------------------------------------
                0.00    0.00       1/4           prefixToParseTree(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [10]
                0.00    0.00       3/4           infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
[49]     0.0    0.00    0.00       4         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::begin() [49]
                0.00    0.00       4/40141       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [16]
                0.00    0.00       4/6675        __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__normal_iterator(char* const&) [67]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [51]
[50]     0.0    0.00    0.00       1         void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [50]
                0.00    0.00       1/13339       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned int) [19]
                0.00    0.00       1/40141       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [16]
                0.00    0.00       1/1           bool __gnu_cxx::__is_null_pointer<char const>(char const*) [187]
                0.00    0.00       1/1           std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*) [227]
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*) [212]
-----------------------------------------------
                0.00    0.00       1/1           parseTreeToInfix[abi:cxx11](ParseTree*) [4]
[51]     0.0    0.00    0.00       1         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [51]
                0.00    0.00       1/1           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [50]
                0.00    0.00       1/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() [110]
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char> const&) [211]
                0.00    0.00       1/1           std::char_traits<char>::length(char const*) [205]
-----------------------------------------------
                0.00    0.00       2/30001       std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::operator[](char&&) [149]
                0.00    0.00       2/30001       std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [165]
                0.00    0.00   29997/30001       std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<char> >, std::is_move_constructible<char>, std::is_move_assignable<char> >::value, void>::type std::swap<char>(char&, char&) [65]
[58]     0.0    0.00    0.00   30001         std::remove_reference<char&>::type&& std::move<char&>(char&) [58]
-----------------------------------------------
                0.00    0.00    9999/23332       void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag) [13]
                0.00    0.00   13333/23332       infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
[59]     0.0    0.00    0.00   23332         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++() [59]
-----------------------------------------------
                0.00    0.00   13339/13339       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned int) [19]
[60]     0.0    0.00    0.00   13339         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_length(unsigned int) [60]
-----------------------------------------------
                0.00    0.00   10001/10001       void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag) [13]
[61]     0.0    0.00    0.00   10001         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator--() [61]
-----------------------------------------------
                0.00    0.00   10001/10001       decltype (std::__detail::__synth3way((declval<char*&>)(), (declval<char*&>)())) __gnu_cxx::operator<=><char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [27]
[62]     0.0    0.00    0.00   10001         auto std::__detail::_Synth3way::operator()<char*, char*>(char* const&, char* const&) const [62]
-----------------------------------------------
                0.00    0.00   10001/10001       void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag) [13]
[63]     0.0    0.00    0.00   10001         std::__cmp_cat::__unspec::__unspec(std::__cmp_cat::__unspec*) [63]
-----------------------------------------------
                0.00    0.00   10001/10001       void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag) [13]
[64]     0.0    0.00    0.00   10001         std::operator<(std::strong_ordering, std::__cmp_cat::__unspec) [64]
-----------------------------------------------
                0.00    0.00    9999/9999        void std::iter_swap<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [20]
[65]     0.0    0.00    0.00    9999         std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<char> >, std::is_move_constructible<char>, std::is_move_assignable<char> >::value, void>::type std::swap<char>(char&, char&) [65]
                0.00    0.00   29997/30001       std::remove_reference<char&>::type&& std::move<char&>(char&) [58]
-----------------------------------------------
                0.00    0.00       8/6675        getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [47]
                0.00    0.00    6667/6675        inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [5]
[66]     0.0    0.00    0.00    6675         ParseTree::getValue() [66]
-----------------------------------------------
                0.00    0.00       4/6675        std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::begin() [49]
                0.00    0.00       4/6675        std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::end() [41]
                0.00    0.00    6667/6675        __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++(int) [34]
[67]     0.0    0.00    0.00    6675         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__normal_iterator(char* const&) [67]
-----------------------------------------------
                0.00    0.00    6667/6667        getNodeHeight(ParseTree*) [21]
[68]     0.0    0.00    0.00    6667         long long const& std::max<long long>(long long const&, long long const&) [68]
-----------------------------------------------
                0.00    0.00    6666/6666        infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
[69]     0.0    0.00    0.00    6666         Stack::pop() [69]
-----------------------------------------------
                0.00    0.00    6666/6666        infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
[70]     0.0    0.00    0.00    6666         Stack::push(char) [70]
                0.00    0.00      12/12          Stack::resizeArray() [89]
-----------------------------------------------
                0.00    0.00    3333/3333        createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [11]
[71]     0.0    0.00    0.00    3333         ParseTree::setLeftNode(ParseTree*) [71]
-----------------------------------------------
                0.00    0.00    3333/3333        createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [11]
[72]     0.0    0.00    0.00    3333         ParseTree::setRightNode(ParseTree*) [72]
-----------------------------------------------
                0.00    0.00       1/96          std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate(std::allocator<std::__detail::_Hash_node_base*>&, std::__detail::_Hash_node_base**, unsigned int) [209]
                0.00    0.00       1/96          std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned int) [210]
                0.00    0.00       2/96          std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, unsigned int) [153]
                0.00    0.00       2/96          std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [151]
                0.00    0.00      30/96          std::char_traits<char>::copy(char*, char const*, unsigned int) [79]
                0.00    0.00      30/96          std::allocator_traits<std::allocator<char> >::allocate(std::allocator<char>&, unsigned int) [85]
                0.00    0.00      30/96          std::allocator_traits<std::allocator<char> >::deallocate(std::allocator<char>&, char*, unsigned int) [84]
[73]     0.0    0.00    0.00      96         std::is_constant_evaluated() [73]
-----------------------------------------------
                0.00    0.00       2/60          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [42]
                0.00    0.00      58/60          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::max_size() const [77]
[74]     0.0    0.00    0.00      60         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() const [74]
-----------------------------------------------
                0.00    0.00      30/60          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [88]
                0.00    0.00      30/60          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned int) [40]
[75]     0.0    0.00    0.00      60         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() [75]
-----------------------------------------------
                0.00    0.00       2/58          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [42]
                0.00    0.00      56/58          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int) [37]
[76]     0.0    0.00    0.00      58         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::length() const [76]
-----------------------------------------------
                0.00    0.00      58/58          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [88]
[77]     0.0    0.00    0.00      58         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::max_size() const [77]
                0.00    0.00      58/60          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() const [74]
                0.00    0.00      58/58          std::allocator_traits<std::allocator<char> >::max_size(std::allocator<char> const&) [78]
-----------------------------------------------
                0.00    0.00      58/58          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::max_size() const [77]
[78]     0.0    0.00    0.00      58         std::allocator_traits<std::allocator<char> >::max_size(std::allocator<char> const&) [78]
-----------------------------------------------
                0.00    0.00      31/31          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int) [80]
[79]     0.0    0.00    0.00      31         std::char_traits<char>::copy(char*, char const*, unsigned int) [79]
                0.00    0.00      30/96          std::is_constant_evaluated() [73]
-----------------------------------------------
                0.00    0.00       1/31          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*) [212]
                0.00    0.00       2/31          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*) [160]
                0.00    0.00      28/31          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int) [37]
[80]     0.0    0.00    0.00      31         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int) [80]
                0.00    0.00      31/31          std::char_traits<char>::copy(char*, char const*, unsigned int) [79]
-----------------------------------------------
                0.00    0.00      30/30          std::allocator_traits<std::allocator<char> >::deallocate(std::allocator<char>&, char*, unsigned int) [84]
[81]     0.0    0.00    0.00      30         __gnu_cxx::new_allocator<char>::deallocate(char*, unsigned int) [81]
-----------------------------------------------
                0.00    0.00      30/30          std::allocator_traits<std::allocator<char> >::allocate(std::allocator<char>&, unsigned int) [85]
[82]     0.0    0.00    0.00      30         __gnu_cxx::new_allocator<char>::allocate(unsigned int, void const*) [82]
                0.00    0.00      30/30          __gnu_cxx::new_allocator<char>::_M_max_size() const [83]
-----------------------------------------------
                0.00    0.00      30/30          __gnu_cxx::new_allocator<char>::allocate(unsigned int, void const*) [82]
[83]     0.0    0.00    0.00      30         __gnu_cxx::new_allocator<char>::_M_max_size() const [83]
-----------------------------------------------
                0.00    0.00      30/30          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned int) [40]
[84]     0.0    0.00    0.00      30         std::allocator_traits<std::allocator<char> >::deallocate(std::allocator<char>&, char*, unsigned int) [84]
                0.00    0.00      30/96          std::is_constant_evaluated() [73]
                0.00    0.00      30/30          __gnu_cxx::new_allocator<char>::deallocate(char*, unsigned int) [81]
-----------------------------------------------
                0.00    0.00      30/30          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [88]
[85]     0.0    0.00    0.00      30         std::allocator_traits<std::allocator<char> >::allocate(std::allocator<char>&, unsigned int) [85]
                0.00    0.00      30/96          std::is_constant_evaluated() [73]
                0.00    0.00      30/30          __gnu_cxx::new_allocator<char>::allocate(unsigned int, void const*) [82]
-----------------------------------------------
                0.00    0.00       2/30          void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [44]
                0.00    0.00      28/30          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int) [37]
[86]     0.0    0.00    0.00      30         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_capacity(unsigned int) [86]
-----------------------------------------------
                0.00    0.00       2/30          void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [44]
                0.00    0.00      28/30          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int) [37]
[87]     0.0    0.00    0.00      30         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data(char*) [87]
-----------------------------------------------
                0.00    0.00       2/30          void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [44]
                0.00    0.00      28/30          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int) [37]
[88]     0.0    0.00    0.00      30         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [88]
                0.00    0.00      58/58          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::max_size() const [77]
                0.00    0.00      30/60          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() [75]
                0.00    0.00      30/30          std::allocator_traits<std::allocator<char> >::allocate(std::allocator<char>&, unsigned int) [85]
-----------------------------------------------
                0.00    0.00      12/12          Stack::push(char) [70]
[89]     0.0    0.00    0.00      12         Stack::resizeArray() [89]
-----------------------------------------------
                0.00    0.00       1/10          std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int) [215]
                0.00    0.00       1/10          std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_buckets(unsigned int) [213]
                0.00    0.00       2/10          std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [163]
                0.00    0.00       2/10          std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [164]
                0.00    0.00       4/10          std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [162]
[90]     0.0    0.00    0.00      10         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_node_allocator() [90]
                0.00    0.00      10/10          std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::_M_get() [91]
-----------------------------------------------
                0.00    0.00      10/10          std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_node_allocator() [90]
[91]     0.0    0.00    0.00      10         std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::_M_get() [91]
-----------------------------------------------
                0.00    0.00       2/10          std::tuple<char&&> std::forward_as_tuple<char>(char&&) [173]
                0.00    0.00       2/10          std::tuple<char&&>::tuple<char, true, true>(char&&) [159]
                0.00    0.00       2/10          std::_Tuple_impl<0u, char&&>::_Tuple_impl<char>(char&&) [146]
                0.00    0.00       4/10          std::_Head_base<0u, char&&, false>::_Head_base<char>(char&&) [116]
[92]     0.0    0.00    0.00      10         char&& std::forward<char>(std::remove_reference<char>::type&) [92]
-----------------------------------------------
                0.00    0.00       2/8           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [137]
                0.00    0.00       2/8           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [162]
                0.00    0.00       2/8           decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [172]
                0.00    0.00       2/8           void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::construct<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [154]
[93]     0.0    0.00    0.00       8         std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&) [93]
-----------------------------------------------
                0.00    0.00       2/8           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [137]
                0.00    0.00       2/8           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [162]
                0.00    0.00       2/8           decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [172]
                0.00    0.00       2/8           void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::construct<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [154]
[94]     0.0    0.00    0.00       8         std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&) [94]
-----------------------------------------------
                0.00    0.00       2/8           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [137]
                0.00    0.00       2/8           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [162]
                0.00    0.00       2/8           decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [172]
                0.00    0.00       2/8           void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::construct<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [154]
[95]     0.0    0.00    0.00       8         std::tuple<char&&>&& std::forward<std::tuple<char&&> >(std::remove_reference<std::tuple<char&&> >::type&) [95]
-----------------------------------------------
                0.00    0.00       6/6           std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_valptr() [101]
[96]     0.0    0.00    0.00       6         __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_ptr() [96]
                0.00    0.00       6/6           __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_addr() [97]
-----------------------------------------------
                0.00    0.00       6/6           __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_ptr() [96]
[97]     0.0    0.00    0.00       6         __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_addr() [97]
-----------------------------------------------
                0.00    0.00       1/6           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node_value<std::pair<char const, bool>, false> const&, unsigned int) const [193]
                0.00    0.00       5/6           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(unsigned int, unsigned int) const [105]
[98]     0.0    0.00    0.00       6         std::__detail::_Mod_range_hashing::operator()(unsigned int, unsigned int) const [98]
-----------------------------------------------
                0.00    0.00       2/6           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(char const&) [144]
                0.00    0.00       2/6           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::end() [143]
                0.00    0.00       2/6           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int, unsigned int, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [141]
[99]     0.0    0.00    0.00       6         std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [99]
                0.00    0.00       6/6           std::__detail::_Node_iterator_base<std::pair<char const, bool>, false>::_Node_iterator_base(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [100]
-----------------------------------------------
                0.00    0.00       6/6           std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [99]
[100]    0.0    0.00    0.00       6         std::__detail::_Node_iterator_base<std::pair<char const, bool>, false>::_Node_iterator_base(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [100]
-----------------------------------------------
                0.00    0.00       2/6           std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::operator->() const [132]
                0.00    0.00       2/6           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [162]
                0.00    0.00       2/6           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [163]
[101]    0.0    0.00    0.00       6         std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_valptr() [101]
                0.00    0.00       6/6           __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_ptr() [96]
-----------------------------------------------
                0.00    0.00       1/5           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int, unsigned int, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [141]
                0.00    0.00       2/5           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(char const&) [144]
                0.00    0.00       2/5           std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [165]
[102]    0.0    0.00    0.00       5         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(unsigned int) const [102]
                0.00    0.00       5/5           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(unsigned int, unsigned int) const [105]
-----------------------------------------------
                0.00    0.00       5/5           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(char const&) const [104]
[103]    0.0    0.00    0.00       5         std::hash<char>::operator()(char) const [103]
-----------------------------------------------
                0.00    0.00       1/5           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node_value<std::pair<char const, bool>, false> const&, unsigned int) const [193]
                0.00    0.00       2/5           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(char const&) [144]
                0.00    0.00       2/5           std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [165]
[104]    0.0    0.00    0.00       5         std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(char const&) const [104]
                0.00    0.00       5/5           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash() const [106]
                0.00    0.00       5/5           std::hash<char>::operator()(char) const [103]
-----------------------------------------------
                0.00    0.00       5/5           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(unsigned int) const [102]
[105]    0.0    0.00    0.00       5         std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(unsigned int, unsigned int) const [105]
                0.00    0.00       5/6           std::__detail::_Mod_range_hashing::operator()(unsigned int, unsigned int) const [98]
-----------------------------------------------
                0.00    0.00       5/5           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(char const&) const [104]
[106]    0.0    0.00    0.00       5         std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash() const [106]
                0.00    0.00       5/5           std::__detail::_Hashtable_ebo_helper<1, std::hash<char>, true>::_M_cget() const [107]
-----------------------------------------------
                0.00    0.00       5/5           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash() const [106]
[107]    0.0    0.00    0.00       5         std::__detail::_Hashtable_ebo_helper<1, std::hash<char>, true>::_M_cget() const [107]
-----------------------------------------------
                0.00    0.00       5/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() [110]
[108]    0.0    0.00    0.00       5         std::pointer_traits<char*>::pointer_to(char&) [108]
                0.00    0.00       5/5           char* std::addressof<char>(char&) [112]
-----------------------------------------------
                0.00    0.00       5/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() [39]
[109]    0.0    0.00    0.00       5         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider() [109]
-----------------------------------------------
                0.00    0.00       1/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [51]
                0.00    0.00       2/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string() [46]
                0.00    0.00       2/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [42]
[110]    0.0    0.00    0.00       5         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() [110]
                0.00    0.00       5/5           std::pointer_traits<char*>::pointer_to(char&) [108]
-----------------------------------------------
                0.00    0.00       5/5           char* std::addressof<char>(char&) [112]
[111]    0.0    0.00    0.00       5         char* std::__addressof<char>(char&) [111]
-----------------------------------------------
                0.00    0.00       5/5           std::pointer_traits<char*>::pointer_to(char&) [108]
[112]    0.0    0.00    0.00       5         char* std::addressof<char>(char&) [112]
                0.00    0.00       5/5           char* std::__addressof<char>(char&) [111]
-----------------------------------------------
                0.00    0.00       2/4           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(char const&) [144]
                0.00    0.00       2/4           std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [165]
[113]    0.0    0.00    0.00       4         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned int, char const&, unsigned int) const [113]
                0.00    0.00       4/4           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned int, char const&, unsigned int) const [114]
-----------------------------------------------
                0.00    0.00       4/4           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned int, char const&, unsigned int) const [113]
[114]    0.0    0.00    0.00       4         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned int, char const&, unsigned int) const [114]
-----------------------------------------------
                0.00    0.00       4/4           std::_Tuple_impl<0u, char&&>::_M_head(std::_Tuple_impl<0u, char&&>&) [117]
[115]    0.0    0.00    0.00       4         std::_Head_base<0u, char&&, false>::_M_head(std::_Head_base<0u, char&&, false>&) [115]
-----------------------------------------------
                0.00    0.00       2/4           std::_Tuple_impl<0u, char&&>::_Tuple_impl<char>(char&&) [146]
                0.00    0.00       2/4           std::_Tuple_impl<0u, char&&>::_Tuple_impl(std::_Tuple_impl<0u, char&&>&&) [145]
[116]    0.0    0.00    0.00       4         std::_Head_base<0u, char&&, false>::_Head_base<char>(char&&) [116]
                0.00    0.00       4/10          char&& std::forward<char>(std::remove_reference<char>::type&) [92]
-----------------------------------------------
                0.00    0.00       2/4           std::_Tuple_impl<0u, char&&>::_Tuple_impl(std::_Tuple_impl<0u, char&&>&&) [145]
                0.00    0.00       2/4           char& std::__get_helper<0u, char&&>(std::_Tuple_impl<0u, char&&>&) [170]
[117]    0.0    0.00    0.00       4         std::_Tuple_impl<0u, char&&>::_M_head(std::_Tuple_impl<0u, char&&>&) [117]
                0.00    0.00       4/4           std::_Head_base<0u, char&&, false>::_M_head(std::_Head_base<0u, char&&, false>&) [115]
-----------------------------------------------
                0.00    0.00       2/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string() [46]
                0.00    0.00       2/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [42]
[118]    0.0    0.00    0.00       4         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char>&&) [118]
                0.00    0.00       4/4           std::remove_reference<std::allocator<char>&>::type&& std::move<std::allocator<char>&>(std::allocator<char>&) [119]
-----------------------------------------------
                0.00    0.00       4/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char>&&) [118]
[119]    0.0    0.00    0.00       4         std::remove_reference<std::allocator<char>&>::type&& std::move<std::allocator<char>&>(std::allocator<char>&) [119]
-----------------------------------------------
                0.00    0.00       2/4           std::_Tuple_impl<0u, char&&>::_Tuple_impl(std::_Tuple_impl<0u, char&&>&&) [145]
                0.00    0.00       2/4           std::pair<char const, bool>::pair<char&&, 0u>(std::tuple<char&&>&, std::tuple<>&, std::_Index_tuple<0u>, std::_Index_tuple<>) [156]
[120]    0.0    0.00    0.00       4         char&& std::forward<char&&>(std::remove_reference<char&&>::type&) [120]
-----------------------------------------------
                0.00    0.00       2/4           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [162]
                0.00    0.00       2/4           decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [172]
[121]    0.0    0.00    0.00       4         operator new(unsigned int, void*) [121]
-----------------------------------------------
                0.00    0.00       1/3           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned int, std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [142]
                0.00    0.00       2/3           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [214]
[122]    0.0    0.00    0.00       3         std::__detail::_Hash_node<std::pair<char const, bool>, false>::_M_next() const [122]
-----------------------------------------------
                0.00    0.00       1/3           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable() [202]
                0.00    0.00       2/3           std::__detail::_Hash_node<std::pair<char const, bool>, false>::_Hash_node() [161]
[123]    0.0    0.00    0.00       3         std::__detail::_Hash_node_base::_Hash_node_base() [123]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [151]
[124]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::deallocate(std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [124]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, unsigned int) [153]
[125]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocate(unsigned int, void const*) [125]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::_M_max_size() const [129]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > const&) [135]
[126]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::new_allocator() [126]
-----------------------------------------------
                0.00    0.00       2/2           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [42]
[127]    0.0    0.00    0.00       2         __gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy(std::allocator<char> const&) [127]
                0.00    0.00       2/2           std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction(std::allocator<char> const&) [155]
-----------------------------------------------
                0.00    0.00       2/2           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [44]
[128]    0.0    0.00    0.00       2         bool __gnu_cxx::__is_null_pointer<char>(char*) [128]
-----------------------------------------------
                0.00    0.00       2/2           __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocate(unsigned int, void const*) [125]
[129]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::_M_max_size() const [129]
-----------------------------------------------
                0.00    0.00       2/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int) [139]
[130]    0.0    0.00    0.00       2         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_uses_single_bucket(std::__detail::_Hash_node_base**) const [130]
-----------------------------------------------
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [200]
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned int, std::integral_constant<bool, true>) [198]
[131]    0.0    0.00    0.00       2         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const [131]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [165]
[132]    0.0    0.00    0.00       2         std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::operator->() const [132]
                0.00    0.00       2/6           std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_valptr() [101]
-----------------------------------------------
                0.00    0.00       2/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int, unsigned int, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [141]
[133]    0.0    0.00    0.00       2         std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_node_code_cache<false>&, unsigned int) const [133]
-----------------------------------------------
                0.00    0.00       2/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int, unsigned int, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [141]
[134]    0.0    0.00    0.00       2         std::__detail::_Prime_rehash_policy::_M_state() const [134]
-----------------------------------------------
                0.00    0.00       1/2           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int) [215]
                0.00    0.00       1/2           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_buckets(unsigned int) [213]
[135]    0.0    0.00    0.00       2         std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > const&) [135]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::new_allocator() [126]
-----------------------------------------------
                0.00    0.00       1/2           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int) [215]
                0.00    0.00       1/2           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_buckets(unsigned int) [213]
[136]    0.0    0.00    0.00       2         std::allocator<std::__detail::_Hash_node_base*>::~allocator() [136]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [165]
[137]    0.0    0.00    0.00       2         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [137]
                0.00    0.00       2/8           std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&) [94]
                0.00    0.00       2/8           std::tuple<char&&>&& std::forward<std::tuple<char&&> >(std::remove_reference<std::tuple<char&&> >::type&) [95]
                0.00    0.00       2/8           std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&) [93]
                0.00    0.00       2/2           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [162]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [165]
[138]    0.0    0.00    0.00       2         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::~_Scoped_node() [138]
-----------------------------------------------
                0.00    0.00       2/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets() [140]
[139]    0.0    0.00    0.00       2         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int) [139]
                0.00    0.00       2/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_uses_single_bucket(std::__detail::_Hash_node_base**) const [130]
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int) [215]
-----------------------------------------------
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [203]
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned int, std::integral_constant<bool, true>) [198]
[140]    0.0    0.00    0.00       2         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets() [140]
                0.00    0.00       2/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int) [139]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [165]
[141]    0.0    0.00    0.00       2         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int, unsigned int, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [141]
                0.00    0.00       2/2           std::__detail::_Prime_rehash_policy::_M_state() const [134]
                0.00    0.00       2/2           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_node_code_cache<false>&, unsigned int) const [133]
                0.00    0.00       2/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned int, std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [142]
                0.00    0.00       2/6           std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [99]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned int, unsigned int const&) [201]
                0.00    0.00       1/5           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(unsigned int) const [102]
-----------------------------------------------
                0.00    0.00       2/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int, unsigned int, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [141]
[142]    0.0    0.00    0.00       2         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned int, std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [142]
                0.00    0.00       1/3           std::__detail::_Hash_node<std::pair<char const, bool>, false>::_M_next() const [122]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(std::__detail::_Hash_node_value<std::pair<char const, bool>, false> const&) const [191]
-----------------------------------------------
                0.00    0.00       2/2           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::end() [147]
[143]    0.0    0.00    0.00       2         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::end() [143]
                0.00    0.00       2/6           std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [99]
-----------------------------------------------
                0.00    0.00       2/2           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::find(char const&) [148]
[144]    0.0    0.00    0.00       2         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(char const&) [144]
                0.00    0.00       2/5           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(char const&) const [104]
                0.00    0.00       2/5           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(unsigned int) const [102]
                0.00    0.00       2/4           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned int, char const&, unsigned int) const [113]
                0.00    0.00       2/6           std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [99]
-----------------------------------------------
                0.00    0.00       2/2           std::tuple<char&&>::tuple(std::tuple<char&&>&&) [158]
[145]    0.0    0.00    0.00       2         std::_Tuple_impl<0u, char&&>::_Tuple_impl(std::_Tuple_impl<0u, char&&>&&) [145]
                0.00    0.00       2/4           std::_Tuple_impl<0u, char&&>::_M_head(std::_Tuple_impl<0u, char&&>&) [117]
                0.00    0.00       2/4           char&& std::forward<char&&>(std::remove_reference<char&&>::type&) [120]
                0.00    0.00       2/4           std::_Head_base<0u, char&&, false>::_Head_base<char>(char&&) [116]
-----------------------------------------------
                0.00    0.00       2/2           std::tuple<char&&>::tuple<char, true, true>(char&&) [159]
[146]    0.0    0.00    0.00       2         std::_Tuple_impl<0u, char&&>::_Tuple_impl<char>(char&&) [146]
                0.00    0.00       2/10          char&& std::forward<char>(std::remove_reference<char>::type&) [92]
                0.00    0.00       2/4           std::_Head_base<0u, char&&, false>::_Head_base<char>(char&&) [116]
-----------------------------------------------
                0.00    0.00       2/2           getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [47]
[147]    0.0    0.00    0.00       2         std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::end() [147]
                0.00    0.00       2/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::end() [143]
-----------------------------------------------
                0.00    0.00       2/2           getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [47]
[148]    0.0    0.00    0.00       2         std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::find(char const&) [148]
                0.00    0.00       2/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(char const&) [144]
-----------------------------------------------
                0.00    0.00       2/2           getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [47]
[149]    0.0    0.00    0.00       2         std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::operator[](char&&) [149]
                0.00    0.00       2/30001       std::remove_reference<char&>::type&& std::move<char&>(char&) [58]
                0.00    0.00       2/2           std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [165]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [164]
[150]    0.0    0.00    0.00       2         std::pointer_traits<std::__detail::_Hash_node<std::pair<char const, bool>, false>*>::pointer_to(std::__detail::_Hash_node<std::pair<char const, bool>, false>&) [150]
                0.00    0.00       2/2           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::addressof<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>&) [178]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [164]
[151]    0.0    0.00    0.00       2         std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [151]
                0.00    0.00       2/96          std::is_constant_evaluated() [73]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::deallocate(std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [124]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [163]
[152]    0.0    0.00    0.00       2         void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::destroy<std::pair<char const, bool> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*) [152]
                0.00    0.00       2/2           void std::destroy_at<std::pair<char const, bool> >(std::pair<char const, bool>*) [168]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [162]
[153]    0.0    0.00    0.00       2         std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, unsigned int) [153]
                0.00    0.00       2/96          std::is_constant_evaluated() [73]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocate(unsigned int, void const*) [125]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [162]
[154]    0.0    0.00    0.00       2         void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::construct<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [154]
                0.00    0.00       2/8           std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&) [94]
                0.00    0.00       2/8           std::tuple<char&&>&& std::forward<std::tuple<char&&> >(std::remove_reference<std::tuple<char&&> >::type&) [95]
                0.00    0.00       2/8           std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&) [93]
                0.00    0.00       2/2           decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [172]
-----------------------------------------------
                0.00    0.00       2/2           __gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy(std::allocator<char> const&) [127]
[155]    0.0    0.00    0.00       2         std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction(std::allocator<char> const&) [155]
-----------------------------------------------
                0.00    0.00       2/2           std::pair<char const, bool>::pair<char&&>(std::piecewise_construct_t, std::tuple<char&&>, std::tuple<>) [157]
[156]    0.0    0.00    0.00       2         std::pair<char const, bool>::pair<char&&, 0u>(std::tuple<char&&>&, std::tuple<>&, std::_Index_tuple<0u>, std::_Index_tuple<>) [156]
                0.00    0.00       2/2           std::tuple_element<0u, std::tuple<char&&> >::type& std::get<0u, char&&>(std::tuple<char&&>&) [176]
                0.00    0.00       2/4           char&& std::forward<char&&>(std::remove_reference<char&&>::type&) [120]
-----------------------------------------------
                0.00    0.00       2/2           decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [172]
[157]    0.0    0.00    0.00       2         std::pair<char const, bool>::pair<char&&>(std::piecewise_construct_t, std::tuple<char&&>, std::tuple<>) [157]
                0.00    0.00       2/2           std::pair<char const, bool>::pair<char&&, 0u>(std::tuple<char&&>&, std::tuple<>&, std::_Index_tuple<0u>, std::_Index_tuple<>) [156]
-----------------------------------------------
                0.00    0.00       2/2           decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [172]
[158]    0.0    0.00    0.00       2         std::tuple<char&&>::tuple(std::tuple<char&&>&&) [158]
                0.00    0.00       2/2           std::_Tuple_impl<0u, char&&>::_Tuple_impl(std::_Tuple_impl<0u, char&&>&&) [145]
-----------------------------------------------
                0.00    0.00       2/2           std::tuple<char&&> std::forward_as_tuple<char>(char&&) [173]
[159]    0.0    0.00    0.00       2         std::tuple<char&&>::tuple<char, true, true>(char&&) [159]
                0.00    0.00       2/10          char&& std::forward<char>(std::remove_reference<char>::type&) [92]
                0.00    0.00       2/2           std::_Tuple_impl<0u, char&&>::_Tuple_impl<char>(char&&) [146]
-----------------------------------------------
                0.00    0.00       2/2           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [44]
[160]    0.0    0.00    0.00       2         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*) [160]
                0.00    0.00       2/31          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int) [80]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [162]
[161]    0.0    0.00    0.00       2         std::__detail::_Hash_node<std::pair<char const, bool>, false>::_Hash_node() [161]
                0.00    0.00       2/3           std::__detail::_Hash_node_base::_Hash_node_base() [123]
-----------------------------------------------
                0.00    0.00       2/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [137]
[162]    0.0    0.00    0.00       2         std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [162]
                0.00    0.00       4/10          std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_node_allocator() [90]
                0.00    0.00       2/2           std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, unsigned int) [153]
                0.00    0.00       2/2           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__to_address<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [171]
                0.00    0.00       2/4           operator new(unsigned int, void*) [121]
                0.00    0.00       2/2           std::__detail::_Hash_node<std::pair<char const, bool>, false>::_Hash_node() [161]
                0.00    0.00       2/8           std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&) [94]
                0.00    0.00       2/8           std::tuple<char&&>&& std::forward<std::tuple<char&&> >(std::remove_reference<std::tuple<char&&> >::type&) [95]
                0.00    0.00       2/8           std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&) [93]
                0.00    0.00       2/6           std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_valptr() [101]
                0.00    0.00       2/2           void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::construct<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [154]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [214]
[163]    0.0    0.00    0.00       2         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [163]
                0.00    0.00       2/6           std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_valptr() [101]
                0.00    0.00       2/10          std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_node_allocator() [90]
                0.00    0.00       2/2           void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::destroy<std::pair<char const, bool> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*) [152]
                0.00    0.00       2/2           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [164]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [163]
[164]    0.0    0.00    0.00       2         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [164]
                0.00    0.00       2/2           std::pointer_traits<std::__detail::_Hash_node<std::pair<char const, bool>, false>*>::pointer_to(std::__detail::_Hash_node<std::pair<char const, bool>, false>&) [150]
                0.00    0.00       2/10          std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_node_allocator() [90]
                0.00    0.00       2/2           std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [151]
-----------------------------------------------
                0.00    0.00       2/2           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::operator[](char&&) [149]
[165]    0.0    0.00    0.00       2         std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [165]
                0.00    0.00       2/5           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(char const&) const [104]
                0.00    0.00       2/5           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(unsigned int) const [102]
                0.00    0.00       2/4           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned int, char const&, unsigned int) const [113]
                0.00    0.00       2/30001       std::remove_reference<char&>::type&& std::move<char&>(char&) [58]
                0.00    0.00       2/2           std::tuple<char&&> std::forward_as_tuple<char>(char&&) [173]
                0.00    0.00       2/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [137]
                0.00    0.00       2/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int, unsigned int, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [141]
                0.00    0.00       2/2           std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::operator->() const [132]
                0.00    0.00       2/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::~_Scoped_node() [138]
-----------------------------------------------
                0.00    0.00       2/2           getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [47]
[166]    0.0    0.00    0.00       2         std::__detail::operator==(std::__detail::_Node_iterator_base<std::pair<char const, bool>, false> const&, std::__detail::_Node_iterator_base<std::pair<char const, bool>, false> const&) [166]
-----------------------------------------------
                0.00    0.00       2/2           std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*) [177]
[167]    0.0    0.00    0.00       2         std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag) [167]
-----------------------------------------------
                0.00    0.00       2/2           void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::destroy<std::pair<char const, bool> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*) [152]
[168]    0.0    0.00    0.00       2         void std::destroy_at<std::pair<char const, bool> >(std::pair<char const, bool>*) [168]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::addressof<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>&) [178]
[169]    0.0    0.00    0.00       2         std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__addressof<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>&) [169]
-----------------------------------------------
                0.00    0.00       2/2           std::tuple_element<0u, std::tuple<char&&> >::type& std::get<0u, char&&>(std::tuple<char&&>&) [176]
[170]    0.0    0.00    0.00       2         char& std::__get_helper<0u, char&&>(std::_Tuple_impl<0u, char&&>&) [170]
                0.00    0.00       2/4           std::_Tuple_impl<0u, char&&>::_M_head(std::_Tuple_impl<0u, char&&>&) [117]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [162]
[171]    0.0    0.00    0.00       2         std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__to_address<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [171]
-----------------------------------------------
                0.00    0.00       2/2           void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::construct<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [154]
[172]    0.0    0.00    0.00       2         decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [172]
                0.00    0.00       2/8           std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&) [93]
                0.00    0.00       2/8           std::tuple<char&&>&& std::forward<std::tuple<char&&> >(std::remove_reference<std::tuple<char&&> >::type&) [95]
                0.00    0.00       2/2           std::tuple<char&&>::tuple(std::tuple<char&&>&&) [158]
                0.00    0.00       2/8           std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&) [94]
                0.00    0.00       2/4           operator new(unsigned int, void*) [121]
                0.00    0.00       2/2           std::pair<char const, bool>::pair<char&&>(std::piecewise_construct_t, std::tuple<char&&>, std::tuple<>) [157]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [165]
[173]    0.0    0.00    0.00       2         std::tuple<char&&> std::forward_as_tuple<char>(char&&) [173]
                0.00    0.00       2/10          char&& std::forward<char>(std::remove_reference<char>::type&) [92]
                0.00    0.00       2/2           std::tuple<char&&>::tuple<char, true, true>(char&&) [159]
-----------------------------------------------
                0.00    0.00       2/2           void std::reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [12]
[174]    0.0    0.00    0.00       2         std::iterator_traits<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [174]
-----------------------------------------------
                0.00    0.00       2/2           std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*) [177]
[175]    0.0    0.00    0.00       2         std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&) [175]
-----------------------------------------------
                0.00    0.00       2/2           std::pair<char const, bool>::pair<char&&, 0u>(std::tuple<char&&>&, std::tuple<>&, std::_Index_tuple<0u>, std::_Index_tuple<>) [156]
[176]    0.0    0.00    0.00       2         std::tuple_element<0u, std::tuple<char&&> >::type& std::get<0u, char&&>(std::tuple<char&&>&) [176]
                0.00    0.00       2/2           char& std::__get_helper<0u, char&&>(std::_Tuple_impl<0u, char&&>&) [170]
-----------------------------------------------
                0.00    0.00       2/2           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [44]
[177]    0.0    0.00    0.00       2         std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*) [177]
                0.00    0.00       2/2           std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&) [175]
                0.00    0.00       2/2           std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag) [167]
-----------------------------------------------
                0.00    0.00       2/2           std::pointer_traits<std::__detail::_Hash_node<std::pair<char const, bool>, false>*>::pointer_to(std::__detail::_Hash_node<std::pair<char const, bool>, false>&) [150]
[178]    0.0    0.00    0.00       2         std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::addressof<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>&) [178]
                0.00    0.00       2/2           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__addressof<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>&) [169]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z13infixToPrefixNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE [229]
[179]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [179]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_main [232]
[180]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [180]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN5Stack11resizeArrayEv [230]
[181]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [181]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN9ParseTreeC2Ec [231]
[182]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [182]
-----------------------------------------------
                0.00    0.00       1/1           infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
[183]    0.0    0.00    0.00       1         Stack::Stack() [183]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocator() [196]
[184]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::new_allocator() [184]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate(std::allocator<std::__detail::_Hash_node_base*>&, std::__detail::_Hash_node_base**, unsigned int) [209]
[185]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::deallocate(std::__detail::_Hash_node_base**, unsigned int) [185]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned int) [210]
[186]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned int, void const*) [186]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::_M_max_size() const [188]
-----------------------------------------------
                0.00    0.00       1/1           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [50]
[187]    0.0    0.00    0.00       1         bool __gnu_cxx::__is_null_pointer<char const>(char const*) [187]
-----------------------------------------------
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned int, void const*) [186]
[188]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::_M_max_size() const [188]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_valptr() const [195]
[189]    0.0    0.00    0.00       1         __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_ptr() const [189]
                0.00    0.00       1/1           __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_addr() const [190]
-----------------------------------------------
                0.00    0.00       1/1           __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_ptr() const [189]
[190]    0.0    0.00    0.00       1         __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_addr() const [190]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned int, std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [142]
[191]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(std::__detail::_Hash_node_value<std::pair<char const, bool>, false> const&) const [191]
                0.00    0.00       1/1           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node_value<std::pair<char const, bool>, false> const&, unsigned int) const [193]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node_value<std::pair<char const, bool>, false> const&, unsigned int) const [193]
[192]    0.0    0.00    0.00       1         decltype ((get<0>)((forward<std::pair<char const, bool> const&>)({parm#1}))) std::__detail::_Select1st::operator()<std::pair<char const, bool> const&>(std::pair<char const, bool> const&) const [192]
                0.00    0.00       1/1           std::pair<char const, bool> const& std::forward<std::pair<char const, bool> const&>(std::remove_reference<std::pair<char const, bool> const&>::type&) [226]
                0.00    0.00       1/1           std::tuple_element<0u, std::pair<char const, bool> >::type const& std::get<0u, char const, bool>(std::pair<char const, bool> const&) [225]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(std::__detail::_Hash_node_value<std::pair<char const, bool>, false> const&) const [191]
[193]    0.0    0.00    0.00       1         std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node_value<std::pair<char const, bool>, false> const&, unsigned int) const [193]
                0.00    0.00       1/1           std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_v() const [194]
                0.00    0.00       1/1           decltype ((get<0>)((forward<std::pair<char const, bool> const&>)({parm#1}))) std::__detail::_Select1st::operator()<std::pair<char const, bool> const&>(std::pair<char const, bool> const&) const [192]
                0.00    0.00       1/5           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(char const&) const [104]
                0.00    0.00       1/6           std::__detail::_Mod_range_hashing::operator()(unsigned int, unsigned int) const [98]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node_value<std::pair<char const, bool>, false> const&, unsigned int) const [193]
[194]    0.0    0.00    0.00       1         std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_v() const [194]
                0.00    0.00       1/1           std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_valptr() const [195]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_v() const [194]
[195]    0.0    0.00    0.00       1         std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_valptr() const [195]
                0.00    0.00       1/1           __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_ptr() const [189]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::_Hashtable_ebo_helper() [219]
[196]    0.0    0.00    0.00       1         std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocator() [196]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::new_allocator() [184]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::~_Hashtable_ebo_helper() [220]
[197]    0.0    0.00    0.00       1         std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::~allocator() [197]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned int, unsigned int const&) [201]
[198]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned int, std::integral_constant<bool, true>) [198]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned int) [199]
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const [131]
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets() [140]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned int, std::integral_constant<bool, true>) [198]
[199]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned int) [199]
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_buckets(unsigned int) [213]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [203]
[200]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [200]
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const [131]
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [214]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int, unsigned int, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [141]
[201]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned int, unsigned int const&) [201]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned int, std::integral_constant<bool, true>) [198]
-----------------------------------------------
                0.00    0.00       1/1           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::unordered_map() [206]
[202]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable() [202]
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_Hashtable_alloc() [216]
                0.00    0.00       1/3           std::__detail::_Hash_node_base::_Hash_node_base() [123]
                0.00    0.00       1/1           std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float) [218]
-----------------------------------------------
                0.00    0.00       1/1           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::~unordered_map() [207]
[203]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [203]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [200]
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets() [140]
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::~_Hashtable_alloc() [217]
-----------------------------------------------
                0.00    0.00       1/1           std::tuple_element<0u, std::pair<char const, bool> >::type const& std::get<0u, char const, bool>(std::pair<char const, bool> const&) [225]
[204]    0.0    0.00    0.00       1         char const& std::__pair_get<0u>::__const_get<char const, bool>(std::pair<char const, bool> const&) [204]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [51]
[205]    0.0    0.00    0.00       1         std::char_traits<char>::length(char const*) [205]
-----------------------------------------------
                0.00    0.00       1/1           evaluateTreeTruthValue(ParseTree*) [48]
[206]    0.0    0.00    0.00       1         std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::unordered_map() [206]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable() [202]
-----------------------------------------------
                0.00    0.00       1/1           evaluateTreeTruthValue(ParseTree*) [48]
[207]    0.0    0.00    0.00       1         std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::~unordered_map() [207]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [203]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int) [215]
[208]    0.0    0.00    0.00       1         std::pointer_traits<std::__detail::_Hash_node_base**>::pointer_to(std::__detail::_Hash_node_base*&) [208]
                0.00    0.00       1/1           std::__detail::_Hash_node_base** std::addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&) [228]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int) [215]
[209]    0.0    0.00    0.00       1         std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate(std::allocator<std::__detail::_Hash_node_base*>&, std::__detail::_Hash_node_base**, unsigned int) [209]
                0.00    0.00       1/96          std::is_constant_evaluated() [73]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::deallocate(std::__detail::_Hash_node_base**, unsigned int) [185]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_buckets(unsigned int) [213]
[210]    0.0    0.00    0.00       1         std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned int) [210]
                0.00    0.00       1/96          std::is_constant_evaluated() [73]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned int, void const*) [186]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [51]
[211]    0.0    0.00    0.00       1         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char> const&) [211]
-----------------------------------------------
                0.00    0.00       1/1           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [50]
[212]    0.0    0.00    0.00       1         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*) [212]
                0.00    0.00       1/31          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int) [80]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned int) [199]
[213]    0.0    0.00    0.00       1         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_buckets(unsigned int) [213]
                0.00    0.00       1/10          std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_node_allocator() [90]
                0.00    0.00       1/2           std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > const&) [135]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned int) [210]
                0.00    0.00       1/1           std::__detail::_Hash_node_base** std::__to_address<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base**) [223]
                0.00    0.00       1/2           std::allocator<std::__detail::_Hash_node_base*>::~allocator() [136]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [200]
[214]    0.0    0.00    0.00       1         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [214]
                0.00    0.00       2/3           std::__detail::_Hash_node<std::pair<char const, bool>, false>::_M_next() const [122]
                0.00    0.00       2/2           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [163]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int) [139]
[215]    0.0    0.00    0.00       1         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int) [215]
                0.00    0.00       1/1           std::pointer_traits<std::__detail::_Hash_node_base**>::pointer_to(std::__detail::_Hash_node_base*&) [208]
                0.00    0.00       1/10          std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_node_allocator() [90]
                0.00    0.00       1/2           std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > const&) [135]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate(std::allocator<std::__detail::_Hash_node_base*>&, std::__detail::_Hash_node_base**, unsigned int) [209]
                0.00    0.00       1/2           std::allocator<std::__detail::_Hash_node_base*>::~allocator() [136]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable() [202]
[216]    0.0    0.00    0.00       1         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_Hashtable_alloc() [216]
                0.00    0.00       1/1           std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::_Hashtable_ebo_helper() [219]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [203]
[217]    0.0    0.00    0.00       1         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::~_Hashtable_alloc() [217]
                0.00    0.00       1/1           std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::~_Hashtable_ebo_helper() [220]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable() [202]
[218]    0.0    0.00    0.00       1         std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float) [218]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_Hashtable_alloc() [216]
[219]    0.0    0.00    0.00       1         std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::_Hashtable_ebo_helper() [219]
                0.00    0.00       1/1           std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocator() [196]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::~_Hashtable_alloc() [217]
[220]    0.0    0.00    0.00       1         std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::~_Hashtable_ebo_helper() [220]
                0.00    0.00       1/1           std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::~allocator() [197]
-----------------------------------------------
                0.00    0.00       1/1           std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*) [227]
[221]    0.0    0.00    0.00       1         std::iterator_traits<char const*>::difference_type std::__distance<char const*>(char const*, char const*, std::random_access_iterator_tag) [221]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hash_node_base** std::addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&) [228]
[222]    0.0    0.00    0.00       1         std::__detail::_Hash_node_base** std::__addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&) [222]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_buckets(unsigned int) [213]
[223]    0.0    0.00    0.00       1         std::__detail::_Hash_node_base** std::__to_address<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base**) [223]
-----------------------------------------------
                0.00    0.00       1/1           std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*) [227]
[224]    0.0    0.00    0.00       1         std::iterator_traits<char const*>::iterator_category std::__iterator_category<char const*>(char const* const&) [224]
-----------------------------------------------
                0.00    0.00       1/1           decltype ((get<0>)((forward<std::pair<char const, bool> const&>)({parm#1}))) std::__detail::_Select1st::operator()<std::pair<char const, bool> const&>(std::pair<char const, bool> const&) const [192]
[225]    0.0    0.00    0.00       1         std::tuple_element<0u, std::pair<char const, bool> >::type const& std::get<0u, char const, bool>(std::pair<char const, bool> const&) [225]
                0.00    0.00       1/1           char const& std::__pair_get<0u>::__const_get<char const, bool>(std::pair<char const, bool> const&) [204]
-----------------------------------------------
                0.00    0.00       1/1           decltype ((get<0>)((forward<std::pair<char const, bool> const&>)({parm#1}))) std::__detail::_Select1st::operator()<std::pair<char const, bool> const&>(std::pair<char const, bool> const&) const [192]
[226]    0.0    0.00    0.00       1         std::pair<char const, bool> const& std::forward<std::pair<char const, bool> const&>(std::remove_reference<std::pair<char const, bool> const&>::type&) [226]
-----------------------------------------------
                0.00    0.00       1/1           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [50]
[227]    0.0    0.00    0.00       1         std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*) [227]
                0.00    0.00       1/1           std::iterator_traits<char const*>::iterator_category std::__iterator_category<char const*>(char const* const&) [224]
                0.00    0.00       1/1           std::iterator_traits<char const*>::difference_type std::__distance<char const*>(char const*, char const*, std::random_access_iterator_tag) [221]
-----------------------------------------------
                0.00    0.00       1/1           std::pointer_traits<std::__detail::_Hash_node_base**>::pointer_to(std::__detail::_Hash_node_base*&) [208]
[228]    0.0    0.00    0.00       1         std::__detail::_Hash_node_base** std::addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&) [228]
                0.00    0.00       1/1           std::__detail::_Hash_node_base** std::__addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&) [222]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2022 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

  [21] getNodeHeight(ParseTree*) [106] std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash() const [80] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int)
   [2] infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [98] std::__detail::_Mod_range_hashing::operator()(unsigned int, unsigned int) const [88] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
  [11] createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [134] std::__detail::_Prime_rehash_policy::_M_state() const [60] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_length(unsigned int)
   [5] inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [194] std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_v() const [37] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
   [4] parseTreeToInfix[abi:cxx11](ParseTree*) [195] std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_valptr() const [3] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
  [47] getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [107] std::__detail::_Hashtable_ebo_helper<1, std::hash<char>, true>::_M_cget() const [42] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  [10] prefixToParseTree(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [196] std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocator() [46] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string()
  [22] getBinaryTreeHeight(ParseTree*) [197] std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::~allocator() [51] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
  [48] evaluateTreeTruthValue(ParseTree*) [135] std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > const&) [39] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
 [179] __static_initialization_and_destruction_0(int, int) [136] std::allocator<std::__detail::_Hash_node_base*>::~allocator() [7] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char)
 [180] __static_initialization_and_destruction_0(int, int) [137] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [161] std::__detail::_Hash_node<std::pair<char const, bool>, false>::_Hash_node()
 [181] __static_initialization_and_destruction_0(int, int) [138] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::~_Scoped_node() [99] std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
 [182] __static_initialization_and_destruction_0(int, int) [198] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned int, std::integral_constant<bool, true>) [123] std::__detail::_Hash_node_base::_Hash_node_base()
  [89] Stack::resizeArray()  [199] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned int) [162] std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&)
  [69] Stack::pop()          [139] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int) [90] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_node_allocator()
  [70] Stack::push(char)     [140] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets() [163] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
 [183] Stack::Stack()        [141] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int, unsigned int, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [213] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_buckets(unsigned int)
  [35] Stack::~Stack()       [142] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned int, std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [214] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  [23] ParseTree::getLeftNode(ParseTree*) [143] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::end() [215] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int)
  [71] ParseTree::setLeftNode(ParseTree*) [144] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(char const&) [164] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  [31] ParseTree::getRightNode(ParseTree*) [200] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [216] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_Hashtable_alloc()
  [72] ParseTree::setRightNode(ParseTree*) [201] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned int, unsigned int const&) [217] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::~_Hashtable_alloc()
  [66] ParseTree::getValue() [202] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable() [100] std::__detail::_Node_iterator_base<std::pair<char const, bool>, false>::_Node_iterator_base(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  [33] ParseTree::ParseTree(char) [203] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [218] std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float)
  [26] ParseTree::~ParseTree() [115] std::_Head_base<0u, char&&, false>::_M_head(std::_Head_base<0u, char&&, false>&) [101] std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_valptr()
 [124] __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::deallocate(std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [116] std::_Head_base<0u, char&&, false>::_Head_base<char>(char&&) [91] std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::_M_get()
 [125] __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocate(unsigned int, void const*) [204] char const& std::__pair_get<0u>::__const_get<char const, bool>(std::pair<char const, bool> const&) [219] std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::_Hashtable_ebo_helper()
 [184] __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::new_allocator() [117] std::_Tuple_impl<0u, char&&>::_M_head(std::_Tuple_impl<0u, char&&>&) [220] std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::~_Hashtable_ebo_helper()
 [185] __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::deallocate(std::__detail::_Hash_node_base**, unsigned int) [145] std::_Tuple_impl<0u, char&&>::_Tuple_impl(std::_Tuple_impl<0u, char&&>&&) [165] std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&)
 [186] __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned int, void const*) [146] std::_Tuple_impl<0u, char&&>::_Tuple_impl<char>(char&&) [166] std::__detail::operator==(std::__detail::_Node_iterator_base<std::pair<char const, bool>, false> const&, std::__detail::_Node_iterator_base<std::pair<char const, bool>, false> const&)
 [126] __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::new_allocator() [79] std::char_traits<char>::copy(char*, char const*, unsigned int) [63] std::__cmp_cat::__unspec::__unspec(std::__cmp_cat::__unspec*)
  [81] __gnu_cxx::new_allocator<char>::deallocate(char*, unsigned int) [30] std::char_traits<char>::assign(char&, char const&) [221] std::iterator_traits<char const*>::difference_type std::__distance<char const*>(char const*, char const*, std::random_access_iterator_tag)
  [82] __gnu_cxx::new_allocator<char>::allocate(unsigned int, void const*) [205] std::char_traits<char>::length(char const*) [167] std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag)
 [127] __gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy(std::allocator<char> const&) [147] std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::end() [168] void std::destroy_at<std::pair<char const, bool> >(std::pair<char const, bool>*)
  [96] __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_ptr() [148] std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::find(char const&) [32] char const* std::__addressof<char const>(char const&)
  [97] __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_addr() [206] std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::unordered_map() [169] std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__addressof<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>&)
 [187] bool __gnu_cxx::__is_null_pointer<char const>(char const*) [207] std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::~unordered_map() [222] std::__detail::_Hash_node_base** std::__addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&)
 [128] bool __gnu_cxx::__is_null_pointer<char>(char*) [149] std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::operator[](char&&) [111] char* std::__addressof<char>(char&)
  [67] __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__normal_iterator(char* const&) [18] std::pointer_traits<char const*>::pointer_to(char const&) [170] char& std::__get_helper<0u, char&&>(std::_Tuple_impl<0u, char&&>&)
  [61] __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator--() [150] std::pointer_traits<std::__detail::_Hash_node<std::pair<char const, bool>, false>*>::pointer_to(std::__detail::_Hash_node<std::pair<char const, bool>, false>&) [171] std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__to_address<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  [34] __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++(int) [208] std::pointer_traits<std::__detail::_Hash_node_base**>::pointer_to(std::__detail::_Hash_node_base*&) [223] std::__detail::_Hash_node_base** std::__to_address<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base**)
  [59] __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++() [108] std::pointer_traits<char*>::pointer_to(char&) [172] decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&)
  [14] bool __gnu_cxx::operator==<char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [151] std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [173] std::tuple<char&&> std::forward_as_tuple<char>(char&&)
  [27] decltype (std::__detail::__synth3way((declval<char*&>)(), (declval<char*&>)())) __gnu_cxx::operator<=><char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [152] void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::destroy<std::pair<char const, bool> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*) [174] std::iterator_traits<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
 [129] __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::_M_max_size() const [153] std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, unsigned int) [224] std::iterator_traits<char const*>::iterator_category std::__iterator_category<char const*>(char const* const&)
 [188] __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::_M_max_size() const [154] void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::construct<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [175] std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&)
  [83] __gnu_cxx::new_allocator<char>::_M_max_size() const [209] std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate(std::allocator<std::__detail::_Hash_node_base*>&, std::__detail::_Hash_node_base**, unsigned int) [73] std::is_constant_evaluated()
 [189] __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_ptr() const [210] std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned int) [176] std::tuple_element<0u, std::tuple<char&&> >::type& std::get<0u, char&&>(std::tuple<char&&>&)
 [190] __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_addr() const [84] std::allocator_traits<std::allocator<char> >::deallocate(std::allocator<char>&, char*, unsigned int) [225] std::tuple_element<0u, std::pair<char const, bool> >::type const& std::get<0u, char const, bool>(std::pair<char const, bool> const&)
   [9] __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const [155] std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction(std::allocator<char> const&) [68] long long const& std::max<long long>(long long const&, long long const&)
  [15] __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const [85] std::allocator_traits<std::allocator<char> >::allocate(std::allocator<char>&, unsigned int) [119] std::remove_reference<std::allocator<char>&>::type&& std::move<std::allocator<char>&>(std::allocator<char>&)
 [113] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned int, char const&, unsigned int) const [78] std::allocator_traits<std::allocator<char> >::max_size(std::allocator<char> const&) [58] std::remove_reference<char&>::type&& std::move<char&>(char&)
 [191] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(std::__detail::_Hash_node_value<std::pair<char const, bool>, false> const&) const [156] std::pair<char const, bool>::pair<char&&, 0u>(std::tuple<char&&>&, std::tuple<>&, std::_Index_tuple<0u>, std::_Index_tuple<>) [65] std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<char> >, std::is_move_constructible<char>, std::is_move_assignable<char> >::value, void>::type std::swap<char>(char&, char&)
 [102] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(unsigned int) const [157] std::pair<char const, bool>::pair<char&&>(std::piecewise_construct_t, std::tuple<char&&>, std::tuple<>) [120] char&& std::forward<char&&>(std::remove_reference<char&&>::type&)
 [114] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned int, char const&, unsigned int) const [158] std::tuple<char&&>::tuple(std::tuple<char&&>&&) [93] std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&)
 [130] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_uses_single_bucket(std::__detail::_Hash_node_base**) const [159] std::tuple<char&&>::tuple<char, true, true>(char&&) [226] std::pair<char const, bool> const& std::forward<std::pair<char const, bool> const&>(std::remove_reference<std::pair<char const, bool> const&>::type&)
 [131] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const [40] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned int) [94] std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&)
 [103] std::hash<char>::operator()(char) const [38] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [95] std::tuple<char&&>&& std::forward<std::tuple<char&&> >(std::remove_reference<std::tuple<char&&> >::type&)
   [8] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const [86] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_capacity(unsigned int) [92] char&& std::forward<char>(std::remove_reference<char>::type&)
  [17] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() const [118] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char>&&) [12] void std::reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
  [74] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() const [211] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char> const&) [227] std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*)
  [25] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size() const [109] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider() [177] std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*)
  [76] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::length() const [50] void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [13] void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag)
  [16] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [43] void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*) [24] char const* std::addressof<char const>(char const&)
   [6] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const [44] void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [178] std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::addressof<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>&)
  [77] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::max_size() const [110] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() [228] std::__detail::_Hash_node_base** std::addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&)
 [122] std::__detail::_Hash_node<std::pair<char const, bool>, false>::_M_next() const [19] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned int) [112] char* std::addressof<char>(char&)
 [192] decltype ((get<0>)((forward<std::pair<char const, bool> const&>)({parm#1}))) std::__detail::_Select1st::operator()<std::pair<char const, bool> const&>(std::pair<char const, bool> const&) const [212] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*) [20] void std::iter_swap<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
  [62] auto std::__detail::_Synth3way::operator()<char*, char*>(char* const&, char* const&) const [160] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*) [64] std::operator<(std::strong_ordering, std::__cmp_cat::__unspec)
 [132] std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::operator->() const [45] void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type) [121] operator new(unsigned int, void*)
 [104] std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(char const&) const [75] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() [28] __x86.get_pc_thunk.bx
 [133] std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_node_code_cache<false>&, unsigned int) const [41] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::end() [29] _dl_relocate_static_pie
 [193] std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node_value<std::pair<char const, bool>, false> const&, unsigned int) const [49] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::begin() [36] _init
 [105] std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(unsigned int, unsigned int) const [87] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data(char*)
