Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 16.67      0.03     0.03  2000003     0.00     0.00  bool __gnu_cxx::operator==<char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
 16.67      0.06     0.03        1    30.00    50.00  createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
  5.56      0.07     0.01  2333332     0.00     0.00  __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++()
  5.56      0.08     0.01  1333437     0.00     0.00  char const* std::__addressof<char const>(char const&)
  5.56      0.09     0.01  1000001     0.00     0.00  decltype (std::__detail::__synth3way((declval<char*&>)(), (declval<char*&>)())) __gnu_cxx::operator<=><char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
  5.56      0.10     0.01  1000001     0.00     0.00  auto std::__detail::_Synth3way::operator()<char*, char*>(char* const&, char* const&) const
  5.56      0.11     0.01  1000001     0.00     0.00  std::__cmp_cat::__unspec::__unspec(std::__cmp_cat::__unspec*)
  5.56      0.12     0.01   666667     0.00     0.00  __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++(int)
  5.56      0.13     0.01   666666     0.00     0.00  Stack::push(char)
  5.56      0.14     0.01        2     5.00    24.64  void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag)
  5.56      0.15     0.01        1    10.00    19.90  inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
  5.56      0.16     0.01        1    10.00    10.00  ParseTree::~ParseTree()
  2.78      0.17     0.01  4000225     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const
  2.78      0.17     0.01  3000003     0.00     0.00  std::remove_reference<char&>::type&& std::move<char&>(char&)
  2.78      0.17     0.01       51     0.10     0.10  __gnu_cxx::new_allocator<char>::_M_max_size() const
  2.78      0.18     0.01        5     1.00     1.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data()
  0.00      0.18     0.00  6000008     0.00     0.00  __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const
  0.00      0.18     0.00  4666665     0.00     0.00  __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const
  0.00      0.18     0.00  2666673     0.00     0.00  std::char_traits<char>::assign(char&, char const&)
  0.00      0.18     0.00  1666670     0.00     0.00  ParseTree::getLeftNode(ParseTree*)
  0.00      0.18     0.00  1666669     0.00     0.00  ParseTree::getRightNode(ParseTree*)
  0.00      0.18     0.00  1333437     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const
  0.00      0.18     0.00  1333437     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() const
  0.00      0.18     0.00  1333437     0.00     0.00  std::pointer_traits<char const*>::pointer_to(char const&)
  0.00      0.18     0.00  1333437     0.00     0.00  char const* std::addressof<char const>(char const&)
  0.00      0.18     0.00  1333383     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const
  0.00      0.18     0.00  1333339     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned long)
  0.00      0.18     0.00  1333339     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_length(unsigned long)
  0.00      0.18     0.00  1333338     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size() const
  0.00      0.18     0.00  1333334     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
  0.00      0.18     0.00  1000001     0.00     0.00  __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator--()
  0.00      0.18     0.00  1000001     0.00     0.00  std::operator<(std::strong_ordering, std::__cmp_cat::__unspec)
  0.00      0.18     0.00   999999     0.00     0.00  std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<char> >, std::is_move_constructible<char>, std::is_move_assignable<char> >::value, void>::type std::swap<char>(char&, char&)
  0.00      0.18     0.00   999999     0.00     0.00  void std::iter_swap<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
  0.00      0.18     0.00   666679     0.00     0.00  ParseTree::getValue()
  0.00      0.18     0.00   666675     0.00     0.00  __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__normal_iterator(char* const&)
  0.00      0.18     0.00   666667     0.00     0.00  ParseTree::ParseTree(char)
  0.00      0.18     0.00   666667     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char)
  0.00      0.18     0.00   666667     0.00     0.00  long long const& std::max<long long>(long long const&, long long const&)
  0.00      0.18     0.00   666666     0.00     0.00  Stack::pop()
  0.00      0.18     0.00   333333     0.00     0.00  ParseTree::setLeftNode(ParseTree*)
  0.00      0.18     0.00   333333     0.00     0.00  ParseTree::setRightNode(ParseTree*)
  0.00      0.18     0.00      161     0.00     0.00  std::is_constant_evaluated()
  0.00      0.18     0.00      102     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() const
  0.00      0.18     0.00      102     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator()
  0.00      0.18     0.00      100     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::length() const
  0.00      0.18     0.00      100     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::max_size() const
  0.00      0.18     0.00      100     0.00     0.00  std::allocator_traits<std::allocator<char> >::max_size(std::allocator<char> const&)
  0.00      0.18     0.00       54     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
  0.00      0.18     0.00       52     0.00     0.00  std::char_traits<char>::copy(char*, char const*, unsigned long)
  0.00      0.18     0.00       52     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned long)
  0.00      0.18     0.00       51     0.00     0.00  __gnu_cxx::new_allocator<char>::deallocate(char*, unsigned long)
  0.00      0.18     0.00       51     0.00     0.10  __gnu_cxx::new_allocator<char>::allocate(unsigned long, void const*)
  0.00      0.18     0.00       51     0.00     0.00  std::allocator_traits<std::allocator<char> >::deallocate(std::allocator<char>&, char*, unsigned long)
  0.00      0.18     0.00       51     0.00     0.10  std::allocator_traits<std::allocator<char> >::allocate(std::allocator<char>&, unsigned long)
  0.00      0.18     0.00       51     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned long)
  0.00      0.18     0.00       51     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_capacity(unsigned long)
  0.00      0.18     0.00       51     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data(char*)
  0.00      0.18     0.00       51     0.00     0.10  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long)
  0.00      0.18     0.00       32     0.00     0.15  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long)
  0.00      0.18     0.00       19     0.00     0.00  Stack::resizeArray()
  0.00      0.18     0.00       14     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_node_allocator()
  0.00      0.18     0.00       14     0.00     0.00  std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::_M_get()
  0.00      0.18     0.00       12     0.00     0.00  std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&)
  0.00      0.18     0.00       12     0.00     0.00  std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&)
  0.00      0.18     0.00       12     0.00     0.00  std::tuple<char&&>&& std::forward<std::tuple<char&&> >(std::remove_reference<std::tuple<char&&> >::type&)
  0.00      0.18     0.00       12     0.00     0.00  char&& std::forward<char>(std::remove_reference<char>::type&)
  0.00      0.18     0.00        9     0.00     0.00  __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_ptr()
  0.00      0.18     0.00        9     0.00     0.00  __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_addr()
  0.00      0.18     0.00        9     0.00     0.00  std::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const
  0.00      0.18     0.00        9     0.00     0.00  std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  0.00      0.18     0.00        9     0.00     0.00  std::__detail::_Node_iterator_base<std::pair<char const, bool>, false>::_Node_iterator_base(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  0.00      0.18     0.00        9     0.00     0.00  std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_valptr()
  0.00      0.18     0.00        8     0.00     0.00  std::hash<char>::operator()(char) const
  0.00      0.18     0.00        8     0.00     0.00  std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(char const&) const
  0.00      0.18     0.00        8     0.00     0.00  std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash() const
  0.00      0.18     0.00        8     0.00     0.00  std::__detail::_Hashtable_ebo_helper<1, std::hash<char>, true>::_M_cget() const
  0.00      0.18     0.00        7     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(unsigned long) const
  0.00      0.18     0.00        7     0.00     0.00  std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(unsigned long, unsigned long) const
  0.00      0.18     0.00        6     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned long, char const&, unsigned long) const
  0.00      0.18     0.00        6     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, char const&, unsigned long) const
  0.00      0.18     0.00        6     0.00     0.00  operator new(unsigned long, void*)
  0.00      0.18     0.00        5     0.00     0.00  std::__detail::_Hash_node<std::pair<char const, bool>, false>::_M_next() const
  0.00      0.18     0.00        5     0.00     0.00  std::pointer_traits<char*>::pointer_to(char&)
  0.00      0.18     0.00        5     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider()
  0.00      0.18     0.00        5     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
  0.00      0.18     0.00        5     0.00     0.00  char* std::__addressof<char>(char&)
  0.00      0.18     0.00        5     0.00     0.00  char* std::addressof<char>(char&)
  0.00      0.18     0.00        4     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char>&&)
  0.00      0.18     0.00        4     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::end()
  0.00      0.18     0.00        4     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::begin()
  0.00      0.18     0.00        4     0.00     0.00  std::__detail::_Hash_node_base::_Hash_node_base()
  0.00      0.18     0.00        4     0.00     0.00  std::remove_reference<std::allocator<char>&>::type&& std::move<std::allocator<char>&>(std::allocator<char>&)
  0.00      0.18     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::deallocate(std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned long)
  0.00      0.18     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocate(unsigned long, void const*)
  0.00      0.18     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::_M_max_size() const
  0.00      0.18     0.00        3     0.00     0.00  std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::operator->() const
  0.00      0.18     0.00        3     0.00     0.00  std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_node_code_cache<false>&, unsigned long) const
  0.00      0.18     0.00        3     0.00     0.00  std::__detail::_Prime_rehash_policy::_M_state() const
  0.00      0.18     0.00        3     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&)
  0.00      0.18     0.00        3     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::~_Scoped_node()
  0.00      0.18     0.00        3     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned long)
  0.00      0.18     0.00        3     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  0.00      0.18     0.00        3     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::end()
  0.00      0.18     0.00        3     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(char const&)
  0.00      0.18     0.00        3     0.00     0.00  std::_Head_base<0ul, char&&, false>::_M_head(std::_Head_base<0ul, char&&, false>&)
  0.00      0.18     0.00        3     0.00     0.00  std::_Head_base<0ul, char&&, false>::_Head_base<char>(char&&)
  0.00      0.18     0.00        3     0.00     0.00  std::_Tuple_impl<0ul, char&&>::_M_head(std::_Tuple_impl<0ul, char&&>&)
  0.00      0.18     0.00        3     0.00     0.00  std::_Tuple_impl<0ul, char&&>::_Tuple_impl<char>(char&&)
  0.00      0.18     0.00        3     0.00     0.00  std::_Tuple_impl<0ul, char&&>::_Tuple_impl(std::_Tuple_impl<0ul, char&&>&&)
  0.00      0.18     0.00        3     0.00     0.00  std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::end()
  0.00      0.18     0.00        3     0.00     0.00  std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::find(char const&)
  0.00      0.18     0.00        3     0.00     0.00  std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::operator[](char&&)
  0.00      0.18     0.00        3     0.00     0.00  std::pointer_traits<std::__detail::_Hash_node<std::pair<char const, bool>, false>*>::pointer_to(std::__detail::_Hash_node<std::pair<char const, bool>, false>&)
  0.00      0.18     0.00        3     0.00     0.00  std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned long)
  0.00      0.18     0.00        3     0.00     0.00  void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::destroy<std::pair<char const, bool> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*)
  0.00      0.18     0.00        3     0.00     0.00  std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, unsigned long)
  0.00      0.18     0.00        3     0.00     0.00  void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::construct<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&)
  0.00      0.18     0.00        3     0.00     0.00  std::pair<char const, bool>::pair<char&&, 0ul>(std::tuple<char&&>&, std::tuple<>&, std::_Index_tuple<0ul>, std::_Index_tuple<>)
  0.00      0.18     0.00        3     0.00     0.00  std::pair<char const, bool>::pair<char&&>(std::piecewise_construct_t, std::tuple<char&&>, std::tuple<>)
  0.00      0.18     0.00        3     0.00     0.00  std::tuple<char&&>::tuple(std::tuple<char&&>&&)
  0.00      0.18     0.00        3     0.00     0.00  std::tuple<char&&>::tuple<char, true, true>(char&&)
  0.00      0.18     0.00        3     0.00     0.00  std::__detail::_Hash_node<std::pair<char const, bool>, false>::_Hash_node()
  0.00      0.18     0.00        3     0.00     0.00  std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&)
  0.00      0.18     0.00        3     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  0.00      0.18     0.00        3     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  0.00      0.18     0.00        3     0.00     0.00  std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&)
  0.00      0.18     0.00        3     0.00     0.00  std::__detail::operator==(std::__detail::_Node_iterator_base<std::pair<char const, bool>, false> const&, std::__detail::_Node_iterator_base<std::pair<char const, bool>, false> const&)
  0.00      0.18     0.00        3     0.00     0.00  void std::destroy_at<std::pair<char const, bool> >(std::pair<char const, bool>*)
  0.00      0.18     0.00        3     0.00     0.00  std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__addressof<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>&)
  0.00      0.18     0.00        3     0.00     0.00  char& std::__get_helper<0ul, char&&>(std::_Tuple_impl<0ul, char&&>&)
  0.00      0.18     0.00        3     0.00     0.00  std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__to_address<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  0.00      0.18     0.00        3     0.00     0.00  decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&)
  0.00      0.18     0.00        3     0.00     0.00  std::tuple<char&&> std::forward_as_tuple<char>(char&&)
  0.00      0.18     0.00        3     0.00     0.00  std::tuple_element<0ul, std::tuple<char&&> >::type& std::get<0ul, char&&>(std::tuple<char&&>&)
  0.00      0.18     0.00        3     0.00     0.00  char&& std::forward<char&&>(std::remove_reference<char&&>::type&)
  0.00      0.18     0.00        3     0.00     0.00  std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::addressof<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>&)
  0.00      0.18     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::new_allocator()
  0.00      0.18     0.00        2     0.00     0.00  __gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy(std::allocator<char> const&)
  0.00      0.18     0.00        2     0.00     0.00  bool __gnu_cxx::__is_null_pointer<char>(char*)
  0.00      0.18     0.00        2     0.00     0.00  __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_ptr() const
  0.00      0.18     0.00        2     0.00     0.00  __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_addr() const
  0.00      0.18     0.00        2     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(std::__detail::_Hash_node_value<std::pair<char const, bool>, false> const&) const
  0.00      0.18     0.00        2     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_uses_single_bucket(std::__detail::_Hash_node_base**) const
  0.00      0.18     0.00        2     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const
  0.00      0.18     0.00        2     0.00     0.00  decltype ((get<0>)((forward<std::pair<char const, bool> const&>)({parm#1}))) std::__detail::_Select1st::operator()<std::pair<char const, bool> const&>(std::pair<char const, bool> const&) const
  0.00      0.18     0.00        2     0.00     0.00  std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node_value<std::pair<char const, bool>, false> const&, unsigned long) const
  0.00      0.18     0.00        2     0.00     0.00  std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_v() const
  0.00      0.18     0.00        2     0.00     0.00  std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_valptr() const
  0.00      0.18     0.00        2     0.00     0.00  std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > const&)
  0.00      0.18     0.00        2     0.00     0.00  std::allocator<std::__detail::_Hash_node_base*>::~allocator()
  0.00      0.18     0.00        2     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long)
  0.00      0.18     0.00        2     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets()
  0.00      0.18     0.00        2     0.00     0.00  char const& std::__pair_get<0ul>::__const_get<char const, bool>(std::pair<char const, bool> const&)
  0.00      0.18     0.00        2     0.00     0.00  std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction(std::allocator<char> const&)
  0.00      0.18     0.00        2     0.00     0.10  void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*)
  0.00      0.18     0.00        2     0.00     0.10  void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)
  0.00      0.18     0.00        2     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*)
  0.00      0.18     0.00        2     0.00     0.10  void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type)
  0.00      0.18     0.00        2     0.00     1.10  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      0.18     0.00        2     0.00     1.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string()
  0.00      0.18     0.00        2     0.00     0.00  std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag)
  0.00      0.18     0.00        2     0.00     0.00  std::iterator_traits<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
  0.00      0.18     0.00        2     0.00     0.00  std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&)
  0.00      0.18     0.00        2     0.00     0.00  std::tuple_element<0ul, std::pair<char const, bool> >::type const& std::get<0ul, char const, bool>(std::pair<char const, bool> const&)
  0.00      0.18     0.00        2     0.00     0.00  std::pair<char const, bool> const& std::forward<std::pair<char const, bool> const&>(std::remove_reference<std::pair<char const, bool> const&>::type&)
  0.00      0.18     0.00        2     0.00    24.64  void std::reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
  0.00      0.18     0.00        2     0.00     0.00  std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*)
  0.00      0.18     0.00        1     0.00     0.00  getNodeHeight(ParseTree*)
  0.00      0.18     0.00        1     0.00    95.90  infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
  0.00      0.18     0.00        1     0.00    20.90  parseTreeToInfix[abi:cxx11](ParseTree*)
  0.00      0.18     0.00        1     0.00     0.00  getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*)
  0.00      0.18     0.00        1     0.00    50.00  prefixToParseTree(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
  0.00      0.18     0.00        1     0.00     0.00  getBinaryTreeHeight(ParseTree*)
  0.00      0.18     0.00        1     0.00     0.00  evaluateTreeTruthValue(ParseTree*)
  0.00      0.18     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.18     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.18     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.18     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.18     0.00        1     0.00     0.00  Stack::Stack()
  0.00      0.18     0.00        1     0.00     0.00  Stack::~Stack()
  0.00      0.18     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::new_allocator()
  0.00      0.18     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::deallocate(std::__detail::_Hash_node_base**, unsigned long)
  0.00      0.18     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*)
  0.00      0.18     0.00        1     0.00     0.00  bool __gnu_cxx::__is_null_pointer<char const>(char const*)
  0.00      0.18     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::_M_max_size() const
  0.00      0.18     0.00        1     0.00     0.00  std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocator()
  0.00      0.18     0.00        1     0.00     0.00  std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::~allocator()
  0.00      0.18     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)
  0.00      0.18     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned long)
  0.00      0.18     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear()
  0.00      0.18     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&)
  0.00      0.18     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable()
  0.00      0.18     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable()
  0.00      0.18     0.00        1     0.00     0.00  std::char_traits<char>::length(char const*)
  0.00      0.18     0.00        1     0.00     0.00  std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::unordered_map()
  0.00      0.18     0.00        1     0.00     0.00  std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::~unordered_map()
  0.00      0.18     0.00        1     0.00     0.00  std::pointer_traits<std::__detail::_Hash_node_base**>::pointer_to(std::__detail::_Hash_node_base*&)
  0.00      0.18     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate(std::allocator<std::__detail::_Hash_node_base*>&, std::__detail::_Hash_node_base**, unsigned long)
  0.00      0.18     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long)
  0.00      0.18     0.00        1     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char> const&)
  0.00      0.18     0.00        1     0.00     0.00  void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
  0.00      0.18     0.00        1     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
  0.00      0.18     0.00        1     0.00     1.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
  0.00      0.18     0.00        1     0.00     0.00  std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_Hash_code_base()
  0.00      0.18     0.00        1     0.00     0.00  std::__detail::_Hashtable_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable_base()
  0.00      0.18     0.00        1     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_buckets(unsigned long)
  0.00      0.18     0.00        1     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  0.00      0.18     0.00        1     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long)
  0.00      0.18     0.00        1     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_Hashtable_alloc()
  0.00      0.18     0.00        1     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::~_Hashtable_alloc()
  0.00      0.18     0.00        1     0.00     0.00  std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float)
  0.00      0.18     0.00        1     0.00     0.00  std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::_Hashtable_ebo_helper()
  0.00      0.18     0.00        1     0.00     0.00  std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::~_Hashtable_ebo_helper()
  0.00      0.18     0.00        1     0.00     0.00  std::__detail::_Hashtable_ebo_helper<0, std::equal_to<char>, true>::_Hashtable_ebo_helper()
  0.00      0.18     0.00        1     0.00     0.00  std::__detail::_Hashtable_ebo_helper<1, std::hash<char>, true>::_Hashtable_ebo_helper()
  0.00      0.18     0.00        1     0.00     0.00  std::iterator_traits<char const*>::difference_type std::__distance<char const*>(char const*, char const*, std::random_access_iterator_tag)
  0.00      0.18     0.00        1     0.00     0.00  std::__detail::_Hash_node_base** std::__addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&)
  0.00      0.18     0.00        1     0.00     0.00  std::__detail::_Hash_node_base** std::__to_address<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base**)
  0.00      0.18     0.00        1     0.00     0.00  std::iterator_traits<char const*>::iterator_category std::__iterator_category<char const*>(char const* const&)
  0.00      0.18     0.00        1     0.00     0.00  std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*)
  0.00      0.18     0.00        1     0.00     0.00  std::__detail::_Hash_node_base** std::addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2022 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 4 byte(s) for 5.56% of 0.18 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]    100.0    0.00    0.18                 main [1]
                0.00    0.10       1/1           infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
                0.00    0.05       1/1           prefixToParseTree(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [3]
                0.00    0.02       1/1           parseTreeToInfix[abi:cxx11](ParseTree*) [8]
                0.01    0.00       1/1           ParseTree::~ParseTree() [23]
                0.00    0.00       2/2           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [35]
                0.00    0.00       1/2           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string() [36]
                0.00    0.00       5/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() [44]
                0.00    0.00       1/1           evaluateTreeTruthValue(ParseTree*) [47]
                0.00    0.00       1/1           getBinaryTreeHeight(ParseTree*) [184]
-----------------------------------------------
                0.00    0.10       1/1           main [1]
[2]     53.3    0.00    0.10       1         infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
                0.00    0.05       2/2           void std::reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [5]
                0.02    0.00 1333334/2000003     bool __gnu_cxx::operator==<char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [7]
                0.01    0.00  666666/666666      Stack::push(char) [22]
                0.00    0.01  666667/666667      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char) [24]
                0.01    0.00 1333333/2333332     __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++() [14]
                0.00    0.00       1/2           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string() [36]
                0.00    0.00       3/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::end() [49]
                0.00    0.00       3/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::begin() [50]
                0.00    0.00 1333333/4666665     __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const [59]
                0.00    0.00  666666/666666      Stack::pop() [71]
                0.00    0.00       1/1           Stack::Stack() [189]
                0.00    0.00       1/1           Stack::~Stack() [190]
-----------------------------------------------
                0.00    0.05       1/1           main [1]
[3]     27.8    0.00    0.05       1         prefixToParseTree(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [3]
                0.03    0.02       1/1           createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [4]
                0.00    0.00       1/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::begin() [50]
                0.00    0.00       1/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::end() [49]
-----------------------------------------------
                              666666             createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [4]
                0.03    0.02       1/1           prefixToParseTree(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [3]
[4]     27.8    0.03    0.02       1+666666  createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [4]
                0.01    0.00  666667/666667      __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++(int) [21]
                0.01    0.00  666667/2000003     bool __gnu_cxx::operator==<char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [7]
                0.00    0.00 1333334/4666665     __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const [59]
                0.00    0.00  666667/666667      ParseTree::ParseTree(char) [69]
                0.00    0.00  333333/333333      ParseTree::setLeftNode(ParseTree*) [72]
                0.00    0.00  333333/333333      ParseTree::setRightNode(ParseTree*) [73]
                              666666             createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [4]
-----------------------------------------------
                0.00    0.05       2/2           infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
[5]     27.4    0.00    0.05       2         void std::reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [5]
                0.01    0.04       2/2           void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag) [6]
                0.00    0.00       2/2           std::iterator_traits<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [178]
-----------------------------------------------
                0.01    0.04       2/2           void std::reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [5]
[6]     27.4    0.01    0.04       2         void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag) [6]
                0.01    0.01 1000001/1000001     decltype (std::__detail::__synth3way((declval<char*&>)(), (declval<char*&>)())) __gnu_cxx::operator<=><char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [9]
                0.01    0.00 1000001/1000001     std::__cmp_cat::__unspec::__unspec(std::__cmp_cat::__unspec*) [20]
                0.00    0.00  999999/999999      void std::iter_swap<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [33]
                0.00    0.00  999999/2333332     __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++() [14]
                0.00    0.00       2/2000003     bool __gnu_cxx::operator==<char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [7]
                0.00    0.00 1000001/1000001     __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator--() [65]
                0.00    0.00 1000001/1000001     std::operator<(std::strong_ordering, std::__cmp_cat::__unspec) [66]
-----------------------------------------------
                0.00    0.00       2/2000003     void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag) [6]
                0.01    0.00  666667/2000003     createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [4]
                0.02    0.00 1333334/2000003     infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
[7]     16.7    0.03    0.00 2000003         bool __gnu_cxx::operator==<char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [7]
                0.00    0.00 4000006/6000008     __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const [58]
-----------------------------------------------
                0.00    0.02       1/1           main [1]
[8]     11.6    0.00    0.02       1         parseTreeToInfix[abi:cxx11](ParseTree*) [8]
                0.01    0.01       1/1           inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [10]
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [38]
-----------------------------------------------
                0.01    0.01 1000001/1000001     void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag) [6]
[9]     11.1    0.01    0.01 1000001         decltype (std::__detail::__synth3way((declval<char*&>)(), (declval<char*&>)())) __gnu_cxx::operator<=><char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [9]
                0.01    0.00 1000001/1000001     auto std::__detail::_Synth3way::operator()<char*, char*>(char* const&, char* const&) const [19]
                0.00    0.00 2000002/6000008     __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const [58]
-----------------------------------------------
                              666666             inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [10]
                0.01    0.01       1/1           parseTreeToInfix[abi:cxx11](ParseTree*) [8]
[10]    11.1    0.01    0.01       1+666666  inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [10]
                0.00    0.01  666667/1333334     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [11]
                0.00    0.00 1000000/1666670     ParseTree::getLeftNode(ParseTree*) [61]
                0.00    0.00 1000000/1666669     ParseTree::getRightNode(ParseTree*) [62]
                0.00    0.00  666667/666679      ParseTree::getValue() [67]
                              666666             inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [10]
-----------------------------------------------
                0.00    0.01  666667/1333334     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char) [24]
                0.00    0.01  666667/1333334     inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [10]
[11]    11.0    0.00    0.02 1333334         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [11]
                0.00    0.01 1333334/1333383     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const [13]
                0.00    0.00      32/32          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) [34]
                0.00    0.00 1333334/4000225     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [31]
                0.00    0.00 1333334/1333339     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned long) [37]
                0.00    0.00 1333334/1333338     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size() const [64]
                0.00    0.00 1333334/2666673     std::char_traits<char>::assign(char&, char const&) [60]
-----------------------------------------------
                0.00    0.00      54/1333437     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [42]
                0.00    0.01 1333383/1333437     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const [13]
[12]     6.5    0.00    0.01 1333437         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const [12]
                0.00    0.01 1333437/1333437     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() const [15]
                0.00    0.00 1333437/4000225     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [31]
-----------------------------------------------
                0.00    0.00      49/1333383     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) [34]
                0.00    0.01 1333334/1333383     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [11]
[13]     6.5    0.00    0.01 1333383         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const [13]
                0.00    0.01 1333383/1333437     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const [12]
-----------------------------------------------
                0.00    0.00  999999/2333332     void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag) [6]
                0.01    0.00 1333333/2333332     infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
[14]     5.6    0.01    0.00 2333332         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++() [14]
-----------------------------------------------
                0.00    0.01 1333437/1333437     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const [12]
[15]     5.6    0.00    0.01 1333437         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() const [15]
                0.00    0.01 1333437/1333437     std::pointer_traits<char const*>::pointer_to(char const&) [16]
-----------------------------------------------
                0.00    0.01 1333437/1333437     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() const [15]
[16]     5.6    0.00    0.01 1333437         std::pointer_traits<char const*>::pointer_to(char const&) [16]
                0.00    0.01 1333437/1333437     char const* std::addressof<char const>(char const&) [18]
-----------------------------------------------
                0.01    0.00 1333437/1333437     char const* std::addressof<char const>(char const&) [18]
[17]     5.6    0.01    0.00 1333437         char const* std::__addressof<char const>(char const&) [17]
-----------------------------------------------
                0.00    0.01 1333437/1333437     std::pointer_traits<char const*>::pointer_to(char const&) [16]
[18]     5.6    0.00    0.01 1333437         char const* std::addressof<char const>(char const&) [18]
                0.01    0.00 1333437/1333437     char const* std::__addressof<char const>(char const&) [17]
-----------------------------------------------
                0.01    0.00 1000001/1000001     decltype (std::__detail::__synth3way((declval<char*&>)(), (declval<char*&>)())) __gnu_cxx::operator<=><char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [9]
[19]     5.6    0.01    0.00 1000001         auto std::__detail::_Synth3way::operator()<char*, char*>(char* const&, char* const&) const [19]
-----------------------------------------------
                0.01    0.00 1000001/1000001     void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag) [6]
[20]     5.6    0.01    0.00 1000001         std::__cmp_cat::__unspec::__unspec(std::__cmp_cat::__unspec*) [20]
-----------------------------------------------
                0.01    0.00  666667/666667      createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [4]
[21]     5.6    0.01    0.00  666667         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++(int) [21]
                0.00    0.00  666667/666675      __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__normal_iterator(char* const&) [68]
-----------------------------------------------
                0.01    0.00  666666/666666      infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
[22]     5.6    0.01    0.00  666666         Stack::push(char) [22]
                0.00    0.00      19/19          Stack::resizeArray() [86]
-----------------------------------------------
                              666666             ParseTree::~ParseTree() [23]
                0.01    0.00       1/1           main [1]
[23]     5.6    0.01    0.00       1+666666  ParseTree::~ParseTree() [23]
                              666666             ParseTree::~ParseTree() [23]
-----------------------------------------------
                0.00    0.01  666667/666667      infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
[24]     5.5    0.00    0.01  666667         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char) [24]
                0.00    0.01  666667/1333334     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [11]
-----------------------------------------------
                0.00    0.00       3/3000003     std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::operator[](char&&) [45]
                0.00    0.00       3/3000003     std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [48]
                0.00    0.00 2999997/3000003     std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<char> >, std::is_move_constructible<char>, std::is_move_assignable<char> >::value, void>::type std::swap<char>(char&, char&) [32]
[25]     2.8    0.01    0.00 3000003         std::remove_reference<char&>::type&& std::move<char&>(char&) [25]
-----------------------------------------------
                0.00    0.01      51/51          std::allocator_traits<std::allocator<char> >::allocate(std::allocator<char>&, unsigned long) [28]
[26]     2.8    0.00    0.01      51         __gnu_cxx::new_allocator<char>::allocate(unsigned long, void const*) [26]
                0.01    0.00      51/51          __gnu_cxx::new_allocator<char>::_M_max_size() const [27]
-----------------------------------------------
                0.01    0.00      51/51          __gnu_cxx::new_allocator<char>::allocate(unsigned long, void const*) [26]
[27]     2.8    0.01    0.00      51         __gnu_cxx::new_allocator<char>::_M_max_size() const [27]
-----------------------------------------------
                0.00    0.01      51/51          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long) [29]
[28]     2.8    0.00    0.01      51         std::allocator_traits<std::allocator<char> >::allocate(std::allocator<char>&, unsigned long) [28]
                0.00    0.01      51/51          __gnu_cxx::new_allocator<char>::allocate(unsigned long, void const*) [26]
                0.00    0.00      51/161         std::is_constant_evaluated() [74]
-----------------------------------------------
                0.00    0.00       2/51          void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [40]
                0.00    0.00      49/51          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) [34]
[29]     2.8    0.00    0.01      51         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long) [29]
                0.00    0.01      51/51          std::allocator_traits<std::allocator<char> >::allocate(std::allocator<char>&, unsigned long) [28]
                0.00    0.00     100/100         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::max_size() const [78]
                0.00    0.00      51/102         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() [76]
-----------------------------------------------
                0.00    0.00       1/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [38]
                0.00    0.00       2/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string() [36]
                0.00    0.00       2/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [35]
[30]     2.8    0.01    0.00       5         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() [30]
                0.00    0.00       5/5           std::pointer_traits<char*>::pointer_to(char&) [109]
-----------------------------------------------
                0.00    0.00       1/4000225     void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [51]
                0.00    0.00       2/4000225     void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [40]
                0.00    0.00       4/4000225     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::begin() [50]
                0.00    0.00       4/4000225     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::end() [49]
                0.00    0.00       4/4000225     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [35]
                0.00    0.00      49/4000225     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) [34]
                0.00    0.00      51/4000225     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned long) [43]
                0.00    0.00 1333334/4000225     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [11]
                0.00    0.00 1333339/4000225     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned long) [37]
                0.00    0.00 1333437/4000225     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const [12]
[31]     2.8    0.00    0.00 4000225         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [31]
-----------------------------------------------
                0.00    0.00  999999/999999      void std::iter_swap<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [33]
[32]     2.8    0.00    0.00  999999         std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<char> >, std::is_move_constructible<char>, std::is_move_assignable<char> >::value, void>::type std::swap<char>(char&, char&) [32]
                0.00    0.00 2999997/3000003     std::remove_reference<char&>::type&& std::move<char&>(char&) [25]
-----------------------------------------------
                0.00    0.00  999999/999999      void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag) [6]
[33]     2.8    0.00    0.00  999999         void std::iter_swap<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [33]
                0.00    0.00  999999/999999      std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<char> >, std::is_move_constructible<char>, std::is_move_assignable<char> >::value, void>::type std::swap<char>(char&, char&) [32]
                0.00    0.00 1999998/4666665     __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const [59]
-----------------------------------------------
                0.00    0.00      32/32          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [11]
[34]     2.7    0.00    0.00      32         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) [34]
                0.00    0.00      49/51          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long) [29]
                0.00    0.00      49/54          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [42]
                0.00    0.00      49/1333383     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const [13]
                0.00    0.00      49/4000225     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [31]
                0.00    0.00      98/100         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::length() const [77]
                0.00    0.00      49/52          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned long) [81]
                0.00    0.00      49/51          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data(char*) [85]
                0.00    0.00      49/51          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_capacity(unsigned long) [84]
-----------------------------------------------
                0.00    0.00       2/2           main [1]
[35]     1.2    0.00    0.00       2         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [35]
                0.00    0.00       2/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() [30]
                0.00    0.00       2/2           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*) [39]
                0.00    0.00       4/4000225     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [31]
                0.00    0.00       2/102         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() const [75]
                0.00    0.00       2/2           __gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy(std::allocator<char> const&) [159]
                0.00    0.00       2/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char>&&) [113]
                0.00    0.00       2/100         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::length() const [77]
-----------------------------------------------
                0.00    0.00       1/2           infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
                0.00    0.00       1/2           main [1]
[36]     1.1    0.00    0.00       2         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string() [36]
                0.00    0.00       2/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() [30]
                0.00    0.00       2/1333339     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned long) [37]
                0.00    0.00       2/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char>&&) [113]
-----------------------------------------------
                0.00    0.00       1/1333339     void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [51]
                0.00    0.00       2/1333339     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string() [36]
                0.00    0.00       2/1333339     void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [40]
                0.00    0.00 1333334/1333339     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [11]
[37]     0.9    0.00    0.00 1333339         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned long) [37]
                0.00    0.00 1333339/4000225     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [31]
                0.00    0.00 1333339/1333339     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_length(unsigned long) [63]
                0.00    0.00 1333339/2666673     std::char_traits<char>::assign(char&, char const&) [60]
-----------------------------------------------
                0.00    0.00       1/1           parseTreeToInfix[abi:cxx11](ParseTree*) [8]
[38]     0.6    0.00    0.00       1         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [38]
                0.00    0.00       1/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() [30]
                0.00    0.00       1/1           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [51]
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char> const&) [210]
                0.00    0.00       1/1           std::char_traits<char>::length(char const*) [204]
-----------------------------------------------
                0.00    0.00       2/2           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [35]
[39]     0.1    0.00    0.00       2         void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*) [39]
                0.00    0.00       2/2           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type) [41]
-----------------------------------------------
                0.00    0.00       2/2           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type) [41]
[40]     0.1    0.00    0.00       2         void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [40]
                0.00    0.00       2/51          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long) [29]
                0.00    0.00       2/1333339     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned long) [37]
                0.00    0.00       2/4000225     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [31]
                0.00    0.00       2/2           bool __gnu_cxx::__is_null_pointer<char>(char*) [160]
                0.00    0.00       2/2           std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*) [182]
                0.00    0.00       2/51          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data(char*) [85]
                0.00    0.00       2/51          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_capacity(unsigned long) [84]
                0.00    0.00       2/2           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*) [176]
-----------------------------------------------
                0.00    0.00       2/2           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*) [39]
[41]     0.1    0.00    0.00       2         void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type) [41]
                0.00    0.00       2/2           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [40]
-----------------------------------------------
                0.00    0.00       5/54          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() [44]
                0.00    0.00      49/54          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) [34]
[42]     0.0    0.00    0.00      54         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [42]
                0.00    0.00      54/1333437     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const [12]
                0.00    0.00      51/51          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned long) [43]
-----------------------------------------------
                0.00    0.00      51/51          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [42]
[43]     0.0    0.00    0.00      51         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned long) [43]
                0.00    0.00      51/4000225     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [31]
                0.00    0.00      51/102         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() [76]
                0.00    0.00      51/51          std::allocator_traits<std::allocator<char> >::deallocate(std::allocator<char>&, char*, unsigned long) [83]
-----------------------------------------------
                0.00    0.00       5/5           main [1]
[44]     0.0    0.00    0.00       5         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() [44]
                0.00    0.00       5/54          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [42]
                0.00    0.00       5/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider() [110]
-----------------------------------------------
                0.00    0.00       3/3           getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [46]
[45]     0.0    0.00    0.00       3         std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::operator[](char&&) [45]
                0.00    0.00       3/3           std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [48]
                0.00    0.00       3/3000003     std::remove_reference<char&>::type&& std::move<char&>(char&) [25]
-----------------------------------------------
                                   5             getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [46]
                0.00    0.00       1/1           evaluateTreeTruthValue(ParseTree*) [47]
[46]     0.0    0.00    0.00       1+5       getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [46]
                0.00    0.00       3/3           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::operator[](char&&) [45]
                0.00    0.00      12/666679      ParseTree::getValue() [67]
                0.00    0.00       3/1666670     ParseTree::getLeftNode(ParseTree*) [61]
                0.00    0.00       3/3           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::end() [133]
                0.00    0.00       3/3           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::find(char const&) [134]
                0.00    0.00       3/3           std::__detail::operator==(std::__detail::_Node_iterator_base<std::pair<char const, bool>, false> const&, std::__detail::_Node_iterator_base<std::pair<char const, bool>, false> const&) [148]
                0.00    0.00       2/1666669     ParseTree::getRightNode(ParseTree*) [62]
                                   5             getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [46]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[47]     0.0    0.00    0.00       1         evaluateTreeTruthValue(ParseTree*) [47]
                0.00    0.00       1/1           getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [46]
                0.00    0.00       1/1           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::unordered_map() [205]
                0.00    0.00       1/1           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::~unordered_map() [206]
-----------------------------------------------
                0.00    0.00       3/3           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::operator[](char&&) [45]
[48]     0.0    0.00    0.00       3         std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [48]
                0.00    0.00       3/3000003     std::remove_reference<char&>::type&& std::move<char&>(char&) [25]
                0.00    0.00       3/8           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(char const&) const [100]
                0.00    0.00       3/7           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(unsigned long) const [103]
                0.00    0.00       3/6           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned long, char const&, unsigned long) const [105]
                0.00    0.00       3/3           std::tuple<char&&> std::forward_as_tuple<char>(char&&) [154]
                0.00    0.00       3/3           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [122]
                0.00    0.00       3/3           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned long) [124]
                0.00    0.00       3/3           std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::operator->() const [119]
                0.00    0.00       3/3           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::~_Scoped_node() [123]
-----------------------------------------------
                0.00    0.00       1/4           prefixToParseTree(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [3]
                0.00    0.00       3/4           infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
[49]     0.0    0.00    0.00       4         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::end() [49]
                0.00    0.00       4/4000225     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [31]
                0.00    0.00       4/1333338     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size() const [64]
                0.00    0.00       4/666675      __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__normal_iterator(char* const&) [68]
-----------------------------------------------
                0.00    0.00       1/4           prefixToParseTree(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [3]
                0.00    0.00       3/4           infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
[50]     0.0    0.00    0.00       4         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::begin() [50]
                0.00    0.00       4/4000225     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [31]
                0.00    0.00       4/666675      __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__normal_iterator(char* const&) [68]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [38]
[51]     0.0    0.00    0.00       1         void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [51]
                0.00    0.00       1/1333339     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned long) [37]
                0.00    0.00       1/4000225     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [31]
                0.00    0.00       1/1           bool __gnu_cxx::__is_null_pointer<char const>(char const*) [194]
                0.00    0.00       1/1           std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*) [228]
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*) [211]
-----------------------------------------------
                0.00    0.00 2000002/6000008     decltype (std::__detail::__synth3way((declval<char*&>)(), (declval<char*&>)())) __gnu_cxx::operator<=><char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [9]
                0.00    0.00 4000006/6000008     bool __gnu_cxx::operator==<char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [7]
[58]     0.0    0.00    0.00 6000008         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const [58]
-----------------------------------------------
                0.00    0.00 1333333/4666665     infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
                0.00    0.00 1333334/4666665     createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [4]
                0.00    0.00 1999998/4666665     void std::iter_swap<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [33]
[59]     0.0    0.00    0.00 4666665         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const [59]
-----------------------------------------------
                0.00    0.00 1333334/2666673     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [11]
                0.00    0.00 1333339/2666673     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned long) [37]
[60]     0.0    0.00    0.00 2666673         std::char_traits<char>::assign(char&, char const&) [60]
-----------------------------------------------
                0.00    0.00       3/1666670     getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [46]
                0.00    0.00  666667/1666670     getNodeHeight(ParseTree*) [183]
                0.00    0.00 1000000/1666670     inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [10]
[61]     0.0    0.00    0.00 1666670         ParseTree::getLeftNode(ParseTree*) [61]
-----------------------------------------------
                0.00    0.00       2/1666669     getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [46]
                0.00    0.00  666667/1666669     getNodeHeight(ParseTree*) [183]
                0.00    0.00 1000000/1666669     inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [10]
[62]     0.0    0.00    0.00 1666669         ParseTree::getRightNode(ParseTree*) [62]
-----------------------------------------------
                0.00    0.00 1333339/1333339     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned long) [37]
[63]     0.0    0.00    0.00 1333339         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_length(unsigned long) [63]
-----------------------------------------------
                0.00    0.00       4/1333338     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::end() [49]
                0.00    0.00 1333334/1333338     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [11]
[64]     0.0    0.00    0.00 1333338         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size() const [64]
-----------------------------------------------
                0.00    0.00 1000001/1000001     void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag) [6]
[65]     0.0    0.00    0.00 1000001         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator--() [65]
-----------------------------------------------
                0.00    0.00 1000001/1000001     void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag) [6]
[66]     0.0    0.00    0.00 1000001         std::operator<(std::strong_ordering, std::__cmp_cat::__unspec) [66]
-----------------------------------------------
                0.00    0.00      12/666679      getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [46]
                0.00    0.00  666667/666679      inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [10]
[67]     0.0    0.00    0.00  666679         ParseTree::getValue() [67]
-----------------------------------------------
                0.00    0.00       4/666675      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::begin() [50]
                0.00    0.00       4/666675      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::end() [49]
                0.00    0.00  666667/666675      __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++(int) [21]
[68]     0.0    0.00    0.00  666675         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__normal_iterator(char* const&) [68]
-----------------------------------------------
                0.00    0.00  666667/666667      createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [4]
[69]     0.0    0.00    0.00  666667         ParseTree::ParseTree(char) [69]
-----------------------------------------------
                0.00    0.00  666667/666667      getNodeHeight(ParseTree*) [183]
[70]     0.0    0.00    0.00  666667         long long const& std::max<long long>(long long const&, long long const&) [70]
-----------------------------------------------
                0.00    0.00  666666/666666      infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
[71]     0.0    0.00    0.00  666666         Stack::pop() [71]
-----------------------------------------------
                0.00    0.00  333333/333333      createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [4]
[72]     0.0    0.00    0.00  333333         ParseTree::setLeftNode(ParseTree*) [72]
-----------------------------------------------
                0.00    0.00  333333/333333      createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [4]
[73]     0.0    0.00    0.00  333333         ParseTree::setRightNode(ParseTree*) [73]
-----------------------------------------------
                0.00    0.00       1/161         std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate(std::allocator<std::__detail::_Hash_node_base*>&, std::__detail::_Hash_node_base**, unsigned long) [208]
                0.00    0.00       1/161         std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) [209]
                0.00    0.00       3/161         std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, unsigned long) [138]
                0.00    0.00       3/161         std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned long) [136]
                0.00    0.00      51/161         std::char_traits<char>::copy(char*, char const*, unsigned long) [80]
                0.00    0.00      51/161         std::allocator_traits<std::allocator<char> >::allocate(std::allocator<char>&, unsigned long) [28]
                0.00    0.00      51/161         std::allocator_traits<std::allocator<char> >::deallocate(std::allocator<char>&, char*, unsigned long) [83]
[74]     0.0    0.00    0.00     161         std::is_constant_evaluated() [74]
-----------------------------------------------
                0.00    0.00       2/102         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [35]
                0.00    0.00     100/102         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::max_size() const [78]
[75]     0.0    0.00    0.00     102         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() const [75]
-----------------------------------------------
                0.00    0.00      51/102         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long) [29]
                0.00    0.00      51/102         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned long) [43]
[76]     0.0    0.00    0.00     102         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() [76]
-----------------------------------------------
                0.00    0.00       2/100         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [35]
                0.00    0.00      98/100         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) [34]
[77]     0.0    0.00    0.00     100         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::length() const [77]
-----------------------------------------------
                0.00    0.00     100/100         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long) [29]
[78]     0.0    0.00    0.00     100         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::max_size() const [78]
                0.00    0.00     100/100         std::allocator_traits<std::allocator<char> >::max_size(std::allocator<char> const&) [79]
                0.00    0.00     100/102         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() const [75]
-----------------------------------------------
                0.00    0.00     100/100         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::max_size() const [78]
[79]     0.0    0.00    0.00     100         std::allocator_traits<std::allocator<char> >::max_size(std::allocator<char> const&) [79]
-----------------------------------------------
                0.00    0.00      52/52          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned long) [81]
[80]     0.0    0.00    0.00      52         std::char_traits<char>::copy(char*, char const*, unsigned long) [80]
                0.00    0.00      51/161         std::is_constant_evaluated() [74]
-----------------------------------------------
                0.00    0.00       1/52          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*) [211]
                0.00    0.00       2/52          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*) [176]
                0.00    0.00      49/52          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) [34]
[81]     0.0    0.00    0.00      52         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned long) [81]
                0.00    0.00      52/52          std::char_traits<char>::copy(char*, char const*, unsigned long) [80]
-----------------------------------------------
                0.00    0.00      51/51          std::allocator_traits<std::allocator<char> >::deallocate(std::allocator<char>&, char*, unsigned long) [83]
[82]     0.0    0.00    0.00      51         __gnu_cxx::new_allocator<char>::deallocate(char*, unsigned long) [82]
-----------------------------------------------
                0.00    0.00      51/51          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned long) [43]
[83]     0.0    0.00    0.00      51         std::allocator_traits<std::allocator<char> >::deallocate(std::allocator<char>&, char*, unsigned long) [83]
                0.00    0.00      51/161         std::is_constant_evaluated() [74]
                0.00    0.00      51/51          __gnu_cxx::new_allocator<char>::deallocate(char*, unsigned long) [82]
-----------------------------------------------
                0.00    0.00       2/51          void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [40]
                0.00    0.00      49/51          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) [34]
[84]     0.0    0.00    0.00      51         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_capacity(unsigned long) [84]
-----------------------------------------------
                0.00    0.00       2/51          void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [40]
                0.00    0.00      49/51          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) [34]
[85]     0.0    0.00    0.00      51         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data(char*) [85]
-----------------------------------------------
                0.00    0.00      19/19          Stack::push(char) [22]
[86]     0.0    0.00    0.00      19         Stack::resizeArray() [86]
-----------------------------------------------
                0.00    0.00       1/14          std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [216]
                0.00    0.00       1/14          std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_buckets(unsigned long) [214]
                0.00    0.00       3/14          std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [146]
                0.00    0.00       3/14          std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [147]
                0.00    0.00       6/14          std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [145]
[87]     0.0    0.00    0.00      14         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_node_allocator() [87]
                0.00    0.00      14/14          std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::_M_get() [88]
-----------------------------------------------
                0.00    0.00      14/14          std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_node_allocator() [87]
[88]     0.0    0.00    0.00      14         std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::_M_get() [88]
-----------------------------------------------
                0.00    0.00       3/12          std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [122]
                0.00    0.00       3/12          std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [145]
                0.00    0.00       3/12          decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [153]
                0.00    0.00       3/12          void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::construct<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [139]
[89]     0.0    0.00    0.00      12         std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&) [89]
-----------------------------------------------
                0.00    0.00       3/12          std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [122]
                0.00    0.00       3/12          std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [145]
                0.00    0.00       3/12          decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [153]
                0.00    0.00       3/12          void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::construct<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [139]
[90]     0.0    0.00    0.00      12         std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&) [90]
-----------------------------------------------
                0.00    0.00       3/12          std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [122]
                0.00    0.00       3/12          std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [145]
                0.00    0.00       3/12          decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [153]
                0.00    0.00       3/12          void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::construct<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [139]
[91]     0.0    0.00    0.00      12         std::tuple<char&&>&& std::forward<std::tuple<char&&> >(std::remove_reference<std::tuple<char&&> >::type&) [91]
-----------------------------------------------
                0.00    0.00       3/12          std::tuple<char&&> std::forward_as_tuple<char>(char&&) [154]
                0.00    0.00       3/12          std::tuple<char&&>::tuple<char, true, true>(char&&) [143]
                0.00    0.00       3/12          std::_Tuple_impl<0ul, char&&>::_Tuple_impl<char>(char&&) [131]
                0.00    0.00       3/12          std::_Head_base<0ul, char&&, false>::_Head_base<char>(char&&) [129]
[92]     0.0    0.00    0.00      12         char&& std::forward<char>(std::remove_reference<char>::type&) [92]
-----------------------------------------------
                0.00    0.00       9/9           std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_valptr() [98]
[93]     0.0    0.00    0.00       9         __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_ptr() [93]
                0.00    0.00       9/9           __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_addr() [94]
-----------------------------------------------
                0.00    0.00       9/9           __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_ptr() [93]
[94]     0.0    0.00    0.00       9         __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_addr() [94]
-----------------------------------------------
                0.00    0.00       2/9           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node_value<std::pair<char const, bool>, false> const&, unsigned long) const [167]
                0.00    0.00       7/9           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(unsigned long, unsigned long) const [104]
[95]     0.0    0.00    0.00       9         std::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const [95]
-----------------------------------------------
                0.00    0.00       3/9           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(char const&) [127]
                0.00    0.00       3/9           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::end() [126]
                0.00    0.00       3/9           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned long) [124]
[96]     0.0    0.00    0.00       9         std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [96]
                0.00    0.00       9/9           std::__detail::_Node_iterator_base<std::pair<char const, bool>, false>::_Node_iterator_base(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [97]
-----------------------------------------------
                0.00    0.00       9/9           std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [96]
[97]     0.0    0.00    0.00       9         std::__detail::_Node_iterator_base<std::pair<char const, bool>, false>::_Node_iterator_base(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [97]
-----------------------------------------------
                0.00    0.00       3/9           std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::operator->() const [119]
                0.00    0.00       3/9           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [145]
                0.00    0.00       3/9           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [146]
[98]     0.0    0.00    0.00       9         std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_valptr() [98]
                0.00    0.00       9/9           __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_ptr() [93]
-----------------------------------------------
                0.00    0.00       8/8           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(char const&) const [100]
[99]     0.0    0.00    0.00       8         std::hash<char>::operator()(char) const [99]
-----------------------------------------------
                0.00    0.00       2/8           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node_value<std::pair<char const, bool>, false> const&, unsigned long) const [167]
                0.00    0.00       3/8           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(char const&) [127]
                0.00    0.00       3/8           std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [48]
[100]    0.0    0.00    0.00       8         std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(char const&) const [100]
                0.00    0.00       8/8           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash() const [101]
                0.00    0.00       8/8           std::hash<char>::operator()(char) const [99]
-----------------------------------------------
                0.00    0.00       8/8           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(char const&) const [100]
[101]    0.0    0.00    0.00       8         std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash() const [101]
                0.00    0.00       8/8           std::__detail::_Hashtable_ebo_helper<1, std::hash<char>, true>::_M_cget() const [102]
-----------------------------------------------
                0.00    0.00       8/8           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash() const [101]
[102]    0.0    0.00    0.00       8         std::__detail::_Hashtable_ebo_helper<1, std::hash<char>, true>::_M_cget() const [102]
-----------------------------------------------
                0.00    0.00       1/7           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned long) [124]
                0.00    0.00       3/7           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(char const&) [127]
                0.00    0.00       3/7           std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [48]
[103]    0.0    0.00    0.00       7         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(unsigned long) const [103]
                0.00    0.00       7/7           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(unsigned long, unsigned long) const [104]
-----------------------------------------------
                0.00    0.00       7/7           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(unsigned long) const [103]
[104]    0.0    0.00    0.00       7         std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(unsigned long, unsigned long) const [104]
                0.00    0.00       7/9           std::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const [95]
-----------------------------------------------
                0.00    0.00       3/6           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(char const&) [127]
                0.00    0.00       3/6           std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [48]
[105]    0.0    0.00    0.00       6         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned long, char const&, unsigned long) const [105]
                0.00    0.00       6/6           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, char const&, unsigned long) const [106]
-----------------------------------------------
                0.00    0.00       6/6           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned long, char const&, unsigned long) const [105]
[106]    0.0    0.00    0.00       6         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, char const&, unsigned long) const [106]
-----------------------------------------------
                0.00    0.00       3/6           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [145]
                0.00    0.00       3/6           decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [153]
[107]    0.0    0.00    0.00       6         operator new(unsigned long, void*) [107]
-----------------------------------------------
                0.00    0.00       2/5           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [125]
                0.00    0.00       3/5           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [215]
[108]    0.0    0.00    0.00       5         std::__detail::_Hash_node<std::pair<char const, bool>, false>::_M_next() const [108]
-----------------------------------------------
                0.00    0.00       5/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() [30]
[109]    0.0    0.00    0.00       5         std::pointer_traits<char*>::pointer_to(char&) [109]
                0.00    0.00       5/5           char* std::addressof<char>(char&) [112]
-----------------------------------------------
                0.00    0.00       5/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() [44]
[110]    0.0    0.00    0.00       5         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider() [110]
-----------------------------------------------
                0.00    0.00       5/5           char* std::addressof<char>(char&) [112]
[111]    0.0    0.00    0.00       5         char* std::__addressof<char>(char&) [111]
-----------------------------------------------
                0.00    0.00       5/5           std::pointer_traits<char*>::pointer_to(char&) [109]
[112]    0.0    0.00    0.00       5         char* std::addressof<char>(char&) [112]
                0.00    0.00       5/5           char* std::__addressof<char>(char&) [111]
-----------------------------------------------
                0.00    0.00       2/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string() [36]
                0.00    0.00       2/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [35]
[113]    0.0    0.00    0.00       4         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char>&&) [113]
                0.00    0.00       4/4           std::remove_reference<std::allocator<char>&>::type&& std::move<std::allocator<char>&>(std::allocator<char>&) [115]
-----------------------------------------------
                0.00    0.00       1/4           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable() [202]
                0.00    0.00       3/4           std::__detail::_Hash_node<std::pair<char const, bool>, false>::_Hash_node() [144]
[114]    0.0    0.00    0.00       4         std::__detail::_Hash_node_base::_Hash_node_base() [114]
-----------------------------------------------
                0.00    0.00       4/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char>&&) [113]
[115]    0.0    0.00    0.00       4         std::remove_reference<std::allocator<char>&>::type&& std::move<std::allocator<char>&>(std::allocator<char>&) [115]
-----------------------------------------------
                0.00    0.00       3/3           std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned long) [136]
[116]    0.0    0.00    0.00       3         __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::deallocate(std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned long) [116]
-----------------------------------------------
                0.00    0.00       3/3           std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, unsigned long) [138]
[117]    0.0    0.00    0.00       3         __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocate(unsigned long, void const*) [117]
                0.00    0.00       3/3           __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::_M_max_size() const [118]
-----------------------------------------------
                0.00    0.00       3/3           __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocate(unsigned long, void const*) [117]
[118]    0.0    0.00    0.00       3         __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::_M_max_size() const [118]
-----------------------------------------------
                0.00    0.00       3/3           std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [48]
[119]    0.0    0.00    0.00       3         std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::operator->() const [119]
                0.00    0.00       3/9           std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_valptr() [98]
-----------------------------------------------
                0.00    0.00       3/3           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned long) [124]
[120]    0.0    0.00    0.00       3         std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_node_code_cache<false>&, unsigned long) const [120]
-----------------------------------------------
                0.00    0.00       3/3           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned long) [124]
[121]    0.0    0.00    0.00       3         std::__detail::_Prime_rehash_policy::_M_state() const [121]
-----------------------------------------------
                0.00    0.00       3/3           std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [48]
[122]    0.0    0.00    0.00       3         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [122]
                0.00    0.00       3/12          std::tuple<char&&>&& std::forward<std::tuple<char&&> >(std::remove_reference<std::tuple<char&&> >::type&) [91]
                0.00    0.00       3/12          std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&) [90]
                0.00    0.00       3/12          std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&) [89]
                0.00    0.00       3/3           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [145]
-----------------------------------------------
                0.00    0.00       3/3           std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [48]
[123]    0.0    0.00    0.00       3         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::~_Scoped_node() [123]
-----------------------------------------------
                0.00    0.00       3/3           std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [48]
[124]    0.0    0.00    0.00       3         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned long) [124]
                0.00    0.00       3/3           std::__detail::_Prime_rehash_policy::_M_state() const [121]
                0.00    0.00       3/3           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_node_code_cache<false>&, unsigned long) const [120]
                0.00    0.00       3/3           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [125]
                0.00    0.00       3/9           std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [96]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) [201]
                0.00    0.00       1/7           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(unsigned long) const [103]
-----------------------------------------------
                0.00    0.00       3/3           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned long) [124]
[125]    0.0    0.00    0.00       3         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [125]
                0.00    0.00       2/5           std::__detail::_Hash_node<std::pair<char const, bool>, false>::_M_next() const [108]
                0.00    0.00       2/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(std::__detail::_Hash_node_value<std::pair<char const, bool>, false> const&) const [163]
-----------------------------------------------
                0.00    0.00       3/3           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::end() [133]
[126]    0.0    0.00    0.00       3         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::end() [126]
                0.00    0.00       3/9           std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [96]
-----------------------------------------------
                0.00    0.00       3/3           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::find(char const&) [134]
[127]    0.0    0.00    0.00       3         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(char const&) [127]
                0.00    0.00       3/8           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(char const&) const [100]
                0.00    0.00       3/7           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(unsigned long) const [103]
                0.00    0.00       3/6           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned long, char const&, unsigned long) const [105]
                0.00    0.00       3/9           std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [96]
-----------------------------------------------
                0.00    0.00       3/3           std::_Tuple_impl<0ul, char&&>::_M_head(std::_Tuple_impl<0ul, char&&>&) [130]
[128]    0.0    0.00    0.00       3         std::_Head_base<0ul, char&&, false>::_M_head(std::_Head_base<0ul, char&&, false>&) [128]
-----------------------------------------------
                0.00    0.00       3/3           std::_Tuple_impl<0ul, char&&>::_Tuple_impl<char>(char&&) [131]
[129]    0.0    0.00    0.00       3         std::_Head_base<0ul, char&&, false>::_Head_base<char>(char&&) [129]
                0.00    0.00       3/12          char&& std::forward<char>(std::remove_reference<char>::type&) [92]
-----------------------------------------------
                0.00    0.00       3/3           char& std::__get_helper<0ul, char&&>(std::_Tuple_impl<0ul, char&&>&) [151]
[130]    0.0    0.00    0.00       3         std::_Tuple_impl<0ul, char&&>::_M_head(std::_Tuple_impl<0ul, char&&>&) [130]
                0.00    0.00       3/3           std::_Head_base<0ul, char&&, false>::_M_head(std::_Head_base<0ul, char&&, false>&) [128]
-----------------------------------------------
                0.00    0.00       3/3           std::tuple<char&&>::tuple<char, true, true>(char&&) [143]
[131]    0.0    0.00    0.00       3         std::_Tuple_impl<0ul, char&&>::_Tuple_impl<char>(char&&) [131]
                0.00    0.00       3/12          char&& std::forward<char>(std::remove_reference<char>::type&) [92]
                0.00    0.00       3/3           std::_Head_base<0ul, char&&, false>::_Head_base<char>(char&&) [129]
-----------------------------------------------
                0.00    0.00       3/3           std::tuple<char&&>::tuple(std::tuple<char&&>&&) [142]
[132]    0.0    0.00    0.00       3         std::_Tuple_impl<0ul, char&&>::_Tuple_impl(std::_Tuple_impl<0ul, char&&>&&) [132]
-----------------------------------------------
                0.00    0.00       3/3           getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [46]
[133]    0.0    0.00    0.00       3         std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::end() [133]
                0.00    0.00       3/3           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::end() [126]
-----------------------------------------------
                0.00    0.00       3/3           getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [46]
[134]    0.0    0.00    0.00       3         std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::find(char const&) [134]
                0.00    0.00       3/3           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(char const&) [127]
-----------------------------------------------
                0.00    0.00       3/3           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [147]
[135]    0.0    0.00    0.00       3         std::pointer_traits<std::__detail::_Hash_node<std::pair<char const, bool>, false>*>::pointer_to(std::__detail::_Hash_node<std::pair<char const, bool>, false>&) [135]
                0.00    0.00       3/3           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::addressof<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>&) [157]
-----------------------------------------------
                0.00    0.00       3/3           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [147]
[136]    0.0    0.00    0.00       3         std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned long) [136]
                0.00    0.00       3/161         std::is_constant_evaluated() [74]
                0.00    0.00       3/3           __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::deallocate(std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned long) [116]
-----------------------------------------------
                0.00    0.00       3/3           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [146]
[137]    0.0    0.00    0.00       3         void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::destroy<std::pair<char const, bool> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*) [137]
                0.00    0.00       3/3           void std::destroy_at<std::pair<char const, bool> >(std::pair<char const, bool>*) [149]
-----------------------------------------------
                0.00    0.00       3/3           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [145]
[138]    0.0    0.00    0.00       3         std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, unsigned long) [138]
                0.00    0.00       3/161         std::is_constant_evaluated() [74]
                0.00    0.00       3/3           __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocate(unsigned long, void const*) [117]
-----------------------------------------------
                0.00    0.00       3/3           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [145]
[139]    0.0    0.00    0.00       3         void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::construct<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [139]
                0.00    0.00       3/12          std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&) [90]
                0.00    0.00       3/12          std::tuple<char&&>&& std::forward<std::tuple<char&&> >(std::remove_reference<std::tuple<char&&> >::type&) [91]
                0.00    0.00       3/12          std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&) [89]
                0.00    0.00       3/3           decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [153]
-----------------------------------------------
                0.00    0.00       3/3           std::pair<char const, bool>::pair<char&&>(std::piecewise_construct_t, std::tuple<char&&>, std::tuple<>) [141]
[140]    0.0    0.00    0.00       3         std::pair<char const, bool>::pair<char&&, 0ul>(std::tuple<char&&>&, std::tuple<>&, std::_Index_tuple<0ul>, std::_Index_tuple<>) [140]
                0.00    0.00       3/3           std::tuple_element<0ul, std::tuple<char&&> >::type& std::get<0ul, char&&>(std::tuple<char&&>&) [155]
                0.00    0.00       3/3           char&& std::forward<char&&>(std::remove_reference<char&&>::type&) [156]
-----------------------------------------------
                0.00    0.00       3/3           decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [153]
[141]    0.0    0.00    0.00       3         std::pair<char const, bool>::pair<char&&>(std::piecewise_construct_t, std::tuple<char&&>, std::tuple<>) [141]
                0.00    0.00       3/3           std::pair<char const, bool>::pair<char&&, 0ul>(std::tuple<char&&>&, std::tuple<>&, std::_Index_tuple<0ul>, std::_Index_tuple<>) [140]
-----------------------------------------------
                0.00    0.00       3/3           decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [153]
[142]    0.0    0.00    0.00       3         std::tuple<char&&>::tuple(std::tuple<char&&>&&) [142]
                0.00    0.00       3/3           std::_Tuple_impl<0ul, char&&>::_Tuple_impl(std::_Tuple_impl<0ul, char&&>&&) [132]
-----------------------------------------------
                0.00    0.00       3/3           std::tuple<char&&> std::forward_as_tuple<char>(char&&) [154]
[143]    0.0    0.00    0.00       3         std::tuple<char&&>::tuple<char, true, true>(char&&) [143]
                0.00    0.00       3/12          char&& std::forward<char>(std::remove_reference<char>::type&) [92]
                0.00    0.00       3/3           std::_Tuple_impl<0ul, char&&>::_Tuple_impl<char>(char&&) [131]
-----------------------------------------------
                0.00    0.00       3/3           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [145]
[144]    0.0    0.00    0.00       3         std::__detail::_Hash_node<std::pair<char const, bool>, false>::_Hash_node() [144]
                0.00    0.00       3/4           std::__detail::_Hash_node_base::_Hash_node_base() [114]
-----------------------------------------------
                0.00    0.00       3/3           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [122]
[145]    0.0    0.00    0.00       3         std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [145]
                0.00    0.00       6/14          std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_node_allocator() [87]
                0.00    0.00       3/3           std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, unsigned long) [138]
                0.00    0.00       3/3           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__to_address<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [152]
                0.00    0.00       3/3           std::__detail::_Hash_node<std::pair<char const, bool>, false>::_Hash_node() [144]
                0.00    0.00       3/6           operator new(unsigned long, void*) [107]
                0.00    0.00       3/12          std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&) [90]
                0.00    0.00       3/12          std::tuple<char&&>&& std::forward<std::tuple<char&&> >(std::remove_reference<std::tuple<char&&> >::type&) [91]
                0.00    0.00       3/12          std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&) [89]
                0.00    0.00       3/9           std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_valptr() [98]
                0.00    0.00       3/3           void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::construct<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [139]
-----------------------------------------------
                0.00    0.00       3/3           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [215]
[146]    0.0    0.00    0.00       3         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [146]
                0.00    0.00       3/9           std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_valptr() [98]
                0.00    0.00       3/3           void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::destroy<std::pair<char const, bool> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*) [137]
                0.00    0.00       3/14          std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_node_allocator() [87]
                0.00    0.00       3/3           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [147]
-----------------------------------------------
                0.00    0.00       3/3           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [146]
[147]    0.0    0.00    0.00       3         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [147]
                0.00    0.00       3/3           std::pointer_traits<std::__detail::_Hash_node<std::pair<char const, bool>, false>*>::pointer_to(std::__detail::_Hash_node<std::pair<char const, bool>, false>&) [135]
                0.00    0.00       3/14          std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_node_allocator() [87]
                0.00    0.00       3/3           std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned long) [136]
-----------------------------------------------
                0.00    0.00       3/3           getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [46]
[148]    0.0    0.00    0.00       3         std::__detail::operator==(std::__detail::_Node_iterator_base<std::pair<char const, bool>, false> const&, std::__detail::_Node_iterator_base<std::pair<char const, bool>, false> const&) [148]
-----------------------------------------------
                0.00    0.00       3/3           void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::destroy<std::pair<char const, bool> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*) [137]
[149]    0.0    0.00    0.00       3         void std::destroy_at<std::pair<char const, bool> >(std::pair<char const, bool>*) [149]
-----------------------------------------------
                0.00    0.00       3/3           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::addressof<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>&) [157]
[150]    0.0    0.00    0.00       3         std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__addressof<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>&) [150]
-----------------------------------------------
                0.00    0.00       3/3           std::tuple_element<0ul, std::tuple<char&&> >::type& std::get<0ul, char&&>(std::tuple<char&&>&) [155]
[151]    0.0    0.00    0.00       3         char& std::__get_helper<0ul, char&&>(std::_Tuple_impl<0ul, char&&>&) [151]
                0.00    0.00       3/3           std::_Tuple_impl<0ul, char&&>::_M_head(std::_Tuple_impl<0ul, char&&>&) [130]
-----------------------------------------------
                0.00    0.00       3/3           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [145]
[152]    0.0    0.00    0.00       3         std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__to_address<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [152]
-----------------------------------------------
                0.00    0.00       3/3           void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::construct<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [139]
[153]    0.0    0.00    0.00       3         decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [153]
                0.00    0.00       3/12          std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&) [89]
                0.00    0.00       3/12          std::tuple<char&&>&& std::forward<std::tuple<char&&> >(std::remove_reference<std::tuple<char&&> >::type&) [91]
                0.00    0.00       3/3           std::tuple<char&&>::tuple(std::tuple<char&&>&&) [142]
                0.00    0.00       3/12          std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&) [90]
                0.00    0.00       3/6           operator new(unsigned long, void*) [107]
                0.00    0.00       3/3           std::pair<char const, bool>::pair<char&&>(std::piecewise_construct_t, std::tuple<char&&>, std::tuple<>) [141]
-----------------------------------------------
                0.00    0.00       3/3           std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [48]
[154]    0.0    0.00    0.00       3         std::tuple<char&&> std::forward_as_tuple<char>(char&&) [154]
                0.00    0.00       3/12          char&& std::forward<char>(std::remove_reference<char>::type&) [92]
                0.00    0.00       3/3           std::tuple<char&&>::tuple<char, true, true>(char&&) [143]
-----------------------------------------------
                0.00    0.00       3/3           std::pair<char const, bool>::pair<char&&, 0ul>(std::tuple<char&&>&, std::tuple<>&, std::_Index_tuple<0ul>, std::_Index_tuple<>) [140]
[155]    0.0    0.00    0.00       3         std::tuple_element<0ul, std::tuple<char&&> >::type& std::get<0ul, char&&>(std::tuple<char&&>&) [155]
                0.00    0.00       3/3           char& std::__get_helper<0ul, char&&>(std::_Tuple_impl<0ul, char&&>&) [151]
-----------------------------------------------
                0.00    0.00       3/3           std::pair<char const, bool>::pair<char&&, 0ul>(std::tuple<char&&>&, std::tuple<>&, std::_Index_tuple<0ul>, std::_Index_tuple<>) [140]
[156]    0.0    0.00    0.00       3         char&& std::forward<char&&>(std::remove_reference<char&&>::type&) [156]
-----------------------------------------------
                0.00    0.00       3/3           std::pointer_traits<std::__detail::_Hash_node<std::pair<char const, bool>, false>*>::pointer_to(std::__detail::_Hash_node<std::pair<char const, bool>, false>&) [135]
[157]    0.0    0.00    0.00       3         std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::addressof<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>&) [157]
                0.00    0.00       3/3           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__addressof<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>&) [150]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > const&) [170]
[158]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::new_allocator() [158]
-----------------------------------------------
                0.00    0.00       2/2           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [35]
[159]    0.0    0.00    0.00       2         __gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy(std::allocator<char> const&) [159]
                0.00    0.00       2/2           std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction(std::allocator<char> const&) [175]
-----------------------------------------------
                0.00    0.00       2/2           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [40]
[160]    0.0    0.00    0.00       2         bool __gnu_cxx::__is_null_pointer<char>(char*) [160]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_valptr() const [169]
[161]    0.0    0.00    0.00       2         __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_ptr() const [161]
                0.00    0.00       2/2           __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_addr() const [162]
-----------------------------------------------
                0.00    0.00       2/2           __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_ptr() const [161]
[162]    0.0    0.00    0.00       2         __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_addr() const [162]
-----------------------------------------------
                0.00    0.00       2/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [125]
[163]    0.0    0.00    0.00       2         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(std::__detail::_Hash_node_value<std::pair<char const, bool>, false> const&) const [163]
                0.00    0.00       2/2           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node_value<std::pair<char const, bool>, false> const&, unsigned long) const [167]
-----------------------------------------------
                0.00    0.00       2/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [172]
[164]    0.0    0.00    0.00       2         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_uses_single_bucket(std::__detail::_Hash_node_base**) const [164]
-----------------------------------------------
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [200]
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [198]
[165]    0.0    0.00    0.00       2         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const [165]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node_value<std::pair<char const, bool>, false> const&, unsigned long) const [167]
[166]    0.0    0.00    0.00       2         decltype ((get<0>)((forward<std::pair<char const, bool> const&>)({parm#1}))) std::__detail::_Select1st::operator()<std::pair<char const, bool> const&>(std::pair<char const, bool> const&) const [166]
                0.00    0.00       2/2           std::tuple_element<0ul, std::pair<char const, bool> >::type const& std::get<0ul, char const, bool>(std::pair<char const, bool> const&) [180]
                0.00    0.00       2/2           std::pair<char const, bool> const& std::forward<std::pair<char const, bool> const&>(std::remove_reference<std::pair<char const, bool> const&>::type&) [181]
-----------------------------------------------
                0.00    0.00       2/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(std::__detail::_Hash_node_value<std::pair<char const, bool>, false> const&) const [163]
[167]    0.0    0.00    0.00       2         std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node_value<std::pair<char const, bool>, false> const&, unsigned long) const [167]
                0.00    0.00       2/2           std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_v() const [168]
                0.00    0.00       2/2           decltype ((get<0>)((forward<std::pair<char const, bool> const&>)({parm#1}))) std::__detail::_Select1st::operator()<std::pair<char const, bool> const&>(std::pair<char const, bool> const&) const [166]
                0.00    0.00       2/8           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(char const&) const [100]
                0.00    0.00       2/9           std::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const [95]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node_value<std::pair<char const, bool>, false> const&, unsigned long) const [167]
[168]    0.0    0.00    0.00       2         std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_v() const [168]
                0.00    0.00       2/2           std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_valptr() const [169]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_v() const [168]
[169]    0.0    0.00    0.00       2         std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_valptr() const [169]
                0.00    0.00       2/2           __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_ptr() const [161]
-----------------------------------------------
                0.00    0.00       1/2           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [216]
                0.00    0.00       1/2           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_buckets(unsigned long) [214]
[170]    0.0    0.00    0.00       2         std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > const&) [170]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::new_allocator() [158]
-----------------------------------------------
                0.00    0.00       1/2           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [216]
                0.00    0.00       1/2           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_buckets(unsigned long) [214]
[171]    0.0    0.00    0.00       2         std::allocator<std::__detail::_Hash_node_base*>::~allocator() [171]
-----------------------------------------------
                0.00    0.00       2/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets() [173]
[172]    0.0    0.00    0.00       2         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [172]
                0.00    0.00       2/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_uses_single_bucket(std::__detail::_Hash_node_base**) const [164]
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [216]
-----------------------------------------------
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [203]
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [198]
[173]    0.0    0.00    0.00       2         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets() [173]
                0.00    0.00       2/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [172]
-----------------------------------------------
                0.00    0.00       2/2           std::tuple_element<0ul, std::pair<char const, bool> >::type const& std::get<0ul, char const, bool>(std::pair<char const, bool> const&) [180]
[174]    0.0    0.00    0.00       2         char const& std::__pair_get<0ul>::__const_get<char const, bool>(std::pair<char const, bool> const&) [174]
-----------------------------------------------
                0.00    0.00       2/2           __gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy(std::allocator<char> const&) [159]
[175]    0.0    0.00    0.00       2         std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction(std::allocator<char> const&) [175]
-----------------------------------------------
                0.00    0.00       2/2           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [40]
[176]    0.0    0.00    0.00       2         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*) [176]
                0.00    0.00       2/52          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned long) [81]
-----------------------------------------------
                0.00    0.00       2/2           std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*) [182]
[177]    0.0    0.00    0.00       2         std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag) [177]
-----------------------------------------------
                0.00    0.00       2/2           void std::reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [5]
[178]    0.0    0.00    0.00       2         std::iterator_traits<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [178]
-----------------------------------------------
                0.00    0.00       2/2           std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*) [182]
[179]    0.0    0.00    0.00       2         std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&) [179]
-----------------------------------------------
                0.00    0.00       2/2           decltype ((get<0>)((forward<std::pair<char const, bool> const&>)({parm#1}))) std::__detail::_Select1st::operator()<std::pair<char const, bool> const&>(std::pair<char const, bool> const&) const [166]
[180]    0.0    0.00    0.00       2         std::tuple_element<0ul, std::pair<char const, bool> >::type const& std::get<0ul, char const, bool>(std::pair<char const, bool> const&) [180]
                0.00    0.00       2/2           char const& std::__pair_get<0ul>::__const_get<char const, bool>(std::pair<char const, bool> const&) [174]
-----------------------------------------------
                0.00    0.00       2/2           decltype ((get<0>)((forward<std::pair<char const, bool> const&>)({parm#1}))) std::__detail::_Select1st::operator()<std::pair<char const, bool> const&>(std::pair<char const, bool> const&) const [166]
[181]    0.0    0.00    0.00       2         std::pair<char const, bool> const& std::forward<std::pair<char const, bool> const&>(std::remove_reference<std::pair<char const, bool> const&>::type&) [181]
-----------------------------------------------
                0.00    0.00       2/2           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [40]
[182]    0.0    0.00    0.00       2         std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*) [182]
                0.00    0.00       2/2           std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&) [179]
                0.00    0.00       2/2           std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag) [177]
-----------------------------------------------
                             1333334             getNodeHeight(ParseTree*) [183]
                0.00    0.00       1/1           getBinaryTreeHeight(ParseTree*) [184]
[183]    0.0    0.00    0.00       1+1333334 getNodeHeight(ParseTree*) [183]
                0.00    0.00  666667/1666669     ParseTree::getRightNode(ParseTree*) [62]
                0.00    0.00  666667/1666670     ParseTree::getLeftNode(ParseTree*) [61]
                0.00    0.00  666667/666667      long long const& std::max<long long>(long long const&, long long const&) [70]
                             1333334             getNodeHeight(ParseTree*) [183]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[184]    0.0    0.00    0.00       1         getBinaryTreeHeight(ParseTree*) [184]
                0.00    0.00       1/1           getNodeHeight(ParseTree*) [183]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z13infixToPrefixNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE [230]
[185]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [185]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_main [233]
[186]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [186]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN5Stack11resizeArrayEv [231]
[187]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [187]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN9ParseTreeC2Ec [232]
[188]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [188]
-----------------------------------------------
                0.00    0.00       1/1           infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
[189]    0.0    0.00    0.00       1         Stack::Stack() [189]
-----------------------------------------------
                0.00    0.00       1/1           infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
[190]    0.0    0.00    0.00       1         Stack::~Stack() [190]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocator() [196]
[191]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::new_allocator() [191]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate(std::allocator<std::__detail::_Hash_node_base*>&, std::__detail::_Hash_node_base**, unsigned long) [208]
[192]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::deallocate(std::__detail::_Hash_node_base**, unsigned long) [192]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) [209]
[193]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) [193]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::_M_max_size() const [195]
-----------------------------------------------
                0.00    0.00       1/1           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [51]
[194]    0.0    0.00    0.00       1         bool __gnu_cxx::__is_null_pointer<char const>(char const*) [194]
-----------------------------------------------
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) [193]
[195]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::_M_max_size() const [195]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::_Hashtable_ebo_helper() [220]
[196]    0.0    0.00    0.00       1         std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocator() [196]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::new_allocator() [191]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::~_Hashtable_ebo_helper() [221]
[197]    0.0    0.00    0.00       1         std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::~allocator() [197]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) [201]
[198]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [198]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned long) [199]
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const [165]
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets() [173]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [198]
[199]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned long) [199]
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_buckets(unsigned long) [214]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [203]
[200]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [200]
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const [165]
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [215]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned long) [124]
[201]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) [201]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [198]
-----------------------------------------------
                0.00    0.00       1/1           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::unordered_map() [205]
[202]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable() [202]
                0.00    0.00       1/1           std::__detail::_Hashtable_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable_base() [213]
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_Hashtable_alloc() [217]
                0.00    0.00       1/4           std::__detail::_Hash_node_base::_Hash_node_base() [114]
                0.00    0.00       1/1           std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float) [219]
-----------------------------------------------
                0.00    0.00       1/1           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::~unordered_map() [206]
[203]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [203]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [200]
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets() [173]
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::~_Hashtable_alloc() [218]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [38]
[204]    0.0    0.00    0.00       1         std::char_traits<char>::length(char const*) [204]
-----------------------------------------------
                0.00    0.00       1/1           evaluateTreeTruthValue(ParseTree*) [47]
[205]    0.0    0.00    0.00       1         std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::unordered_map() [205]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable() [202]
-----------------------------------------------
                0.00    0.00       1/1           evaluateTreeTruthValue(ParseTree*) [47]
[206]    0.0    0.00    0.00       1         std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::~unordered_map() [206]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [203]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [216]
[207]    0.0    0.00    0.00       1         std::pointer_traits<std::__detail::_Hash_node_base**>::pointer_to(std::__detail::_Hash_node_base*&) [207]
                0.00    0.00       1/1           std::__detail::_Hash_node_base** std::addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&) [229]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [216]
[208]    0.0    0.00    0.00       1         std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate(std::allocator<std::__detail::_Hash_node_base*>&, std::__detail::_Hash_node_base**, unsigned long) [208]
                0.00    0.00       1/161         std::is_constant_evaluated() [74]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::deallocate(std::__detail::_Hash_node_base**, unsigned long) [192]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_buckets(unsigned long) [214]
[209]    0.0    0.00    0.00       1         std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) [209]
                0.00    0.00       1/161         std::is_constant_evaluated() [74]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) [193]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [38]
[210]    0.0    0.00    0.00       1         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char> const&) [210]
-----------------------------------------------
                0.00    0.00       1/1           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [51]
[211]    0.0    0.00    0.00       1         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*) [211]
                0.00    0.00       1/52          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned long) [81]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable_base() [213]
[212]    0.0    0.00    0.00       1         std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_Hash_code_base() [212]
                0.00    0.00       1/1           std::__detail::_Hashtable_ebo_helper<1, std::hash<char>, true>::_Hashtable_ebo_helper() [223]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable() [202]
[213]    0.0    0.00    0.00       1         std::__detail::_Hashtable_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable_base() [213]
                0.00    0.00       1/1           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_Hash_code_base() [212]
                0.00    0.00       1/1           std::__detail::_Hashtable_ebo_helper<0, std::equal_to<char>, true>::_Hashtable_ebo_helper() [222]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned long) [199]
[214]    0.0    0.00    0.00       1         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_buckets(unsigned long) [214]
                0.00    0.00       1/14          std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_node_allocator() [87]
                0.00    0.00       1/2           std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > const&) [170]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) [209]
                0.00    0.00       1/1           std::__detail::_Hash_node_base** std::__to_address<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base**) [226]
                0.00    0.00       1/2           std::allocator<std::__detail::_Hash_node_base*>::~allocator() [171]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [200]
[215]    0.0    0.00    0.00       1         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [215]
                0.00    0.00       3/5           std::__detail::_Hash_node<std::pair<char const, bool>, false>::_M_next() const [108]
                0.00    0.00       3/3           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [146]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [172]
[216]    0.0    0.00    0.00       1         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [216]
                0.00    0.00       1/1           std::pointer_traits<std::__detail::_Hash_node_base**>::pointer_to(std::__detail::_Hash_node_base*&) [207]
                0.00    0.00       1/14          std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_node_allocator() [87]
                0.00    0.00       1/2           std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > const&) [170]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate(std::allocator<std::__detail::_Hash_node_base*>&, std::__detail::_Hash_node_base**, unsigned long) [208]
                0.00    0.00       1/2           std::allocator<std::__detail::_Hash_node_base*>::~allocator() [171]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable() [202]
[217]    0.0    0.00    0.00       1         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_Hashtable_alloc() [217]
                0.00    0.00       1/1           std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::_Hashtable_ebo_helper() [220]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [203]
[218]    0.0    0.00    0.00       1         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::~_Hashtable_alloc() [218]
                0.00    0.00       1/1           std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::~_Hashtable_ebo_helper() [221]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable() [202]
[219]    0.0    0.00    0.00       1         std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float) [219]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_Hashtable_alloc() [217]
[220]    0.0    0.00    0.00       1         std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::_Hashtable_ebo_helper() [220]
                0.00    0.00       1/1           std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocator() [196]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::~_Hashtable_alloc() [218]
[221]    0.0    0.00    0.00       1         std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::~_Hashtable_ebo_helper() [221]
                0.00    0.00       1/1           std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::~allocator() [197]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable_base() [213]
[222]    0.0    0.00    0.00       1         std::__detail::_Hashtable_ebo_helper<0, std::equal_to<char>, true>::_Hashtable_ebo_helper() [222]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_Hash_code_base() [212]
[223]    0.0    0.00    0.00       1         std::__detail::_Hashtable_ebo_helper<1, std::hash<char>, true>::_Hashtable_ebo_helper() [223]
-----------------------------------------------
                0.00    0.00       1/1           std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*) [228]
[224]    0.0    0.00    0.00       1         std::iterator_traits<char const*>::difference_type std::__distance<char const*>(char const*, char const*, std::random_access_iterator_tag) [224]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hash_node_base** std::addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&) [229]
[225]    0.0    0.00    0.00       1         std::__detail::_Hash_node_base** std::__addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&) [225]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_buckets(unsigned long) [214]
[226]    0.0    0.00    0.00       1         std::__detail::_Hash_node_base** std::__to_address<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base**) [226]
-----------------------------------------------
                0.00    0.00       1/1           std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*) [228]
[227]    0.0    0.00    0.00       1         std::iterator_traits<char const*>::iterator_category std::__iterator_category<char const*>(char const* const&) [227]
-----------------------------------------------
                0.00    0.00       1/1           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [51]
[228]    0.0    0.00    0.00       1         std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*) [228]
                0.00    0.00       1/1           std::iterator_traits<char const*>::iterator_category std::__iterator_category<char const*>(char const* const&) [227]
                0.00    0.00       1/1           std::iterator_traits<char const*>::difference_type std::__distance<char const*>(char const*, char const*, std::random_access_iterator_tag) [224]
-----------------------------------------------
                0.00    0.00       1/1           std::pointer_traits<std::__detail::_Hash_node_base**>::pointer_to(std::__detail::_Hash_node_base*&) [207]
[229]    0.0    0.00    0.00       1         std::__detail::_Hash_node_base** std::addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&) [229]
                0.00    0.00       1/1           std::__detail::_Hash_node_base** std::__addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&) [225]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2022 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

 [183] getNodeHeight(ParseTree*) [101] std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash() const [81] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned long)
   [2] infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [95] std::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const [29] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long)
   [4] createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [121] std::__detail::_Prime_rehash_policy::_M_state() const [63] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_length(unsigned long)
  [10] inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [168] std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_v() const [34] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long)
   [8] parseTreeToInfix[abi:cxx11](ParseTree*) [169] std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_valptr() const [11] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
  [46] getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [102] std::__detail::_Hashtable_ebo_helper<1, std::hash<char>, true>::_M_cget() const [35] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
   [3] prefixToParseTree(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [196] std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocator() [36] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string()
 [184] getBinaryTreeHeight(ParseTree*) [197] std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::~allocator() [38] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
  [47] evaluateTreeTruthValue(ParseTree*) [170] std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > const&) [44] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
 [185] __static_initialization_and_destruction_0(int, int) [171] std::allocator<std::__detail::_Hash_node_base*>::~allocator() [24] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char)
 [186] __static_initialization_and_destruction_0(int, int) [122] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [144] std::__detail::_Hash_node<std::pair<char const, bool>, false>::_Hash_node()
 [187] __static_initialization_and_destruction_0(int, int) [123] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::~_Scoped_node() [96] std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
 [188] __static_initialization_and_destruction_0(int, int) [198] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [212] std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_Hash_code_base()
  [86] Stack::resizeArray()  [199] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned long) [114] std::__detail::_Hash_node_base::_Hash_node_base()
  [71] Stack::pop()          [172] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [213] std::__detail::_Hashtable_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable_base()
  [22] Stack::push(char)     [173] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets() [145] std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&)
 [189] Stack::Stack()        [124] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned long) [87] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_node_allocator()
 [190] Stack::~Stack()       [125] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [146] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  [61] ParseTree::getLeftNode(ParseTree*) [126] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::end() [214] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_buckets(unsigned long)
  [72] ParseTree::setLeftNode(ParseTree*) [127] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(char const&) [215] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  [62] ParseTree::getRightNode(ParseTree*) [200] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [216] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long)
  [73] ParseTree::setRightNode(ParseTree*) [201] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) [147] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  [67] ParseTree::getValue() [202] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable() [217] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_Hashtable_alloc()
  [69] ParseTree::ParseTree(char) [203] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [218] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::~_Hashtable_alloc()
  [23] ParseTree::~ParseTree() [128] std::_Head_base<0ul, char&&, false>::_M_head(std::_Head_base<0ul, char&&, false>&) [97] std::__detail::_Node_iterator_base<std::pair<char const, bool>, false>::_Node_iterator_base(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
 [116] __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::deallocate(std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned long) [129] std::_Head_base<0ul, char&&, false>::_Head_base<char>(char&&) [219] std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float)
 [117] __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocate(unsigned long, void const*) [174] char const& std::__pair_get<0ul>::__const_get<char const, bool>(std::pair<char const, bool> const&) [98] std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_valptr()
 [191] __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::new_allocator() [130] std::_Tuple_impl<0ul, char&&>::_M_head(std::_Tuple_impl<0ul, char&&>&) [88] std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::_M_get()
 [192] __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::deallocate(std::__detail::_Hash_node_base**, unsigned long) [131] std::_Tuple_impl<0ul, char&&>::_Tuple_impl<char>(char&&) [220] std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::_Hashtable_ebo_helper()
 [193] __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) [132] std::_Tuple_impl<0ul, char&&>::_Tuple_impl(std::_Tuple_impl<0ul, char&&>&&) [221] std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::~_Hashtable_ebo_helper()
 [158] __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::new_allocator() [80] std::char_traits<char>::copy(char*, char const*, unsigned long) [222] std::__detail::_Hashtable_ebo_helper<0, std::equal_to<char>, true>::_Hashtable_ebo_helper()
  [82] __gnu_cxx::new_allocator<char>::deallocate(char*, unsigned long) [60] std::char_traits<char>::assign(char&, char const&) [223] std::__detail::_Hashtable_ebo_helper<1, std::hash<char>, true>::_Hashtable_ebo_helper()
  [26] __gnu_cxx::new_allocator<char>::allocate(unsigned long, void const*) [204] std::char_traits<char>::length(char const*) [48] std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&)
 [159] __gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy(std::allocator<char> const&) [133] std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::end() [148] std::__detail::operator==(std::__detail::_Node_iterator_base<std::pair<char const, bool>, false> const&, std::__detail::_Node_iterator_base<std::pair<char const, bool>, false> const&)
  [93] __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_ptr() [134] std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::find(char const&) [20] std::__cmp_cat::__unspec::__unspec(std::__cmp_cat::__unspec*)
  [94] __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_addr() [205] std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::unordered_map() [224] std::iterator_traits<char const*>::difference_type std::__distance<char const*>(char const*, char const*, std::random_access_iterator_tag)
 [194] bool __gnu_cxx::__is_null_pointer<char const>(char const*) [206] std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::~unordered_map() [177] std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag)
 [160] bool __gnu_cxx::__is_null_pointer<char>(char*) [45] std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::operator[](char&&) [149] void std::destroy_at<std::pair<char const, bool> >(std::pair<char const, bool>*)
  [68] __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__normal_iterator(char* const&) [16] std::pointer_traits<char const*>::pointer_to(char const&) [17] char const* std::__addressof<char const>(char const&)
  [65] __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator--() [135] std::pointer_traits<std::__detail::_Hash_node<std::pair<char const, bool>, false>*>::pointer_to(std::__detail::_Hash_node<std::pair<char const, bool>, false>&) [150] std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__addressof<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>&)
  [21] __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++(int) [207] std::pointer_traits<std::__detail::_Hash_node_base**>::pointer_to(std::__detail::_Hash_node_base*&) [225] std::__detail::_Hash_node_base** std::__addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&)
  [14] __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++() [109] std::pointer_traits<char*>::pointer_to(char&) [111] char* std::__addressof<char>(char&)
   [7] bool __gnu_cxx::operator==<char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [136] std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned long) [151] char& std::__get_helper<0ul, char&&>(std::_Tuple_impl<0ul, char&&>&)
   [9] decltype (std::__detail::__synth3way((declval<char*&>)(), (declval<char*&>)())) __gnu_cxx::operator<=><char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [137] void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::destroy<std::pair<char const, bool> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*) [152] std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__to_address<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
 [118] __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::_M_max_size() const [138] std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, unsigned long) [226] std::__detail::_Hash_node_base** std::__to_address<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base**)
 [195] __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::_M_max_size() const [139] void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::construct<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [153] decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&)
  [27] __gnu_cxx::new_allocator<char>::_M_max_size() const [208] std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate(std::allocator<std::__detail::_Hash_node_base*>&, std::__detail::_Hash_node_base**, unsigned long) [154] std::tuple<char&&> std::forward_as_tuple<char>(char&&)
 [161] __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_ptr() const [209] std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) [178] std::iterator_traits<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
 [162] __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_addr() const [83] std::allocator_traits<std::allocator<char> >::deallocate(std::allocator<char>&, char*, unsigned long) [227] std::iterator_traits<char const*>::iterator_category std::__iterator_category<char const*>(char const* const&)
  [58] __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const [175] std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction(std::allocator<char> const&) [179] std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&)
  [59] __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const [28] std::allocator_traits<std::allocator<char> >::allocate(std::allocator<char>&, unsigned long) [74] std::is_constant_evaluated()
 [105] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned long, char const&, unsigned long) const [79] std::allocator_traits<std::allocator<char> >::max_size(std::allocator<char> const&) [155] std::tuple_element<0ul, std::tuple<char&&> >::type& std::get<0ul, char&&>(std::tuple<char&&>&)
 [163] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(std::__detail::_Hash_node_value<std::pair<char const, bool>, false> const&) const [140] std::pair<char const, bool>::pair<char&&, 0ul>(std::tuple<char&&>&, std::tuple<>&, std::_Index_tuple<0ul>, std::_Index_tuple<>) [180] std::tuple_element<0ul, std::pair<char const, bool> >::type const& std::get<0ul, char const, bool>(std::pair<char const, bool> const&)
 [103] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(unsigned long) const [141] std::pair<char const, bool>::pair<char&&>(std::piecewise_construct_t, std::tuple<char&&>, std::tuple<>) [70] long long const& std::max<long long>(long long const&, long long const&)
 [106] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, char const&, unsigned long) const [142] std::tuple<char&&>::tuple(std::tuple<char&&>&&) [115] std::remove_reference<std::allocator<char>&>::type&& std::move<std::allocator<char>&>(std::allocator<char>&)
 [164] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_uses_single_bucket(std::__detail::_Hash_node_base**) const [143] std::tuple<char&&>::tuple<char, true, true>(char&&) [25] std::remove_reference<char&>::type&& std::move<char&>(char&)
 [165] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const [43] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned long) [32] std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<char> >, std::is_move_constructible<char>, std::is_move_assignable<char> >::value, void>::type std::swap<char>(char&, char&)
  [99] std::hash<char>::operator()(char) const [42] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [156] char&& std::forward<char&&>(std::remove_reference<char&&>::type&)
  [12] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const [84] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_capacity(unsigned long) [89] std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&)
  [15] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() const [113] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char>&&) [181] std::pair<char const, bool> const& std::forward<std::pair<char const, bool> const&>(std::remove_reference<std::pair<char const, bool> const&>::type&)
  [75] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() const [210] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char> const&) [90] std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&)
  [64] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size() const [110] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider() [91] std::tuple<char&&>&& std::forward<std::tuple<char&&> >(std::remove_reference<std::tuple<char&&> >::type&)
  [77] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::length() const [51] void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [92] char&& std::forward<char>(std::remove_reference<char>::type&)
  [31] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [39] void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*) [5] void std::reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
  [13] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const [40] void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [228] std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*)
  [78] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::max_size() const [30] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() [182] std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*)
 [108] std::__detail::_Hash_node<std::pair<char const, bool>, false>::_M_next() const [37] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned long) [6] void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag)
 [166] decltype ((get<0>)((forward<std::pair<char const, bool> const&>)({parm#1}))) std::__detail::_Select1st::operator()<std::pair<char const, bool> const&>(std::pair<char const, bool> const&) const [211] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*) [18] char const* std::addressof<char const>(char const&)
  [19] auto std::__detail::_Synth3way::operator()<char*, char*>(char* const&, char* const&) const [176] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*) [157] std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::addressof<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>&)
 [119] std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::operator->() const [41] void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type) [229] std::__detail::_Hash_node_base** std::addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&)
 [100] std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(char const&) const [76] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() [112] char* std::addressof<char>(char&)
 [120] std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_node_code_cache<false>&, unsigned long) const [49] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::end() [33] void std::iter_swap<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
 [167] std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node_value<std::pair<char const, bool>, false> const&, unsigned long) const [50] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::begin() [66] std::operator<(std::strong_ordering, std::__cmp_cat::__unspec)
 [104] std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(unsigned long, unsigned long) const [85] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data(char*) [107] operator new(unsigned long, void*)
