Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls   s/call   s/call  name    
  7.49      0.25     0.25   400189     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const
  7.19      0.49     0.24   600008     0.00     0.00  __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const
  5.84      0.69     0.20   466665     0.00     0.00  __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const
  4.79      0.85     0.16   133334     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
  4.19      0.99     0.14   200003     0.00     0.00  bool __gnu_cxx::operator==<char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
  3.74      1.11     0.13   233332     0.00     0.00  __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++()
  3.29      1.22     0.11   299999     0.00     0.00  std::remove_reference<char&>::type&& std::move<char&>(char&)
  3.14      1.33     0.11                             __x86.get_pc_thunk.bx
  3.14      1.43     0.11                             _dl_relocate_static_pie
  2.99      1.53     0.10   266673     0.00     0.00  std::char_traits<char>::assign(char&, char const&)
  2.99      1.63     0.10   166667     0.00     0.00  ParseTree::getRightNode(ParseTree*)
  2.99      1.73     0.10   133374     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const
  2.99      1.83     0.10    99999     0.00     0.00  void std::iter_swap<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
  2.69      1.92     0.09   166668     0.00     0.00  ParseTree::getLeftNode(ParseTree*)
  2.69      2.01     0.09                             _init
  2.40      2.09     0.08   133419     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const
  2.40      2.17     0.08   133419     0.00     0.00  std::pointer_traits<char const*>::pointer_to(char const&)
  2.40      2.25     0.08        1     0.08     0.08  ParseTree::~ParseTree()
  2.10      2.32     0.07   100001     0.00     0.00  decltype (std::__detail::__synth3way((declval<char*&>)(), (declval<char*&>)())) __gnu_cxx::operator<=><char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
  2.10      2.39     0.07   100001     0.00     0.00  std::operator<(std::strong_ordering, std::__cmp_cat::__unspec)
  2.10      2.46     0.07        2     0.04     0.39  void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag)
  1.95      2.53     0.07   133419     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() const
  1.80      2.59     0.06   100001     0.00     0.00  __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator--()
  1.80      2.65     0.06        1     0.06     0.18  getNodeHeight(ParseTree*)
  1.50      2.70     0.05   133339     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned int)
  1.35      2.74     0.05    66667     0.00     0.00  long long const& std::max<long long>(long long const&, long long const&)
  1.20      2.78     0.04   133419     0.00     0.00  char const* std::addressof<char const>(char const&)
  1.20      2.82     0.04   133339     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_length(unsigned int)
  1.20      2.86     0.04   100001     0.00     0.00  auto std::__detail::_Synth3way::operator()<char*, char*>(char* const&, char* const&) const
  1.20      2.90     0.04    99999     0.00     0.00  std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<char> >, std::is_move_constructible<char>, std::is_move_assignable<char> >::value, void>::type std::swap<char>(char&, char&)
  1.20      2.94     0.04    66671     0.00     0.00  ParseTree::getValue()
  1.20      2.98     0.04    66667     0.00     0.00  __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++(int)
  1.20      3.02     0.04    66667     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char)
  1.20      3.06     0.04    66666     0.00     0.00  Stack::push(char)
  0.90      3.09     0.03   133419     0.00     0.00  char const* std::__addressof<char const>(char const&)
  0.90      3.12     0.03   133338     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size() const
  0.90      3.15     0.03    66675     0.00     0.00  __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__normal_iterator(char* const&)
  0.90      3.18     0.03    66667     0.00     0.00  ParseTree::ParseTree(char)
  0.90      3.21     0.03        1     0.03     0.70  inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
  0.60      3.23     0.02    66666     0.00     0.00  Stack::pop()
  0.60      3.25     0.02        1     0.02     1.77  infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
  0.60      3.27     0.02        1     0.02     0.30  createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
  0.30      3.28     0.01   100001     0.00     0.00  std::__cmp_cat::__unspec::__unspec(std::__cmp_cat::__unspec*)
  0.30      3.29     0.01    33333     0.00     0.00  ParseTree::setLeftNode(ParseTree*)
  0.30      3.30     0.01    33333     0.00     0.00  ParseTree::setRightNode(ParseTree*)
  0.30      3.31     0.01       16     0.00     0.00  Stack::resizeArray()
  0.30      3.32     0.01        1     0.01     0.01  Stack::~Stack()
  0.30      3.33     0.01                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  0.15      3.34     0.01       42     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned int)
  0.15      3.34     0.01        1     0.01     0.01  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
  0.00      3.34     0.00      130     0.00     0.00  std::is_constant_evaluated()
  0.00      3.34     0.00       84     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() const
  0.00      3.34     0.00       84     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator()
  0.00      3.34     0.00       82     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::length() const
  0.00      3.34     0.00       82     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::max_size() const
  0.00      3.34     0.00       82     0.00     0.00  std::allocator_traits<std::allocator<char> >::max_size(std::allocator<char> const&)
  0.00      3.34     0.00       45     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
  0.00      3.34     0.00       43     0.00     0.00  std::char_traits<char>::copy(char*, char const*, unsigned int)
  0.00      3.34     0.00       43     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int)
  0.00      3.34     0.00       42     0.00     0.00  __gnu_cxx::new_allocator<char>::deallocate(char*, unsigned int)
  0.00      3.34     0.00       42     0.00     0.00  __gnu_cxx::new_allocator<char>::allocate(unsigned int, void const*)
  0.00      3.34     0.00       42     0.00     0.00  __gnu_cxx::new_allocator<char>::_M_max_size() const
  0.00      3.34     0.00       42     0.00     0.00  std::allocator_traits<std::allocator<char> >::deallocate(std::allocator<char>&, char*, unsigned int)
  0.00      3.34     0.00       42     0.00     0.00  std::allocator_traits<std::allocator<char> >::allocate(std::allocator<char>&, unsigned int)
  0.00      3.34     0.00       42     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_capacity(unsigned int)
  0.00      3.34     0.00       42     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data(char*)
  0.00      3.34     0.00       42     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
  0.00      3.34     0.00       26     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
  0.00      3.34     0.00        6     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_node_allocator()
  0.00      3.34     0.00        6     0.00     0.00  std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::_M_get()
  0.00      3.34     0.00        5     0.00     0.00  std::pointer_traits<char*>::pointer_to(char&)
  0.00      3.34     0.00        5     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider()
  0.00      3.34     0.00        5     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data()
  0.00      3.34     0.00        5     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
  0.00      3.34     0.00        5     0.00     0.00  char* std::__addressof<char>(char&)
  0.00      3.34     0.00        5     0.00     0.00  char&& std::forward<char>(std::remove_reference<char>::type&)
  0.00      3.34     0.00        5     0.00     0.00  char* std::addressof<char>(char&)
  0.00      3.34     0.00        4     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char>&&)
  0.00      3.34     0.00        4     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::end()
  0.00      3.34     0.00        4     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::begin()
  0.00      3.34     0.00        4     0.00     0.00  std::remove_reference<std::allocator<char>&>::type&& std::move<std::allocator<char>&>(std::allocator<char>&)
  0.00      3.34     0.00        4     0.00     0.00  std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&)
  0.00      3.34     0.00        4     0.00     0.00  std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&)
  0.00      3.34     0.00        4     0.00     0.00  std::tuple<char&&>&& std::forward<std::tuple<char&&> >(std::remove_reference<std::tuple<char&&> >::type&)
  0.00      3.34     0.00        3     0.00     0.00  __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_ptr()
  0.00      3.34     0.00        3     0.00     0.00  __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_addr()
  0.00      3.34     0.00        3     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(unsigned int) const
  0.00      3.34     0.00        3     0.00     0.00  std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(unsigned int, unsigned int) const
  0.00      3.34     0.00        3     0.00     0.00  std::__detail::_Mod_range_hashing::operator()(unsigned int, unsigned int) const
  0.00      3.34     0.00        3     0.00     0.00  std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  0.00      3.34     0.00        3     0.00     0.00  std::__detail::_Node_iterator_base<std::pair<char const, bool>, false>::_Node_iterator_base(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  0.00      3.34     0.00        3     0.00     0.00  std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_valptr()
  0.00      3.34     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::new_allocator()
  0.00      3.34     0.00        2     0.00     0.00  __gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy(std::allocator<char> const&)
  0.00      3.34     0.00        2     0.00     0.00  bool __gnu_cxx::__is_null_pointer<char>(char*)
  0.00      3.34     0.00        2     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned int, char const&, unsigned int) const
  0.00      3.34     0.00        2     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned int, char const&, unsigned int) const
  0.00      3.34     0.00        2     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_uses_single_bucket(std::__detail::_Hash_node_base**) const
  0.00      3.34     0.00        2     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const
  0.00      3.34     0.00        2     0.00     0.00  std::hash<char>::operator()(char) const
  0.00      3.34     0.00        2     0.00     0.00  std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(char const&) const
  0.00      3.34     0.00        2     0.00     0.00  std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash() const
  0.00      3.34     0.00        2     0.00     0.00  std::__detail::_Hashtable_ebo_helper<1, std::hash<char>, true>::_M_cget() const
  0.00      3.34     0.00        2     0.00     0.00  std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > const&)
  0.00      3.34     0.00        2     0.00     0.00  std::allocator<std::__detail::_Hash_node_base*>::~allocator()
  0.00      3.34     0.00        2     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int)
  0.00      3.34     0.00        2     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets()
  0.00      3.34     0.00        2     0.00     0.00  std::_Head_base<0u, char&&, false>::_M_head(std::_Head_base<0u, char&&, false>&)
  0.00      3.34     0.00        2     0.00     0.00  std::_Head_base<0u, char&&, false>::_Head_base<char>(char&&)
  0.00      3.34     0.00        2     0.00     0.00  std::_Tuple_impl<0u, char&&>::_M_head(std::_Tuple_impl<0u, char&&>&)
  0.00      3.34     0.00        2     0.00     0.00  std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction(std::allocator<char> const&)
  0.00      3.34     0.00        2     0.00     0.00  void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*)
  0.00      3.34     0.00        2     0.00     0.00  void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)
  0.00      3.34     0.00        2     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*)
  0.00      3.34     0.00        2     0.00     0.00  void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type)
  0.00      3.34     0.00        2     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      3.34     0.00        2     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string()
  0.00      3.34     0.00        2     0.00     0.00  std::__detail::_Hash_node_base::_Hash_node_base()
  0.00      3.34     0.00        2     0.00     0.00  std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag)
  0.00      3.34     0.00        2     0.00     0.00  std::iterator_traits<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
  0.00      3.34     0.00        2     0.00     0.00  std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&)
  0.00      3.34     0.00        2     0.00     0.00  char&& std::forward<char&&>(std::remove_reference<char&&>::type&)
  0.00      3.34     0.00        2     0.00     0.39  void std::reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
  0.00      3.34     0.00        2     0.00     0.00  std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*)
  0.00      3.34     0.00        2     0.00     0.00  operator new(unsigned int, void*)
  0.00      3.34     0.00        1     0.00     0.70  parseTreeToInfix[abi:cxx11](ParseTree*)
  0.00      3.34     0.00        1     0.00     0.00  getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*)
  0.00      3.34     0.00        1     0.00     0.30  prefixToParseTree(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
  0.00      3.34     0.00        1     0.00     0.18  getBinaryTreeHeight(ParseTree*)
  0.00      3.34     0.00        1     0.00     0.00  evaluateTreeTruthValue(ParseTree*)
  0.00      3.34     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      3.34     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      3.34     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      3.34     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      3.34     0.00        1     0.00     0.00  Stack::Stack()
  0.00      3.34     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::deallocate(std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int)
  0.00      3.34     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocate(unsigned int, void const*)
  0.00      3.34     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::new_allocator()
  0.00      3.34     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::deallocate(std::__detail::_Hash_node_base**, unsigned int)
  0.00      3.34     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned int, void const*)
  0.00      3.34     0.00        1     0.00     0.00  bool __gnu_cxx::__is_null_pointer<char const>(char const*)
  0.00      3.34     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::_M_max_size() const
  0.00      3.34     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::_M_max_size() const
  0.00      3.34     0.00        1     0.00     0.00  std::__detail::_Hash_node<std::pair<char const, bool>, false>::_M_next() const
  0.00      3.34     0.00        1     0.00     0.00  std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::operator->() const
  0.00      3.34     0.00        1     0.00     0.00  std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_node_code_cache<false>&, unsigned int) const
  0.00      3.34     0.00        1     0.00     0.00  std::__detail::_Prime_rehash_policy::_M_state() const
  0.00      3.34     0.00        1     0.00     0.00  std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocator()
  0.00      3.34     0.00        1     0.00     0.00  std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::~allocator()
  0.00      3.34     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&)
  0.00      3.34     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::~_Scoped_node()
  0.00      3.34     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned int, std::integral_constant<bool, true>)
  0.00      3.34     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned int)
  0.00      3.34     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int, unsigned int, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int)
  0.00      3.34     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned int, std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  0.00      3.34     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::end()
  0.00      3.34     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(char const&)
  0.00      3.34     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear()
  0.00      3.34     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned int, unsigned int const&)
  0.00      3.34     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable()
  0.00      3.34     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable()
  0.00      3.34     0.00        1     0.00     0.00  std::_Tuple_impl<0u, char&&>::_Tuple_impl(std::_Tuple_impl<0u, char&&>&&)
  0.00      3.34     0.00        1     0.00     0.00  std::_Tuple_impl<0u, char&&>::_Tuple_impl<char>(char&&)
  0.00      3.34     0.00        1     0.00     0.00  std::char_traits<char>::length(char const*)
  0.00      3.34     0.00        1     0.00     0.00  std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::end()
  0.00      3.34     0.00        1     0.00     0.00  std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::find(char const&)
  0.00      3.34     0.00        1     0.00     0.00  std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::unordered_map()
  0.00      3.34     0.00        1     0.00     0.00  std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::~unordered_map()
  0.00      3.34     0.00        1     0.00     0.00  std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::operator[](char&&)
  0.00      3.34     0.00        1     0.00     0.00  std::pointer_traits<std::__detail::_Hash_node<std::pair<char const, bool>, false>*>::pointer_to(std::__detail::_Hash_node<std::pair<char const, bool>, false>&)
  0.00      3.34     0.00        1     0.00     0.00  std::pointer_traits<std::__detail::_Hash_node_base**>::pointer_to(std::__detail::_Hash_node_base*&)
  0.00      3.34     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int)
  0.00      3.34     0.00        1     0.00     0.00  void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::destroy<std::pair<char const, bool> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*)
  0.00      3.34     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, unsigned int)
  0.00      3.34     0.00        1     0.00     0.00  void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::construct<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&)
  0.00      3.34     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate(std::allocator<std::__detail::_Hash_node_base*>&, std::__detail::_Hash_node_base**, unsigned int)
  0.00      3.34     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned int)
  0.00      3.34     0.00        1     0.00     0.00  std::pair<char const, bool>::pair<char&&, 0u>(std::tuple<char&&>&, std::tuple<>&, std::_Index_tuple<0u>, std::_Index_tuple<>)
  0.00      3.34     0.00        1     0.00     0.00  std::pair<char const, bool>::pair<char&&>(std::piecewise_construct_t, std::tuple<char&&>, std::tuple<>)
  0.00      3.34     0.00        1     0.00     0.00  std::tuple<char&&>::tuple(std::tuple<char&&>&&)
  0.00      3.34     0.00        1     0.00     0.00  std::tuple<char&&>::tuple<char, true, true>(char&&)
  0.00      3.34     0.00        1     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char> const&)
  0.00      3.34     0.00        1     0.00     0.00  void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
  0.00      3.34     0.00        1     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
  0.00      3.34     0.00        1     0.00     0.00  std::__detail::_Hash_node<std::pair<char const, bool>, false>::_Hash_node()
  0.00      3.34     0.00        1     0.00     0.00  std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&)
  0.00      3.34     0.00        1     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  0.00      3.34     0.00        1     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_buckets(unsigned int)
  0.00      3.34     0.00        1     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  0.00      3.34     0.00        1     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int)
  0.00      3.34     0.00        1     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  0.00      3.34     0.00        1     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_Hashtable_alloc()
  0.00      3.34     0.00        1     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::~_Hashtable_alloc()
  0.00      3.34     0.00        1     0.00     0.00  std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float)
  0.00      3.34     0.00        1     0.00     0.00  std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::_Hashtable_ebo_helper()
  0.00      3.34     0.00        1     0.00     0.00  std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::~_Hashtable_ebo_helper()
  0.00      3.34     0.00        1     0.00     0.00  std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&)
  0.00      3.34     0.00        1     0.00     0.00  std::__detail::operator==(std::__detail::_Node_iterator_base<std::pair<char const, bool>, false> const&, std::__detail::_Node_iterator_base<std::pair<char const, bool>, false> const&)
  0.00      3.34     0.00        1     0.00     0.00  std::iterator_traits<char const*>::difference_type std::__distance<char const*>(char const*, char const*, std::random_access_iterator_tag)
  0.00      3.34     0.00        1     0.00     0.00  void std::destroy_at<std::pair<char const, bool> >(std::pair<char const, bool>*)
  0.00      3.34     0.00        1     0.00     0.00  std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__addressof<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>&)
  0.00      3.34     0.00        1     0.00     0.00  std::__detail::_Hash_node_base** std::__addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&)
  0.00      3.34     0.00        1     0.00     0.00  char& std::__get_helper<0u, char&&>(std::_Tuple_impl<0u, char&&>&)
  0.00      3.34     0.00        1     0.00     0.00  std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__to_address<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  0.00      3.34     0.00        1     0.00     0.00  std::__detail::_Hash_node_base** std::__to_address<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base**)
  0.00      3.34     0.00        1     0.00     0.00  decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&)
  0.00      3.34     0.00        1     0.00     0.00  std::tuple<char&&> std::forward_as_tuple<char>(char&&)
  0.00      3.34     0.00        1     0.00     0.00  std::iterator_traits<char const*>::iterator_category std::__iterator_category<char const*>(char const* const&)
  0.00      3.34     0.00        1     0.00     0.00  std::tuple_element<0u, std::tuple<char&&> >::type& std::get<0u, char&&>(std::tuple<char&&>&)
  0.00      3.34     0.00        1     0.00     0.00  std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*)
  0.00      3.34     0.00        1     0.00     0.00  std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::addressof<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>&)
  0.00      3.34     0.00        1     0.00     0.00  std::__detail::_Hash_node_base** std::addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2022 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.30% of 3.34 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     90.7    0.00    3.03                 main [1]
                0.02    1.75       1/1           infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
                0.00    0.70       1/1           parseTreeToInfix[abi:cxx11](ParseTree*) [6]
                0.00    0.30       1/1           prefixToParseTree(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [13]
                0.00    0.18       1/1           getBinaryTreeHeight(ParseTree*) [22]
                0.08    0.00       1/1           ParseTree::~ParseTree() [33]
                0.00    0.00       5/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() [58]
                0.00    0.00       2/2           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [59]
                0.00    0.00       1/1           evaluateTreeTruthValue(ParseTree*) [66]
                0.00    0.00       1/2           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string() [67]
-----------------------------------------------
                0.02    1.75       1/1           main [1]
[2]     53.0    0.02    1.75       1         infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
                0.00    0.79       2/2           void std::reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [4]
                0.04    0.51   66667/66667       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char) [8]
                0.09    0.11  133334/200003      bool __gnu_cxx::operator==<char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [12]
                0.07    0.00  133333/233332      __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++() [25]
                0.06    0.00  133333/466665      __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const [19]
                0.04    0.01   66666/66666       Stack::push(char) [38]
                0.02    0.00   66666/66666       Stack::pop() [47]
                0.01    0.00       1/1           Stack::~Stack() [52]
                0.00    0.00       3/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::end() [60]
                0.00    0.00       3/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::begin() [64]
                0.00    0.00       1/2           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string() [67]
                0.00    0.00       1/1           Stack::Stack() [145]
-----------------------------------------------
                0.08    0.43   66667/133334      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char) [8]
                0.08    0.43   66667/133334      inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [7]
[3]     30.8    0.16    0.87  133334         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [3]
                0.10    0.38  133334/133374      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const [9]
                0.05    0.17  133334/133339      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned int) [17]
                0.08    0.00  133334/400189      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [15]
                0.05    0.00  133334/266673      std::char_traits<char>::assign(char&, char const&) [29]
                0.03    0.00  133334/133338      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size() const [44]
                0.00    0.00      26/26          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int) [57]
-----------------------------------------------
                0.00    0.79       2/2           infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
[4]     23.6    0.00    0.79       2         void std::reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [4]
                0.07    0.72       2/2           void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag) [5]
                0.00    0.00       2/2           std::iterator_traits<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [136]
-----------------------------------------------
                0.07    0.72       2/2           void std::reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [4]
[5]     23.6    0.07    0.72       2         void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag) [5]
                0.10    0.23   99999/99999       void std::iter_swap<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [11]
                0.07    0.12  100001/100001      decltype (std::__detail::__synth3way((declval<char*&>)(), (declval<char*&>)())) __gnu_cxx::operator<=><char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [20]
                0.07    0.00  100001/100001      std::operator<(std::strong_ordering, std::__cmp_cat::__unspec) [35]
                0.06    0.00  100001/100001      __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator--() [37]
                0.05    0.00   99999/233332      __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++() [25]
                0.01    0.00  100001/100001      std::__cmp_cat::__unspec::__unspec(std::__cmp_cat::__unspec*) [48]
                0.00    0.00       2/200003      bool __gnu_cxx::operator==<char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [12]
-----------------------------------------------
                0.00    0.70       1/1           main [1]
[6]     21.1    0.00    0.70       1         parseTreeToInfix[abi:cxx11](ParseTree*) [6]
                0.03    0.67       1/1           inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [7]
                0.01    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [56]
-----------------------------------------------
                               66666             inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [7]
                0.03    0.67       1/1           parseTreeToInfix[abi:cxx11](ParseTree*) [6]
[7]     20.9    0.03    0.67       1+66666   inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [7]
                0.08    0.43   66667/133334      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [3]
                0.06    0.00  100000/166667      ParseTree::getRightNode(ParseTree*) [30]
                0.05    0.00  100000/166668      ParseTree::getLeftNode(ParseTree*) [31]
                0.04    0.00   66667/66671       ParseTree::getValue() [42]
                               66666             inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [7]
-----------------------------------------------
                0.04    0.51   66667/66667       infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
[8]     16.6    0.04    0.51   66667         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char) [8]
                0.08    0.43   66667/133334      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [3]
-----------------------------------------------
                0.00    0.00      40/133374      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int) [57]
                0.10    0.38  133334/133374      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [3]
[9]     14.3    0.10    0.38  133374         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const [9]
                0.08    0.30  133374/133419      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const [10]
-----------------------------------------------
                0.00    0.00      45/133419      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [54]
                0.08    0.30  133374/133419      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const [9]
[10]    11.3    0.08    0.30  133419         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const [10]
                0.07    0.15  133419/133419      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() const [18]
                0.08    0.00  133419/400189      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [15]
-----------------------------------------------
                0.10    0.23   99999/99999       void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag) [5]
[11]    10.0    0.10    0.23   99999         void std::iter_swap<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [11]
                0.04    0.11   99999/99999       std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<char> >, std::is_move_constructible<char>, std::is_move_assignable<char> >::value, void>::type std::swap<char>(char&, char&) [24]
                0.08    0.00  199998/466665      __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const [19]
-----------------------------------------------
                0.00    0.00       2/200003      void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag) [5]
                0.05    0.05   66667/200003      createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [14]
                0.09    0.11  133334/200003      infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
[12]     9.0    0.14    0.16  200003         bool __gnu_cxx::operator==<char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [12]
                0.16    0.00  400006/600008      __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const [16]
-----------------------------------------------
                0.00    0.30       1/1           main [1]
[13]     8.9    0.00    0.30       1         prefixToParseTree(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [13]
                0.02    0.28       1/1           createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [14]
                0.00    0.00       1/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::end() [60]
                0.00    0.00       1/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::begin() [64]
-----------------------------------------------
                               66666             createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [14]
                0.02    0.28       1/1           prefixToParseTree(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [13]
[14]     8.9    0.02    0.28       1+66666   createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [14]
                0.05    0.05   66667/200003      bool __gnu_cxx::operator==<char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [12]
                0.04    0.03   66667/66667       __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++(int) [36]
                0.06    0.00  133334/466665      __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const [19]
                0.03    0.00   66667/66667       ParseTree::ParseTree(char) [46]
                0.01    0.00   33333/33333       ParseTree::setLeftNode(ParseTree*) [49]
                0.01    0.00   33333/33333       ParseTree::setRightNode(ParseTree*) [50]
                               66666             createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [14]
-----------------------------------------------
                0.00    0.00       1/400189      void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [68]
                0.00    0.00       2/400189      void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [62]
                0.00    0.00       4/400189      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::begin() [64]
                0.00    0.00       4/400189      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::end() [60]
                0.00    0.00       4/400189      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [59]
                0.00    0.00      40/400189      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int) [57]
                0.00    0.00      42/400189      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned int) [55]
                0.08    0.00  133334/400189      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [3]
                0.08    0.00  133339/400189      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned int) [17]
                0.08    0.00  133419/400189      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const [10]
[15]     7.5    0.25    0.00  400189         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [15]
-----------------------------------------------
                0.08    0.00  200002/600008      decltype (std::__detail::__synth3way((declval<char*&>)(), (declval<char*&>)())) __gnu_cxx::operator<=><char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [20]
                0.16    0.00  400006/600008      bool __gnu_cxx::operator==<char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [12]
[16]     7.2    0.24    0.00  600008         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const [16]
-----------------------------------------------
                0.00    0.00       1/133339      void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [68]
                0.00    0.00       2/133339      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string() [67]
                0.00    0.00       2/133339      void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [62]
                0.05    0.17  133334/133339      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [3]
[17]     6.7    0.05    0.17  133339         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned int) [17]
                0.08    0.00  133339/400189      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [15]
                0.05    0.00  133339/266673      std::char_traits<char>::assign(char&, char const&) [29]
                0.04    0.00  133339/133339      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_length(unsigned int) [40]
-----------------------------------------------
                0.07    0.15  133419/133419      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const [10]
[18]     6.4    0.07    0.15  133419         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() const [18]
                0.08    0.07  133419/133419      std::pointer_traits<char const*>::pointer_to(char const&) [23]
-----------------------------------------------
                0.06    0.00  133333/466665      infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
                0.06    0.00  133334/466665      createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [14]
                0.08    0.00  199998/466665      void std::iter_swap<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [11]
[19]     5.8    0.20    0.00  466665         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const [19]
-----------------------------------------------
                0.07    0.12  100001/100001      void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag) [5]
[20]     5.7    0.07    0.12  100001         decltype (std::__detail::__synth3way((declval<char*&>)(), (declval<char*&>)())) __gnu_cxx::operator<=><char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [20]
                0.08    0.00  200002/600008      __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const [16]
                0.04    0.00  100001/100001      auto std::__detail::_Synth3way::operator()<char*, char*>(char* const&, char* const&) const [41]
-----------------------------------------------
                              133334             getNodeHeight(ParseTree*) [21]
                0.06    0.12       1/1           getBinaryTreeHeight(ParseTree*) [22]
[21]     5.4    0.06    0.12       1+133334  getNodeHeight(ParseTree*) [21]
                0.05    0.00   66667/66667       long long const& std::max<long long>(long long const&, long long const&) [39]
                0.04    0.00   66667/166667      ParseTree::getRightNode(ParseTree*) [30]
                0.04    0.00   66667/166668      ParseTree::getLeftNode(ParseTree*) [31]
                              133334             getNodeHeight(ParseTree*) [21]
-----------------------------------------------
                0.00    0.18       1/1           main [1]
[22]     5.4    0.00    0.18       1         getBinaryTreeHeight(ParseTree*) [22]
                0.06    0.12       1/1           getNodeHeight(ParseTree*) [21]
-----------------------------------------------
                0.08    0.07  133419/133419      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() const [18]
[23]     4.5    0.08    0.07  133419         std::pointer_traits<char const*>::pointer_to(char const&) [23]
                0.04    0.03  133419/133419      char const* std::addressof<char const>(char const&) [34]
-----------------------------------------------
                0.04    0.11   99999/99999       void std::iter_swap<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [11]
[24]     4.5    0.04    0.11   99999         std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<char> >, std::is_move_constructible<char>, std::is_move_assignable<char> >::value, void>::type std::swap<char>(char&, char&) [24]
                0.11    0.00  299997/299999      std::remove_reference<char&>::type&& std::move<char&>(char&) [26]
-----------------------------------------------
                0.05    0.00   99999/233332      void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag) [5]
                0.07    0.00  133333/233332      infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
[25]     3.7    0.13    0.00  233332         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++() [25]
-----------------------------------------------
                0.00    0.00       1/299999      std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::operator[](char&&) [69]
                0.00    0.00       1/299999      std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [70]
                0.11    0.00  299997/299999      std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<char> >, std::is_move_constructible<char>, std::is_move_assignable<char> >::value, void>::type std::swap<char>(char&, char&) [24]
[26]     3.3    0.11    0.00  299999         std::remove_reference<char&>::type&& std::move<char&>(char&) [26]
-----------------------------------------------
                                                 <spontaneous>
[27]     3.1    0.11    0.00                 __x86.get_pc_thunk.bx [27]
-----------------------------------------------
                                                 <spontaneous>
[28]     3.1    0.11    0.00                 _dl_relocate_static_pie [28]
-----------------------------------------------
                0.05    0.00  133334/266673      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [3]
                0.05    0.00  133339/266673      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned int) [17]
[29]     3.0    0.10    0.00  266673         std::char_traits<char>::assign(char&, char const&) [29]
-----------------------------------------------
                0.04    0.00   66667/166667      getNodeHeight(ParseTree*) [21]
                0.06    0.00  100000/166667      inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [7]
[30]     3.0    0.10    0.00  166667         ParseTree::getRightNode(ParseTree*) [30]
-----------------------------------------------
                0.00    0.00       1/166668      getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [65]
                0.04    0.00   66667/166668      getNodeHeight(ParseTree*) [21]
                0.05    0.00  100000/166668      inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [7]
[31]     2.7    0.09    0.00  166668         ParseTree::getLeftNode(ParseTree*) [31]
-----------------------------------------------
                                                 <spontaneous>
[32]     2.7    0.09    0.00                 _init [32]
-----------------------------------------------
                               66666             ParseTree::~ParseTree() [33]
                0.08    0.00       1/1           main [1]
[33]     2.4    0.08    0.00       1+66666   ParseTree::~ParseTree() [33]
                               66666             ParseTree::~ParseTree() [33]
-----------------------------------------------
                0.04    0.03  133419/133419      std::pointer_traits<char const*>::pointer_to(char const&) [23]
[34]     2.1    0.04    0.03  133419         char const* std::addressof<char const>(char const&) [34]
                0.03    0.00  133419/133419      char const* std::__addressof<char const>(char const&) [43]
-----------------------------------------------
                0.07    0.00  100001/100001      void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag) [5]
[35]     2.1    0.07    0.00  100001         std::operator<(std::strong_ordering, std::__cmp_cat::__unspec) [35]
-----------------------------------------------
                0.04    0.03   66667/66667       createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [14]
[36]     2.1    0.04    0.03   66667         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++(int) [36]
                0.03    0.00   66667/66675       __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__normal_iterator(char* const&) [45]
-----------------------------------------------
                0.06    0.00  100001/100001      void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag) [5]
[37]     1.8    0.06    0.00  100001         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator--() [37]
-----------------------------------------------
                0.04    0.01   66666/66666       infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
[38]     1.5    0.04    0.01   66666         Stack::push(char) [38]
                0.01    0.00      16/16          Stack::resizeArray() [51]
-----------------------------------------------
                0.05    0.00   66667/66667       getNodeHeight(ParseTree*) [21]
[39]     1.3    0.05    0.00   66667         long long const& std::max<long long>(long long const&, long long const&) [39]
-----------------------------------------------
                0.04    0.00  133339/133339      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned int) [17]
[40]     1.2    0.04    0.00  133339         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_length(unsigned int) [40]
-----------------------------------------------
                0.04    0.00  100001/100001      decltype (std::__detail::__synth3way((declval<char*&>)(), (declval<char*&>)())) __gnu_cxx::operator<=><char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [20]
[41]     1.2    0.04    0.00  100001         auto std::__detail::_Synth3way::operator()<char*, char*>(char* const&, char* const&) const [41]
-----------------------------------------------
                0.00    0.00       4/66671       getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [65]
                0.04    0.00   66667/66671       inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [7]
[42]     1.2    0.04    0.00   66671         ParseTree::getValue() [42]
-----------------------------------------------
                0.03    0.00  133419/133419      char const* std::addressof<char const>(char const&) [34]
[43]     0.9    0.03    0.00  133419         char const* std::__addressof<char const>(char const&) [43]
-----------------------------------------------
                0.00    0.00       4/133338      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::end() [60]
                0.03    0.00  133334/133338      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [3]
[44]     0.9    0.03    0.00  133338         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size() const [44]
-----------------------------------------------
                0.00    0.00       4/66675       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::begin() [64]
                0.00    0.00       4/66675       std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::end() [60]
                0.03    0.00   66667/66675       __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++(int) [36]
[45]     0.9    0.03    0.00   66675         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__normal_iterator(char* const&) [45]
-----------------------------------------------
                0.03    0.00   66667/66667       createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [14]
[46]     0.9    0.03    0.00   66667         ParseTree::ParseTree(char) [46]
-----------------------------------------------
                0.02    0.00   66666/66666       infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
[47]     0.6    0.02    0.00   66666         Stack::pop() [47]
-----------------------------------------------
                0.01    0.00  100001/100001      void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag) [5]
[48]     0.3    0.01    0.00  100001         std::__cmp_cat::__unspec::__unspec(std::__cmp_cat::__unspec*) [48]
-----------------------------------------------
                0.01    0.00   33333/33333       createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [14]
[49]     0.3    0.01    0.00   33333         ParseTree::setLeftNode(ParseTree*) [49]
-----------------------------------------------
                0.01    0.00   33333/33333       createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [14]
[50]     0.3    0.01    0.00   33333         ParseTree::setRightNode(ParseTree*) [50]
-----------------------------------------------
                0.01    0.00      16/16          Stack::push(char) [38]
[51]     0.3    0.01    0.00      16         Stack::resizeArray() [51]
-----------------------------------------------
                0.01    0.00       1/1           infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
[52]     0.3    0.01    0.00       1         Stack::~Stack() [52]
-----------------------------------------------
                                                 <spontaneous>
[53]     0.3    0.01    0.00                 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [53]
-----------------------------------------------
                0.00    0.00       5/45          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() [58]
                0.00    0.00      40/45          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int) [57]
[54]     0.2    0.00    0.01      45         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [54]
                0.01    0.00      42/42          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned int) [55]
                0.00    0.00      45/133419      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const [10]
-----------------------------------------------
                0.01    0.00      42/42          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [54]
[55]     0.2    0.01    0.00      42         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned int) [55]
                0.00    0.00      42/400189      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [15]
                0.00    0.00      42/84          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() [79]
                0.00    0.00      42/42          std::allocator_traits<std::allocator<char> >::deallocate(std::allocator<char>&, char*, unsigned int) [88]
-----------------------------------------------
                0.01    0.00       1/1           parseTreeToInfix[abi:cxx11](ParseTree*) [6]
[56]     0.1    0.01    0.00       1         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [56]
                0.00    0.00       1/1           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [68]
                0.00    0.00       1/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() [97]
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char> const&) [191]
                0.00    0.00       1/1           std::char_traits<char>::length(char const*) [174]
-----------------------------------------------
                0.00    0.00      26/26          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [3]
[57]     0.1    0.00    0.00      26         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int) [57]
                0.00    0.00      40/45          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [54]
                0.00    0.00      40/133374      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const [9]
                0.00    0.00      40/400189      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [15]
                0.00    0.00      80/82          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::length() const [80]
                0.00    0.00      40/42          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [92]
                0.00    0.00      40/43          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int) [84]
                0.00    0.00      40/42          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data(char*) [91]
                0.00    0.00      40/42          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_capacity(unsigned int) [90]
-----------------------------------------------
                0.00    0.00       5/5           main [1]
[58]     0.0    0.00    0.00       5         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() [58]
                0.00    0.00       5/45          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [54]
                0.00    0.00       5/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider() [96]
-----------------------------------------------
                0.00    0.00       2/2           main [1]
[59]     0.0    0.00    0.00       2         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [59]
                0.00    0.00       2/2           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*) [61]
                0.00    0.00       4/400189      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [15]
                0.00    0.00       2/84          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() const [78]
                0.00    0.00       2/2           __gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy(std::allocator<char> const&) [115]
                0.00    0.00       2/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() [97]
                0.00    0.00       2/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char>&&) [101]
                0.00    0.00       2/82          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::length() const [80]
-----------------------------------------------
                0.00    0.00       1/4           prefixToParseTree(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [13]
                0.00    0.00       3/4           infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
[60]     0.0    0.00    0.00       4         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::end() [60]
                0.00    0.00       4/400189      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [15]
                0.00    0.00       4/66675       __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__normal_iterator(char* const&) [45]
                0.00    0.00       4/133338      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size() const [44]
-----------------------------------------------
                0.00    0.00       2/2           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [59]
[61]     0.0    0.00    0.00       2         void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*) [61]
                0.00    0.00       2/2           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type) [63]
-----------------------------------------------
                0.00    0.00       2/2           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type) [63]
[62]     0.0    0.00    0.00       2         void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [62]
                0.00    0.00       2/133339      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned int) [17]
                0.00    0.00       2/400189      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [15]
                0.00    0.00       2/2           bool __gnu_cxx::__is_null_pointer<char>(char*) [116]
                0.00    0.00       2/2           std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*) [139]
                0.00    0.00       2/42          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [92]
                0.00    0.00       2/42          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data(char*) [91]
                0.00    0.00       2/42          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_capacity(unsigned int) [90]
                0.00    0.00       2/2           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*) [133]
-----------------------------------------------
                0.00    0.00       2/2           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*) [61]
[63]     0.0    0.00    0.00       2         void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type) [63]
                0.00    0.00       2/2           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [62]
-----------------------------------------------
                0.00    0.00       1/4           prefixToParseTree(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [13]
                0.00    0.00       3/4           infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
[64]     0.0    0.00    0.00       4         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::begin() [64]
                0.00    0.00       4/400189      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [15]
                0.00    0.00       4/66675       __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__normal_iterator(char* const&) [45]
-----------------------------------------------
                                   1             getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [65]
                0.00    0.00       1/1           evaluateTreeTruthValue(ParseTree*) [66]
[65]     0.0    0.00    0.00       1+1       getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [65]
                0.00    0.00       4/66671       ParseTree::getValue() [42]
                0.00    0.00       1/1           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::operator[](char&&) [69]
                0.00    0.00       1/166668      ParseTree::getLeftNode(ParseTree*) [31]
                0.00    0.00       1/1           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::end() [175]
                0.00    0.00       1/1           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::find(char const&) [176]
                0.00    0.00       1/1           std::__detail::operator==(std::__detail::_Node_iterator_base<std::pair<char const, bool>, false> const&, std::__detail::_Node_iterator_base<std::pair<char const, bool>, false> const&) [205]
                                   1             getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [65]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[66]     0.0    0.00    0.00       1         evaluateTreeTruthValue(ParseTree*) [66]
                0.00    0.00       1/1           getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [65]
                0.00    0.00       1/1           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::unordered_map() [177]
                0.00    0.00       1/1           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::~unordered_map() [178]
-----------------------------------------------
                0.00    0.00       1/2           infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
                0.00    0.00       1/2           main [1]
[67]     0.0    0.00    0.00       2         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string() [67]
                0.00    0.00       2/133339      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned int) [17]
                0.00    0.00       2/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() [97]
                0.00    0.00       2/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char>&&) [101]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [56]
[68]     0.0    0.00    0.00       1         void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [68]
                0.00    0.00       1/133339      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned int) [17]
                0.00    0.00       1/400189      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [15]
                0.00    0.00       1/1           bool __gnu_cxx::__is_null_pointer<char const>(char const*) [151]
                0.00    0.00       1/1           std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*) [217]
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*) [192]
-----------------------------------------------
                0.00    0.00       1/1           getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [65]
[69]     0.0    0.00    0.00       1         std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::operator[](char&&) [69]
                0.00    0.00       1/299999      std::remove_reference<char&>::type&& std::move<char&>(char&) [26]
                0.00    0.00       1/1           std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [70]
-----------------------------------------------
                0.00    0.00       1/1           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::operator[](char&&) [69]
[70]     0.0    0.00    0.00       1         std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [70]
                0.00    0.00       1/299999      std::remove_reference<char&>::type&& std::move<char&>(char&) [26]
                0.00    0.00       1/2           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(char const&) const [122]
                0.00    0.00       1/3           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(unsigned int) const [108]
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned int, char const&, unsigned int) const [117]
                0.00    0.00       1/1           std::tuple<char&&> std::forward_as_tuple<char>(char&&) [214]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [160]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int, unsigned int, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [164]
                0.00    0.00       1/1           std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::operator->() const [155]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::~_Scoped_node() [161]
-----------------------------------------------
                0.00    0.00       1/130         std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, unsigned int) [183]
                0.00    0.00       1/130         std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [181]
                0.00    0.00       1/130         std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate(std::allocator<std::__detail::_Hash_node_base*>&, std::__detail::_Hash_node_base**, unsigned int) [185]
                0.00    0.00       1/130         std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned int) [186]
                0.00    0.00      42/130         std::char_traits<char>::copy(char*, char const*, unsigned int) [83]
                0.00    0.00      42/130         std::allocator_traits<std::allocator<char> >::allocate(std::allocator<char>&, unsigned int) [89]
                0.00    0.00      42/130         std::allocator_traits<std::allocator<char> >::deallocate(std::allocator<char>&, char*, unsigned int) [88]
[77]     0.0    0.00    0.00     130         std::is_constant_evaluated() [77]
-----------------------------------------------
                0.00    0.00       2/84          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [59]
                0.00    0.00      82/84          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::max_size() const [81]
[78]     0.0    0.00    0.00      84         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() const [78]
-----------------------------------------------
                0.00    0.00      42/84          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [92]
                0.00    0.00      42/84          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned int) [55]
[79]     0.0    0.00    0.00      84         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() [79]
-----------------------------------------------
                0.00    0.00       2/82          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [59]
                0.00    0.00      80/82          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int) [57]
[80]     0.0    0.00    0.00      82         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::length() const [80]
-----------------------------------------------
                0.00    0.00      82/82          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [92]
[81]     0.0    0.00    0.00      82         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::max_size() const [81]
                0.00    0.00      82/84          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() const [78]
                0.00    0.00      82/82          std::allocator_traits<std::allocator<char> >::max_size(std::allocator<char> const&) [82]
-----------------------------------------------
                0.00    0.00      82/82          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::max_size() const [81]
[82]     0.0    0.00    0.00      82         std::allocator_traits<std::allocator<char> >::max_size(std::allocator<char> const&) [82]
-----------------------------------------------
                0.00    0.00      43/43          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int) [84]
[83]     0.0    0.00    0.00      43         std::char_traits<char>::copy(char*, char const*, unsigned int) [83]
                0.00    0.00      42/130         std::is_constant_evaluated() [77]
-----------------------------------------------
                0.00    0.00       1/43          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*) [192]
                0.00    0.00       2/43          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*) [133]
                0.00    0.00      40/43          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int) [57]
[84]     0.0    0.00    0.00      43         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int) [84]
                0.00    0.00      43/43          std::char_traits<char>::copy(char*, char const*, unsigned int) [83]
-----------------------------------------------
                0.00    0.00      42/42          std::allocator_traits<std::allocator<char> >::deallocate(std::allocator<char>&, char*, unsigned int) [88]
[85]     0.0    0.00    0.00      42         __gnu_cxx::new_allocator<char>::deallocate(char*, unsigned int) [85]
-----------------------------------------------
                0.00    0.00      42/42          std::allocator_traits<std::allocator<char> >::allocate(std::allocator<char>&, unsigned int) [89]
[86]     0.0    0.00    0.00      42         __gnu_cxx::new_allocator<char>::allocate(unsigned int, void const*) [86]
                0.00    0.00      42/42          __gnu_cxx::new_allocator<char>::_M_max_size() const [87]
-----------------------------------------------
                0.00    0.00      42/42          __gnu_cxx::new_allocator<char>::allocate(unsigned int, void const*) [86]
[87]     0.0    0.00    0.00      42         __gnu_cxx::new_allocator<char>::_M_max_size() const [87]
-----------------------------------------------
                0.00    0.00      42/42          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned int) [55]
[88]     0.0    0.00    0.00      42         std::allocator_traits<std::allocator<char> >::deallocate(std::allocator<char>&, char*, unsigned int) [88]
                0.00    0.00      42/130         std::is_constant_evaluated() [77]
                0.00    0.00      42/42          __gnu_cxx::new_allocator<char>::deallocate(char*, unsigned int) [85]
-----------------------------------------------
                0.00    0.00      42/42          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [92]
[89]     0.0    0.00    0.00      42         std::allocator_traits<std::allocator<char> >::allocate(std::allocator<char>&, unsigned int) [89]
                0.00    0.00      42/130         std::is_constant_evaluated() [77]
                0.00    0.00      42/42          __gnu_cxx::new_allocator<char>::allocate(unsigned int, void const*) [86]
-----------------------------------------------
                0.00    0.00       2/42          void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [62]
                0.00    0.00      40/42          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int) [57]
[90]     0.0    0.00    0.00      42         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_capacity(unsigned int) [90]
-----------------------------------------------
                0.00    0.00       2/42          void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [62]
                0.00    0.00      40/42          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int) [57]
[91]     0.0    0.00    0.00      42         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data(char*) [91]
-----------------------------------------------
                0.00    0.00       2/42          void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [62]
                0.00    0.00      40/42          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int) [57]
[92]     0.0    0.00    0.00      42         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [92]
                0.00    0.00      82/82          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::max_size() const [81]
                0.00    0.00      42/84          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() [79]
                0.00    0.00      42/42          std::allocator_traits<std::allocator<char> >::allocate(std::allocator<char>&, unsigned int) [89]
-----------------------------------------------
                0.00    0.00       1/6           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [195]
                0.00    0.00       1/6           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int) [198]
                0.00    0.00       1/6           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [199]
                0.00    0.00       1/6           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_buckets(unsigned int) [196]
                0.00    0.00       2/6           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [194]
[93]     0.0    0.00    0.00       6         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_node_allocator() [93]
                0.00    0.00       6/6           std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::_M_get() [94]
-----------------------------------------------
                0.00    0.00       6/6           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_node_allocator() [93]
[94]     0.0    0.00    0.00       6         std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::_M_get() [94]
-----------------------------------------------
                0.00    0.00       5/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() [97]
[95]     0.0    0.00    0.00       5         std::pointer_traits<char*>::pointer_to(char&) [95]
                0.00    0.00       5/5           char* std::addressof<char>(char&) [100]
-----------------------------------------------
                0.00    0.00       5/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() [58]
[96]     0.0    0.00    0.00       5         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider() [96]
-----------------------------------------------
                0.00    0.00       1/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [56]
                0.00    0.00       2/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string() [67]
                0.00    0.00       2/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [59]
[97]     0.0    0.00    0.00       5         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() [97]
                0.00    0.00       5/5           std::pointer_traits<char*>::pointer_to(char&) [95]
-----------------------------------------------
                0.00    0.00       5/5           char* std::addressof<char>(char&) [100]
[98]     0.0    0.00    0.00       5         char* std::__addressof<char>(char&) [98]
-----------------------------------------------
                0.00    0.00       1/5           std::tuple<char&&> std::forward_as_tuple<char>(char&&) [214]
                0.00    0.00       1/5           std::tuple<char&&>::tuple<char, true, true>(char&&) [190]
                0.00    0.00       1/5           std::_Tuple_impl<0u, char&&>::_Tuple_impl<char>(char&&) [173]
                0.00    0.00       2/5           std::_Head_base<0u, char&&, false>::_Head_base<char>(char&&) [130]
[99]     0.0    0.00    0.00       5         char&& std::forward<char>(std::remove_reference<char>::type&) [99]
-----------------------------------------------
                0.00    0.00       5/5           std::pointer_traits<char*>::pointer_to(char&) [95]
[100]    0.0    0.00    0.00       5         char* std::addressof<char>(char&) [100]
                0.00    0.00       5/5           char* std::__addressof<char>(char&) [98]
-----------------------------------------------
                0.00    0.00       2/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string() [67]
                0.00    0.00       2/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [59]
[101]    0.0    0.00    0.00       4         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char>&&) [101]
                0.00    0.00       4/4           std::remove_reference<std::allocator<char>&>::type&& std::move<std::allocator<char>&>(std::allocator<char>&) [102]
-----------------------------------------------
                0.00    0.00       4/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char>&&) [101]
[102]    0.0    0.00    0.00       4         std::remove_reference<std::allocator<char>&>::type&& std::move<std::allocator<char>&>(std::allocator<char>&) [102]
-----------------------------------------------
                0.00    0.00       1/4           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [160]
                0.00    0.00       1/4           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [194]
                0.00    0.00       1/4           decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [213]
                0.00    0.00       1/4           void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::construct<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [184]
[103]    0.0    0.00    0.00       4         std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&) [103]
-----------------------------------------------
                0.00    0.00       1/4           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [160]
                0.00    0.00       1/4           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [194]
                0.00    0.00       1/4           decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [213]
                0.00    0.00       1/4           void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::construct<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [184]
[104]    0.0    0.00    0.00       4         std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&) [104]
-----------------------------------------------
                0.00    0.00       1/4           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [160]
                0.00    0.00       1/4           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [194]
                0.00    0.00       1/4           decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [213]
                0.00    0.00       1/4           void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::construct<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [184]
[105]    0.0    0.00    0.00       4         std::tuple<char&&>&& std::forward<std::tuple<char&&> >(std::remove_reference<std::tuple<char&&> >::type&) [105]
-----------------------------------------------
                0.00    0.00       3/3           std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_valptr() [113]
[106]    0.0    0.00    0.00       3         __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_ptr() [106]
                0.00    0.00       3/3           __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_addr() [107]
-----------------------------------------------
                0.00    0.00       3/3           __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_ptr() [106]
[107]    0.0    0.00    0.00       3         __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_addr() [107]
-----------------------------------------------
                0.00    0.00       1/3           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(char const&) [167]
                0.00    0.00       1/3           std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [70]
                0.00    0.00       1/3           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int, unsigned int, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [164]
[108]    0.0    0.00    0.00       3         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(unsigned int) const [108]
                0.00    0.00       3/3           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(unsigned int, unsigned int) const [109]
-----------------------------------------------
                0.00    0.00       3/3           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(unsigned int) const [108]
[109]    0.0    0.00    0.00       3         std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(unsigned int, unsigned int) const [109]
                0.00    0.00       3/3           std::__detail::_Mod_range_hashing::operator()(unsigned int, unsigned int) const [110]
-----------------------------------------------
                0.00    0.00       3/3           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(unsigned int, unsigned int) const [109]
[110]    0.0    0.00    0.00       3         std::__detail::_Mod_range_hashing::operator()(unsigned int, unsigned int) const [110]
-----------------------------------------------
                0.00    0.00       1/3           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(char const&) [167]
                0.00    0.00       1/3           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::end() [166]
                0.00    0.00       1/3           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int, unsigned int, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [164]
[111]    0.0    0.00    0.00       3         std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [111]
                0.00    0.00       3/3           std::__detail::_Node_iterator_base<std::pair<char const, bool>, false>::_Node_iterator_base(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [112]
-----------------------------------------------
                0.00    0.00       3/3           std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [111]
[112]    0.0    0.00    0.00       3         std::__detail::_Node_iterator_base<std::pair<char const, bool>, false>::_Node_iterator_base(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [112]
-----------------------------------------------
                0.00    0.00       1/3           std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::operator->() const [155]
                0.00    0.00       1/3           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [194]
                0.00    0.00       1/3           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [195]
[113]    0.0    0.00    0.00       3         std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_valptr() [113]
                0.00    0.00       3/3           __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_ptr() [106]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > const&) [125]
[114]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::new_allocator() [114]
-----------------------------------------------
                0.00    0.00       2/2           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [59]
[115]    0.0    0.00    0.00       2         __gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy(std::allocator<char> const&) [115]
                0.00    0.00       2/2           std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction(std::allocator<char> const&) [132]
-----------------------------------------------
                0.00    0.00       2/2           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [62]
[116]    0.0    0.00    0.00       2         bool __gnu_cxx::__is_null_pointer<char>(char*) [116]
-----------------------------------------------
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(char const&) [167]
                0.00    0.00       1/2           std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [70]
[117]    0.0    0.00    0.00       2         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned int, char const&, unsigned int) const [117]
                0.00    0.00       2/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned int, char const&, unsigned int) const [118]
-----------------------------------------------
                0.00    0.00       2/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned int, char const&, unsigned int) const [117]
[118]    0.0    0.00    0.00       2         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned int, char const&, unsigned int) const [118]
-----------------------------------------------
                0.00    0.00       2/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int) [127]
[119]    0.0    0.00    0.00       2         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_uses_single_bucket(std::__detail::_Hash_node_base**) const [119]
-----------------------------------------------
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [168]
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned int, std::integral_constant<bool, true>) [162]
[120]    0.0    0.00    0.00       2         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const [120]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(char const&) const [122]
[121]    0.0    0.00    0.00       2         std::hash<char>::operator()(char) const [121]
-----------------------------------------------
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(char const&) [167]
                0.00    0.00       1/2           std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [70]
[122]    0.0    0.00    0.00       2         std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(char const&) const [122]
                0.00    0.00       2/2           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash() const [123]
                0.00    0.00       2/2           std::hash<char>::operator()(char) const [121]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(char const&) const [122]
[123]    0.0    0.00    0.00       2         std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash() const [123]
                0.00    0.00       2/2           std::__detail::_Hashtable_ebo_helper<1, std::hash<char>, true>::_M_cget() const [124]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash() const [123]
[124]    0.0    0.00    0.00       2         std::__detail::_Hashtable_ebo_helper<1, std::hash<char>, true>::_M_cget() const [124]
-----------------------------------------------
                0.00    0.00       1/2           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int) [198]
                0.00    0.00       1/2           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_buckets(unsigned int) [196]
[125]    0.0    0.00    0.00       2         std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > const&) [125]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::new_allocator() [114]
-----------------------------------------------
                0.00    0.00       1/2           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int) [198]
                0.00    0.00       1/2           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_buckets(unsigned int) [196]
[126]    0.0    0.00    0.00       2         std::allocator<std::__detail::_Hash_node_base*>::~allocator() [126]
-----------------------------------------------
                0.00    0.00       2/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets() [128]
[127]    0.0    0.00    0.00       2         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int) [127]
                0.00    0.00       2/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_uses_single_bucket(std::__detail::_Hash_node_base**) const [119]
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int) [198]
-----------------------------------------------
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [171]
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned int, std::integral_constant<bool, true>) [162]
[128]    0.0    0.00    0.00       2         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets() [128]
                0.00    0.00       2/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int) [127]
-----------------------------------------------
                0.00    0.00       2/2           std::_Tuple_impl<0u, char&&>::_M_head(std::_Tuple_impl<0u, char&&>&) [131]
[129]    0.0    0.00    0.00       2         std::_Head_base<0u, char&&, false>::_M_head(std::_Head_base<0u, char&&, false>&) [129]
-----------------------------------------------
                0.00    0.00       1/2           std::_Tuple_impl<0u, char&&>::_Tuple_impl<char>(char&&) [173]
                0.00    0.00       1/2           std::_Tuple_impl<0u, char&&>::_Tuple_impl(std::_Tuple_impl<0u, char&&>&&) [172]
[130]    0.0    0.00    0.00       2         std::_Head_base<0u, char&&, false>::_Head_base<char>(char&&) [130]
                0.00    0.00       2/5           char&& std::forward<char>(std::remove_reference<char>::type&) [99]
-----------------------------------------------
                0.00    0.00       1/2           std::_Tuple_impl<0u, char&&>::_Tuple_impl(std::_Tuple_impl<0u, char&&>&&) [172]
                0.00    0.00       1/2           char& std::__get_helper<0u, char&&>(std::_Tuple_impl<0u, char&&>&) [210]
[131]    0.0    0.00    0.00       2         std::_Tuple_impl<0u, char&&>::_M_head(std::_Tuple_impl<0u, char&&>&) [131]
                0.00    0.00       2/2           std::_Head_base<0u, char&&, false>::_M_head(std::_Head_base<0u, char&&, false>&) [129]
-----------------------------------------------
                0.00    0.00       2/2           __gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy(std::allocator<char> const&) [115]
[132]    0.0    0.00    0.00       2         std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction(std::allocator<char> const&) [132]
-----------------------------------------------
                0.00    0.00       2/2           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [62]
[133]    0.0    0.00    0.00       2         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*) [133]
                0.00    0.00       2/43          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int) [84]
-----------------------------------------------
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable() [170]
                0.00    0.00       1/2           std::__detail::_Hash_node<std::pair<char const, bool>, false>::_Hash_node() [193]
[134]    0.0    0.00    0.00       2         std::__detail::_Hash_node_base::_Hash_node_base() [134]
-----------------------------------------------
                0.00    0.00       2/2           std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*) [139]
[135]    0.0    0.00    0.00       2         std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag) [135]
-----------------------------------------------
                0.00    0.00       2/2           void std::reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [4]
[136]    0.0    0.00    0.00       2         std::iterator_traits<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [136]
-----------------------------------------------
                0.00    0.00       2/2           std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*) [139]
[137]    0.0    0.00    0.00       2         std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&) [137]
-----------------------------------------------
                0.00    0.00       1/2           std::_Tuple_impl<0u, char&&>::_Tuple_impl(std::_Tuple_impl<0u, char&&>&&) [172]
                0.00    0.00       1/2           std::pair<char const, bool>::pair<char&&, 0u>(std::tuple<char&&>&, std::tuple<>&, std::_Index_tuple<0u>, std::_Index_tuple<>) [187]
[138]    0.0    0.00    0.00       2         char&& std::forward<char&&>(std::remove_reference<char&&>::type&) [138]
-----------------------------------------------
                0.00    0.00       2/2           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [62]
[139]    0.0    0.00    0.00       2         std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*) [139]
                0.00    0.00       2/2           std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&) [137]
                0.00    0.00       2/2           std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag) [135]
-----------------------------------------------
                0.00    0.00       1/2           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [194]
                0.00    0.00       1/2           decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [213]
[140]    0.0    0.00    0.00       2         operator new(unsigned int, void*) [140]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z13infixToPrefixNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE [220]
[141]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [141]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_main [223]
[142]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [142]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN5Stack11resizeArrayEv [221]
[143]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [143]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN9ParseTreeC2Ec [222]
[144]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [144]
-----------------------------------------------
                0.00    0.00       1/1           infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
[145]    0.0    0.00    0.00       1         Stack::Stack() [145]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [181]
[146]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::deallocate(std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [146]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, unsigned int) [183]
[147]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocate(unsigned int, void const*) [147]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::_M_max_size() const [152]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocator() [158]
[148]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::new_allocator() [148]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate(std::allocator<std::__detail::_Hash_node_base*>&, std::__detail::_Hash_node_base**, unsigned int) [185]
[149]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::deallocate(std::__detail::_Hash_node_base**, unsigned int) [149]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned int) [186]
[150]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned int, void const*) [150]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::_M_max_size() const [153]
-----------------------------------------------
                0.00    0.00       1/1           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [68]
[151]    0.0    0.00    0.00       1         bool __gnu_cxx::__is_null_pointer<char const>(char const*) [151]
-----------------------------------------------
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocate(unsigned int, void const*) [147]
[152]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::_M_max_size() const [152]
-----------------------------------------------
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned int, void const*) [150]
[153]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::_M_max_size() const [153]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [197]
[154]    0.0    0.00    0.00       1         std::__detail::_Hash_node<std::pair<char const, bool>, false>::_M_next() const [154]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [70]
[155]    0.0    0.00    0.00       1         std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::operator->() const [155]
                0.00    0.00       1/3           std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_valptr() [113]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int, unsigned int, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [164]
[156]    0.0    0.00    0.00       1         std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_node_code_cache<false>&, unsigned int) const [156]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int, unsigned int, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [164]
[157]    0.0    0.00    0.00       1         std::__detail::_Prime_rehash_policy::_M_state() const [157]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::_Hashtable_ebo_helper() [203]
[158]    0.0    0.00    0.00       1         std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocator() [158]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::new_allocator() [148]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::~_Hashtable_ebo_helper() [204]
[159]    0.0    0.00    0.00       1         std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::~allocator() [159]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [70]
[160]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [160]
                0.00    0.00       1/4           std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&) [104]
                0.00    0.00       1/4           std::tuple<char&&>&& std::forward<std::tuple<char&&> >(std::remove_reference<std::tuple<char&&> >::type&) [105]
                0.00    0.00       1/4           std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&) [103]
                0.00    0.00       1/1           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [194]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [70]
[161]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::~_Scoped_node() [161]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned int, unsigned int const&) [169]
[162]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned int, std::integral_constant<bool, true>) [162]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned int) [163]
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const [120]
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets() [128]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned int, std::integral_constant<bool, true>) [162]
[163]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned int) [163]
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_buckets(unsigned int) [196]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [70]
[164]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int, unsigned int, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [164]
                0.00    0.00       1/1           std::__detail::_Prime_rehash_policy::_M_state() const [157]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned int, unsigned int const&) [169]
                0.00    0.00       1/3           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(unsigned int) const [108]
                0.00    0.00       1/1           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_node_code_cache<false>&, unsigned int) const [156]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned int, std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [165]
                0.00    0.00       1/3           std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [111]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int, unsigned int, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [164]
[165]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned int, std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [165]
-----------------------------------------------
                0.00    0.00       1/1           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::end() [175]
[166]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::end() [166]
                0.00    0.00       1/3           std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [111]
-----------------------------------------------
                0.00    0.00       1/1           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::find(char const&) [176]
[167]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(char const&) [167]
                0.00    0.00       1/2           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(char const&) const [122]
                0.00    0.00       1/3           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(unsigned int) const [108]
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned int, char const&, unsigned int) const [117]
                0.00    0.00       1/3           std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [111]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [171]
[168]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [168]
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const [120]
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [197]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int, unsigned int, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [164]
[169]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned int, unsigned int const&) [169]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned int, std::integral_constant<bool, true>) [162]
-----------------------------------------------
                0.00    0.00       1/1           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::unordered_map() [177]
[170]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable() [170]
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_Hashtable_alloc() [200]
                0.00    0.00       1/2           std::__detail::_Hash_node_base::_Hash_node_base() [134]
                0.00    0.00       1/1           std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float) [202]
-----------------------------------------------
                0.00    0.00       1/1           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::~unordered_map() [178]
[171]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [171]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [168]
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets() [128]
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::~_Hashtable_alloc() [201]
-----------------------------------------------
                0.00    0.00       1/1           std::tuple<char&&>::tuple(std::tuple<char&&>&&) [189]
[172]    0.0    0.00    0.00       1         std::_Tuple_impl<0u, char&&>::_Tuple_impl(std::_Tuple_impl<0u, char&&>&&) [172]
                0.00    0.00       1/2           std::_Tuple_impl<0u, char&&>::_M_head(std::_Tuple_impl<0u, char&&>&) [131]
                0.00    0.00       1/2           char&& std::forward<char&&>(std::remove_reference<char&&>::type&) [138]
                0.00    0.00       1/2           std::_Head_base<0u, char&&, false>::_Head_base<char>(char&&) [130]
-----------------------------------------------
                0.00    0.00       1/1           std::tuple<char&&>::tuple<char, true, true>(char&&) [190]
[173]    0.0    0.00    0.00       1         std::_Tuple_impl<0u, char&&>::_Tuple_impl<char>(char&&) [173]
                0.00    0.00       1/5           char&& std::forward<char>(std::remove_reference<char>::type&) [99]
                0.00    0.00       1/2           std::_Head_base<0u, char&&, false>::_Head_base<char>(char&&) [130]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [56]
[174]    0.0    0.00    0.00       1         std::char_traits<char>::length(char const*) [174]
-----------------------------------------------
                0.00    0.00       1/1           getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [65]
[175]    0.0    0.00    0.00       1         std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::end() [175]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::end() [166]
-----------------------------------------------
                0.00    0.00       1/1           getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [65]
[176]    0.0    0.00    0.00       1         std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::find(char const&) [176]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(char const&) [167]
-----------------------------------------------
                0.00    0.00       1/1           evaluateTreeTruthValue(ParseTree*) [66]
[177]    0.0    0.00    0.00       1         std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::unordered_map() [177]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable() [170]
-----------------------------------------------
                0.00    0.00       1/1           evaluateTreeTruthValue(ParseTree*) [66]
[178]    0.0    0.00    0.00       1         std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::~unordered_map() [178]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [171]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [199]
[179]    0.0    0.00    0.00       1         std::pointer_traits<std::__detail::_Hash_node<std::pair<char const, bool>, false>*>::pointer_to(std::__detail::_Hash_node<std::pair<char const, bool>, false>&) [179]
                0.00    0.00       1/1           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::addressof<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>&) [218]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int) [198]
[180]    0.0    0.00    0.00       1         std::pointer_traits<std::__detail::_Hash_node_base**>::pointer_to(std::__detail::_Hash_node_base*&) [180]
                0.00    0.00       1/1           std::__detail::_Hash_node_base** std::addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&) [219]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [199]
[181]    0.0    0.00    0.00       1         std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [181]
                0.00    0.00       1/130         std::is_constant_evaluated() [77]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::deallocate(std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [146]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [195]
[182]    0.0    0.00    0.00       1         void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::destroy<std::pair<char const, bool> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*) [182]
                0.00    0.00       1/1           void std::destroy_at<std::pair<char const, bool> >(std::pair<char const, bool>*) [207]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [194]
[183]    0.0    0.00    0.00       1         std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, unsigned int) [183]
                0.00    0.00       1/130         std::is_constant_evaluated() [77]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocate(unsigned int, void const*) [147]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [194]
[184]    0.0    0.00    0.00       1         void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::construct<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [184]
                0.00    0.00       1/4           std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&) [104]
                0.00    0.00       1/4           std::tuple<char&&>&& std::forward<std::tuple<char&&> >(std::remove_reference<std::tuple<char&&> >::type&) [105]
                0.00    0.00       1/4           std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&) [103]
                0.00    0.00       1/1           decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [213]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int) [198]
[185]    0.0    0.00    0.00       1         std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate(std::allocator<std::__detail::_Hash_node_base*>&, std::__detail::_Hash_node_base**, unsigned int) [185]
                0.00    0.00       1/130         std::is_constant_evaluated() [77]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::deallocate(std::__detail::_Hash_node_base**, unsigned int) [149]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_buckets(unsigned int) [196]
[186]    0.0    0.00    0.00       1         std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned int) [186]
                0.00    0.00       1/130         std::is_constant_evaluated() [77]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned int, void const*) [150]
-----------------------------------------------
                0.00    0.00       1/1           std::pair<char const, bool>::pair<char&&>(std::piecewise_construct_t, std::tuple<char&&>, std::tuple<>) [188]
[187]    0.0    0.00    0.00       1         std::pair<char const, bool>::pair<char&&, 0u>(std::tuple<char&&>&, std::tuple<>&, std::_Index_tuple<0u>, std::_Index_tuple<>) [187]
                0.00    0.00       1/1           std::tuple_element<0u, std::tuple<char&&> >::type& std::get<0u, char&&>(std::tuple<char&&>&) [216]
                0.00    0.00       1/2           char&& std::forward<char&&>(std::remove_reference<char&&>::type&) [138]
-----------------------------------------------
                0.00    0.00       1/1           decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [213]
[188]    0.0    0.00    0.00       1         std::pair<char const, bool>::pair<char&&>(std::piecewise_construct_t, std::tuple<char&&>, std::tuple<>) [188]
                0.00    0.00       1/1           std::pair<char const, bool>::pair<char&&, 0u>(std::tuple<char&&>&, std::tuple<>&, std::_Index_tuple<0u>, std::_Index_tuple<>) [187]
-----------------------------------------------
                0.00    0.00       1/1           decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [213]
[189]    0.0    0.00    0.00       1         std::tuple<char&&>::tuple(std::tuple<char&&>&&) [189]
                0.00    0.00       1/1           std::_Tuple_impl<0u, char&&>::_Tuple_impl(std::_Tuple_impl<0u, char&&>&&) [172]
-----------------------------------------------
                0.00    0.00       1/1           std::tuple<char&&> std::forward_as_tuple<char>(char&&) [214]
[190]    0.0    0.00    0.00       1         std::tuple<char&&>::tuple<char, true, true>(char&&) [190]
                0.00    0.00       1/5           char&& std::forward<char>(std::remove_reference<char>::type&) [99]
                0.00    0.00       1/1           std::_Tuple_impl<0u, char&&>::_Tuple_impl<char>(char&&) [173]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [56]
[191]    0.0    0.00    0.00       1         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char> const&) [191]
-----------------------------------------------
                0.00    0.00       1/1           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [68]
[192]    0.0    0.00    0.00       1         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*) [192]
                0.00    0.00       1/43          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int) [84]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [194]
[193]    0.0    0.00    0.00       1         std::__detail::_Hash_node<std::pair<char const, bool>, false>::_Hash_node() [193]
                0.00    0.00       1/2           std::__detail::_Hash_node_base::_Hash_node_base() [134]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [160]
[194]    0.0    0.00    0.00       1         std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [194]
                0.00    0.00       2/6           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_node_allocator() [93]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, unsigned int) [183]
                0.00    0.00       1/1           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__to_address<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [211]
                0.00    0.00       1/2           operator new(unsigned int, void*) [140]
                0.00    0.00       1/1           std::__detail::_Hash_node<std::pair<char const, bool>, false>::_Hash_node() [193]
                0.00    0.00       1/4           std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&) [104]
                0.00    0.00       1/4           std::tuple<char&&>&& std::forward<std::tuple<char&&> >(std::remove_reference<std::tuple<char&&> >::type&) [105]
                0.00    0.00       1/4           std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&) [103]
                0.00    0.00       1/3           std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_valptr() [113]
                0.00    0.00       1/1           void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::construct<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [184]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [197]
[195]    0.0    0.00    0.00       1         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [195]
                0.00    0.00       1/3           std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_valptr() [113]
                0.00    0.00       1/6           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_node_allocator() [93]
                0.00    0.00       1/1           void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::destroy<std::pair<char const, bool> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*) [182]
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [199]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned int) [163]
[196]    0.0    0.00    0.00       1         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_buckets(unsigned int) [196]
                0.00    0.00       1/6           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_node_allocator() [93]
                0.00    0.00       1/2           std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > const&) [125]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned int) [186]
                0.00    0.00       1/1           std::__detail::_Hash_node_base** std::__to_address<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base**) [212]
                0.00    0.00       1/2           std::allocator<std::__detail::_Hash_node_base*>::~allocator() [126]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [168]
[197]    0.0    0.00    0.00       1         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [197]
                0.00    0.00       1/1           std::__detail::_Hash_node<std::pair<char const, bool>, false>::_M_next() const [154]
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [195]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int) [127]
[198]    0.0    0.00    0.00       1         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int) [198]
                0.00    0.00       1/1           std::pointer_traits<std::__detail::_Hash_node_base**>::pointer_to(std::__detail::_Hash_node_base*&) [180]
                0.00    0.00       1/6           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_node_allocator() [93]
                0.00    0.00       1/2           std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > const&) [125]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate(std::allocator<std::__detail::_Hash_node_base*>&, std::__detail::_Hash_node_base**, unsigned int) [185]
                0.00    0.00       1/2           std::allocator<std::__detail::_Hash_node_base*>::~allocator() [126]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [195]
[199]    0.0    0.00    0.00       1         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [199]
                0.00    0.00       1/1           std::pointer_traits<std::__detail::_Hash_node<std::pair<char const, bool>, false>*>::pointer_to(std::__detail::_Hash_node<std::pair<char const, bool>, false>&) [179]
                0.00    0.00       1/6           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_node_allocator() [93]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [181]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable() [170]
[200]    0.0    0.00    0.00       1         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_Hashtable_alloc() [200]
                0.00    0.00       1/1           std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::_Hashtable_ebo_helper() [203]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [171]
[201]    0.0    0.00    0.00       1         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::~_Hashtable_alloc() [201]
                0.00    0.00       1/1           std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::~_Hashtable_ebo_helper() [204]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable() [170]
[202]    0.0    0.00    0.00       1         std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float) [202]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_Hashtable_alloc() [200]
[203]    0.0    0.00    0.00       1         std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::_Hashtable_ebo_helper() [203]
                0.00    0.00       1/1           std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocator() [158]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::~_Hashtable_alloc() [201]
[204]    0.0    0.00    0.00       1         std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::~_Hashtable_ebo_helper() [204]
                0.00    0.00       1/1           std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::~allocator() [159]
-----------------------------------------------
                0.00    0.00       1/1           getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [65]
[205]    0.0    0.00    0.00       1         std::__detail::operator==(std::__detail::_Node_iterator_base<std::pair<char const, bool>, false> const&, std::__detail::_Node_iterator_base<std::pair<char const, bool>, false> const&) [205]
-----------------------------------------------
                0.00    0.00       1/1           std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*) [217]
[206]    0.0    0.00    0.00       1         std::iterator_traits<char const*>::difference_type std::__distance<char const*>(char const*, char const*, std::random_access_iterator_tag) [206]
-----------------------------------------------
                0.00    0.00       1/1           void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::destroy<std::pair<char const, bool> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*) [182]
[207]    0.0    0.00    0.00       1         void std::destroy_at<std::pair<char const, bool> >(std::pair<char const, bool>*) [207]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::addressof<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>&) [218]
[208]    0.0    0.00    0.00       1         std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__addressof<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>&) [208]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hash_node_base** std::addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&) [219]
[209]    0.0    0.00    0.00       1         std::__detail::_Hash_node_base** std::__addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&) [209]
-----------------------------------------------
                0.00    0.00       1/1           std::tuple_element<0u, std::tuple<char&&> >::type& std::get<0u, char&&>(std::tuple<char&&>&) [216]
[210]    0.0    0.00    0.00       1         char& std::__get_helper<0u, char&&>(std::_Tuple_impl<0u, char&&>&) [210]
                0.00    0.00       1/2           std::_Tuple_impl<0u, char&&>::_M_head(std::_Tuple_impl<0u, char&&>&) [131]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [194]
[211]    0.0    0.00    0.00       1         std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__to_address<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [211]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_buckets(unsigned int) [196]
[212]    0.0    0.00    0.00       1         std::__detail::_Hash_node_base** std::__to_address<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base**) [212]
-----------------------------------------------
                0.00    0.00       1/1           void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::construct<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [184]
[213]    0.0    0.00    0.00       1         decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [213]
                0.00    0.00       1/4           std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&) [103]
                0.00    0.00       1/4           std::tuple<char&&>&& std::forward<std::tuple<char&&> >(std::remove_reference<std::tuple<char&&> >::type&) [105]
                0.00    0.00       1/1           std::tuple<char&&>::tuple(std::tuple<char&&>&&) [189]
                0.00    0.00       1/4           std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&) [104]
                0.00    0.00       1/2           operator new(unsigned int, void*) [140]
                0.00    0.00       1/1           std::pair<char const, bool>::pair<char&&>(std::piecewise_construct_t, std::tuple<char&&>, std::tuple<>) [188]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [70]
[214]    0.0    0.00    0.00       1         std::tuple<char&&> std::forward_as_tuple<char>(char&&) [214]
                0.00    0.00       1/5           char&& std::forward<char>(std::remove_reference<char>::type&) [99]
                0.00    0.00       1/1           std::tuple<char&&>::tuple<char, true, true>(char&&) [190]
-----------------------------------------------
                0.00    0.00       1/1           std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*) [217]
[215]    0.0    0.00    0.00       1         std::iterator_traits<char const*>::iterator_category std::__iterator_category<char const*>(char const* const&) [215]
-----------------------------------------------
                0.00    0.00       1/1           std::pair<char const, bool>::pair<char&&, 0u>(std::tuple<char&&>&, std::tuple<>&, std::_Index_tuple<0u>, std::_Index_tuple<>) [187]
[216]    0.0    0.00    0.00       1         std::tuple_element<0u, std::tuple<char&&> >::type& std::get<0u, char&&>(std::tuple<char&&>&) [216]
                0.00    0.00       1/1           char& std::__get_helper<0u, char&&>(std::_Tuple_impl<0u, char&&>&) [210]
-----------------------------------------------
                0.00    0.00       1/1           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [68]
[217]    0.0    0.00    0.00       1         std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*) [217]
                0.00    0.00       1/1           std::iterator_traits<char const*>::iterator_category std::__iterator_category<char const*>(char const* const&) [215]
                0.00    0.00       1/1           std::iterator_traits<char const*>::difference_type std::__distance<char const*>(char const*, char const*, std::random_access_iterator_tag) [206]
-----------------------------------------------
                0.00    0.00       1/1           std::pointer_traits<std::__detail::_Hash_node<std::pair<char const, bool>, false>*>::pointer_to(std::__detail::_Hash_node<std::pair<char const, bool>, false>&) [179]
[218]    0.0    0.00    0.00       1         std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::addressof<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>&) [218]
                0.00    0.00       1/1           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__addressof<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>&) [208]
-----------------------------------------------
                0.00    0.00       1/1           std::pointer_traits<std::__detail::_Hash_node_base**>::pointer_to(std::__detail::_Hash_node_base*&) [180]
[219]    0.0    0.00    0.00       1         std::__detail::_Hash_node_base** std::addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&) [219]
                0.00    0.00       1/1           std::__detail::_Hash_node_base** std::__addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&) [209]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2022 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

  [21] getNodeHeight(ParseTree*) [157] std::__detail::_Prime_rehash_policy::_M_state() const [40] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_length(unsigned int)
   [2] infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [124] std::__detail::_Hashtable_ebo_helper<1, std::hash<char>, true>::_M_cget() const [57] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
  [14] createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [158] std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocator() [3] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
   [7] inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [159] std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::~allocator() [59] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
   [6] parseTreeToInfix[abi:cxx11](ParseTree*) [125] std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > const&) [67] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string()
  [65] getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [126] std::allocator<std::__detail::_Hash_node_base*>::~allocator() [56] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
  [13] prefixToParseTree(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [160] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [58] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
  [22] getBinaryTreeHeight(ParseTree*) [161] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::~_Scoped_node() [8] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char)
  [66] evaluateTreeTruthValue(ParseTree*) [162] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned int, std::integral_constant<bool, true>) [193] std::__detail::_Hash_node<std::pair<char const, bool>, false>::_Hash_node()
 [141] __static_initialization_and_destruction_0(int, int) [163] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned int) [111] std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
 [142] __static_initialization_and_destruction_0(int, int) [127] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int) [134] std::__detail::_Hash_node_base::_Hash_node_base()
 [143] __static_initialization_and_destruction_0(int, int) [128] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets() [194] std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&)
 [144] __static_initialization_and_destruction_0(int, int) [164] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int, unsigned int, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [93] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_node_allocator()
  [51] Stack::resizeArray()  [165] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned int, std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [195] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  [47] Stack::pop()          [166] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::end() [196] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_buckets(unsigned int)
  [38] Stack::push(char)     [167] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(char const&) [197] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
 [145] Stack::Stack()        [168] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [198] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int)
  [52] Stack::~Stack()       [169] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned int, unsigned int const&) [199] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  [31] ParseTree::getLeftNode(ParseTree*) [170] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable() [200] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_Hashtable_alloc()
  [49] ParseTree::setLeftNode(ParseTree*) [171] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [201] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::~_Hashtable_alloc()
  [30] ParseTree::getRightNode(ParseTree*) [129] std::_Head_base<0u, char&&, false>::_M_head(std::_Head_base<0u, char&&, false>&) [112] std::__detail::_Node_iterator_base<std::pair<char const, bool>, false>::_Node_iterator_base(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  [50] ParseTree::setRightNode(ParseTree*) [130] std::_Head_base<0u, char&&, false>::_Head_base<char>(char&&) [202] std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float)
  [42] ParseTree::getValue() [131] std::_Tuple_impl<0u, char&&>::_M_head(std::_Tuple_impl<0u, char&&>&) [113] std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_valptr()
  [46] ParseTree::ParseTree(char) [172] std::_Tuple_impl<0u, char&&>::_Tuple_impl(std::_Tuple_impl<0u, char&&>&&) [94] std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::_M_get()
  [33] ParseTree::~ParseTree() [173] std::_Tuple_impl<0u, char&&>::_Tuple_impl<char>(char&&) [203] std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::_Hashtable_ebo_helper()
 [146] __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::deallocate(std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [83] std::char_traits<char>::copy(char*, char const*, unsigned int) [204] std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::~_Hashtable_ebo_helper()
 [147] __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocate(unsigned int, void const*) [29] std::char_traits<char>::assign(char&, char const&) [70] std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&)
 [148] __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::new_allocator() [174] std::char_traits<char>::length(char const*) [205] std::__detail::operator==(std::__detail::_Node_iterator_base<std::pair<char const, bool>, false> const&, std::__detail::_Node_iterator_base<std::pair<char const, bool>, false> const&)
 [149] __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::deallocate(std::__detail::_Hash_node_base**, unsigned int) [175] std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::end() [48] std::__cmp_cat::__unspec::__unspec(std::__cmp_cat::__unspec*)
 [150] __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned int, void const*) [176] std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::find(char const&) [206] std::iterator_traits<char const*>::difference_type std::__distance<char const*>(char const*, char const*, std::random_access_iterator_tag)
 [114] __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::new_allocator() [177] std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::unordered_map() [135] std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag)
  [85] __gnu_cxx::new_allocator<char>::deallocate(char*, unsigned int) [178] std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::~unordered_map() [207] void std::destroy_at<std::pair<char const, bool> >(std::pair<char const, bool>*)
  [86] __gnu_cxx::new_allocator<char>::allocate(unsigned int, void const*) [69] std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::operator[](char&&) [43] char const* std::__addressof<char const>(char const&)
 [115] __gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy(std::allocator<char> const&) [23] std::pointer_traits<char const*>::pointer_to(char const&) [208] std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__addressof<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>&)
 [106] __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_ptr() [179] std::pointer_traits<std::__detail::_Hash_node<std::pair<char const, bool>, false>*>::pointer_to(std::__detail::_Hash_node<std::pair<char const, bool>, false>&) [209] std::__detail::_Hash_node_base** std::__addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&)
 [107] __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_addr() [180] std::pointer_traits<std::__detail::_Hash_node_base**>::pointer_to(std::__detail::_Hash_node_base*&) [98] char* std::__addressof<char>(char&)
 [151] bool __gnu_cxx::__is_null_pointer<char const>(char const*) [95] std::pointer_traits<char*>::pointer_to(char&) [210] char& std::__get_helper<0u, char&&>(std::_Tuple_impl<0u, char&&>&)
 [116] bool __gnu_cxx::__is_null_pointer<char>(char*) [181] std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned int) [211] std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__to_address<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  [45] __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__normal_iterator(char* const&) [182] void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::destroy<std::pair<char const, bool> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*) [212] std::__detail::_Hash_node_base** std::__to_address<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base**)
  [37] __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator--() [183] std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, unsigned int) [213] decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&)
  [36] __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++(int) [184] void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::construct<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [214] std::tuple<char&&> std::forward_as_tuple<char>(char&&)
  [25] __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++() [185] std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate(std::allocator<std::__detail::_Hash_node_base*>&, std::__detail::_Hash_node_base**, unsigned int) [136] std::iterator_traits<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
  [12] bool __gnu_cxx::operator==<char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [186] std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned int) [215] std::iterator_traits<char const*>::iterator_category std::__iterator_category<char const*>(char const* const&)
  [20] decltype (std::__detail::__synth3way((declval<char*&>)(), (declval<char*&>)())) __gnu_cxx::operator<=><char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [88] std::allocator_traits<std::allocator<char> >::deallocate(std::allocator<char>&, char*, unsigned int) [137] std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&)
 [152] __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::_M_max_size() const [132] std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction(std::allocator<char> const&) [77] std::is_constant_evaluated()
 [153] __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::_M_max_size() const [89] std::allocator_traits<std::allocator<char> >::allocate(std::allocator<char>&, unsigned int) [216] std::tuple_element<0u, std::tuple<char&&> >::type& std::get<0u, char&&>(std::tuple<char&&>&)
  [87] __gnu_cxx::new_allocator<char>::_M_max_size() const [82] std::allocator_traits<std::allocator<char> >::max_size(std::allocator<char> const&) [39] long long const& std::max<long long>(long long const&, long long const&)
  [16] __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const [187] std::pair<char const, bool>::pair<char&&, 0u>(std::tuple<char&&>&, std::tuple<>&, std::_Index_tuple<0u>, std::_Index_tuple<>) [102] std::remove_reference<std::allocator<char>&>::type&& std::move<std::allocator<char>&>(std::allocator<char>&)
  [19] __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const [188] std::pair<char const, bool>::pair<char&&>(std::piecewise_construct_t, std::tuple<char&&>, std::tuple<>) [26] std::remove_reference<char&>::type&& std::move<char&>(char&)
 [117] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned int, char const&, unsigned int) const [189] std::tuple<char&&>::tuple(std::tuple<char&&>&&) [24] std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<char> >, std::is_move_constructible<char>, std::is_move_assignable<char> >::value, void>::type std::swap<char>(char&, char&)
 [108] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(unsigned int) const [190] std::tuple<char&&>::tuple<char, true, true>(char&&) [138] char&& std::forward<char&&>(std::remove_reference<char&&>::type&)
 [118] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned int, char const&, unsigned int) const [55] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned int) [103] std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&)
 [119] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_uses_single_bucket(std::__detail::_Hash_node_base**) const [54] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [104] std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&)
 [120] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const [90] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_capacity(unsigned int) [105] std::tuple<char&&>&& std::forward<std::tuple<char&&> >(std::remove_reference<std::tuple<char&&> >::type&)
 [121] std::hash<char>::operator()(char) const [101] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char>&&) [99] char&& std::forward<char>(std::remove_reference<char>::type&)
  [10] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const [191] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char> const&) [4] void std::reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
  [18] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() const [96] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider() [217] std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*)
  [78] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() const [68] void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [139] std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*)
  [44] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size() const [61] void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*) [5] void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag)
  [80] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::length() const [62] void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [34] char const* std::addressof<char const>(char const&)
  [15] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [97] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() [218] std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::addressof<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>&)
   [9] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const [17] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned int) [219] std::__detail::_Hash_node_base** std::addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&)
  [81] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::max_size() const [192] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*) [100] char* std::addressof<char>(char&)
 [154] std::__detail::_Hash_node<std::pair<char const, bool>, false>::_M_next() const [133] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*) [11] void std::iter_swap<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
  [41] auto std::__detail::_Synth3way::operator()<char*, char*>(char* const&, char* const&) const [63] void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type) [35] std::operator<(std::strong_ordering, std::__cmp_cat::__unspec)
 [155] std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::operator->() const [79] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() [53] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
 [122] std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(char const&) const [60] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::end() [140] operator new(unsigned int, void*)
 [156] std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_node_code_cache<false>&, unsigned int) const [64] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::begin() [27] __x86.get_pc_thunk.bx
 [109] std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(unsigned int, unsigned int) const [91] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data(char*) [28] _dl_relocate_static_pie
 [123] std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash() const [84] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int) [32] _init
 [110] std::__detail::_Mod_range_hashing::operator()(unsigned int, unsigned int) const [92] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
