Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls   s/call   s/call  name    
  5.06      0.93     0.93        1     0.93     2.54  createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
  4.76      1.79     0.87 200000003     0.00     0.00  bool __gnu_cxx::operator==<char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
  4.76      2.67     0.87        1     0.87     0.87  ParseTree::~ParseTree()
  4.57      3.50     0.83 266666673     0.00     0.00  std::char_traits<char>::assign(char&, char const&)
  4.21      4.27     0.77        1     0.77     3.82  inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
  3.86      4.97     0.70 233333332     0.00     0.00  __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++()
  3.67      5.64     0.67        1     0.67     9.34  infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
  3.64      6.31     0.67 466666665     0.00     0.00  __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const
  3.53      6.96     0.65 400000309     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const
  3.26      7.55     0.59 600000008     0.00     0.00  __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const
  3.12      8.12     0.57        1     0.57     1.03  getNodeHeight(ParseTree*)
  2.90      8.65     0.53 133333334     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
  2.85      9.17     0.52 99999999     0.00     0.00  std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<char> >, std::is_move_constructible<char>, std::is_move_assignable<char> >::value, void>::type std::swap<char>(char&, char&)
  2.74      9.67     0.50 66666666     0.00     0.00  Stack::push(char)
  2.68     10.16     0.49 166666667     0.00     0.00  ParseTree::getRightNode(ParseTree*)
  2.46     10.61     0.45 133333339     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned long)
  1.94     10.96     0.35 100000001     0.00     0.00  auto std::__detail::_Synth3way::operator()<char*, char*>(char* const&, char* const&) const
  1.92     11.31     0.35 166666668     0.00     0.00  ParseTree::getLeftNode(ParseTree*)
  1.92     11.66     0.35 133333479     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const
  1.86     12.01     0.34 133333404     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const
  1.86     12.35     0.34 100000001     0.00     0.00  decltype (std::__detail::__synth3way((declval<char*&>)(), (declval<char*&>)())) __gnu_cxx::operator<=><char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
  1.83     12.68     0.34 66666666     0.00     0.00  Stack::pop()
  1.81     13.01     0.33 133333339     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_length(unsigned long)
  1.75     13.33     0.32        2     0.16     1.74  void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag)
  1.59     13.62     0.29 133333479     0.00     0.00  std::pointer_traits<char const*>::pointer_to(char const&)
  1.56     13.90     0.28 299999999     0.00     0.00  std::remove_reference<char&>::type&& std::move<char&>(char&)
  1.51     14.18     0.28 100000001     0.00     0.00  __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator--()
  1.48     14.45     0.27 66666667     0.00     0.00  __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++(int)
  1.40     14.71     0.26 100000001     0.00     0.00  std::operator<(std::strong_ordering, std::__cmp_cat::__unspec)
  1.37     14.96     0.25 133333338     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size() const
  1.37     15.21     0.25 66666667     0.00     0.00  ParseTree::ParseTree(char)
  1.31     15.45     0.24 33333333     0.00     0.00  ParseTree::setRightNode(ParseTree*)
  1.26     15.68     0.23       25     0.01     0.01  Stack::resizeArray()
  1.23     15.90     0.23 133333479     0.00     0.00  char const* std::addressof<char const>(char const&)
  1.20     16.12     0.22 133333479     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() const
  1.09     16.32     0.20 133333479     0.00     0.00  char const* std::__addressof<char const>(char const&)
  1.09     16.52     0.20 66666667     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char)
  1.09     16.72     0.20                             char* std::copy<char const*, char*>(char const*, char const*, char*)
  0.99     16.90     0.18 99999999     0.00     0.00  void std::iter_swap<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
  0.90     17.07     0.17 66666675     0.00     0.00  __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__normal_iterator(char* const&)
  0.88     17.23     0.16 100000001     0.00     0.00  std::__cmp_cat::__unspec::__unspec(std::__cmp_cat::__unspec*)
  0.77     17.36     0.14                             _init
  0.66     17.48     0.12 66666667     0.00     0.00  long long const& std::max<long long>(long long const&, long long const&)
  0.60     17.59     0.11 66666671     0.00     0.00  ParseTree::getValue()
  0.52     17.69     0.10       73     0.00     0.00  std::char_traits<char>::copy(char*, char const*, unsigned long)
  0.49     17.78     0.09        1     0.09     3.92  parseTreeToInfix[abi:cxx11](ParseTree*)
  0.41     17.86     0.07 33333333     0.00     0.00  ParseTree::setLeftNode(ParseTree*)
  0.27     17.91     0.05       72     0.00     0.00  __gnu_cxx::new_allocator<char>::_M_max_size() const
  0.27     17.95     0.05        1     0.05     1.08  getBinaryTreeHeight(ParseTree*)
  0.25     18.00     0.04        2     0.02     0.02  std::iterator_traits<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
  0.19     18.04     0.04                             char* std::__copy_move_a<false, char const*, char*>(char const*, char const*, char*)
  0.16     18.07     0.03      142     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::length() const
  0.16     18.09     0.03       72     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data(char*)
  0.16     18.12     0.03        5     0.01     0.01  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data()
  0.16     18.16     0.03        5     0.01     0.01  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
  0.16     18.18     0.03        1     0.03     2.57  prefixToParseTree(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
  0.11     18.20     0.02                             char* std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m<char const*, char*>(char const*, char const*, char*)
  0.11     18.23     0.02                             char const* std::__niter_base<char const*>(char const*)
  0.08     18.24     0.01                             Stack::printStack()
  0.05     18.25     0.01       46     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long)
  0.05     18.26     0.01        1     0.01     0.01  std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::find(char const&)
  0.05     18.27     0.01                             printBinaryParseTree(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, ParseTree*, bool)
  0.00     18.27     0.00      220     0.00     0.00  std::is_constant_evaluated()
  0.00     18.27     0.00      144     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() const
  0.00     18.27     0.00      144     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator()
  0.00     18.27     0.00      142     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::max_size() const
  0.00     18.27     0.00      142     0.00     0.00  std::allocator_traits<std::allocator<char> >::max_size(std::allocator<char> const&)
  0.00     18.27     0.00       75     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
  0.00     18.27     0.00       73     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned long)
  0.00     18.27     0.00       72     0.00     0.00  __gnu_cxx::new_allocator<char>::deallocate(char*, unsigned long)
  0.00     18.27     0.00       72     0.00     0.00  __gnu_cxx::new_allocator<char>::allocate(unsigned long, void const*)
  0.00     18.27     0.00       72     0.00     0.00  std::allocator_traits<std::allocator<char> >::deallocate(std::allocator<char>&, char*, unsigned long)
  0.00     18.27     0.00       72     0.00     0.00  std::allocator_traits<std::allocator<char> >::allocate(std::allocator<char>&, unsigned long)
  0.00     18.27     0.00       72     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned long)
  0.00     18.27     0.00       72     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_capacity(unsigned long)
  0.00     18.27     0.00       72     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long)
  0.00     18.27     0.00        6     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_node_allocator()
  0.00     18.27     0.00        6     0.00     0.00  std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::_M_get()
  0.00     18.27     0.00        5     0.00     0.00  std::pointer_traits<char*>::pointer_to(char&)
  0.00     18.27     0.00        5     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider()
  0.00     18.27     0.00        5     0.00     0.00  char* std::__addressof<char>(char&)
  0.00     18.27     0.00        5     0.00     0.00  char* std::addressof<char>(char&)
  0.00     18.27     0.00        4     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char>&&)
  0.00     18.27     0.00        4     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::end()
  0.00     18.27     0.00        4     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::begin()
  0.00     18.27     0.00        4     0.00     0.00  std::remove_reference<std::allocator<char>&>::type&& std::move<std::allocator<char>&>(std::allocator<char>&)
  0.00     18.27     0.00        4     0.00     0.00  std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&)
  0.00     18.27     0.00        4     0.00     0.00  std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&)
  0.00     18.27     0.00        4     0.00     0.00  std::tuple<char&&>&& std::forward<std::tuple<char&&> >(std::remove_reference<std::tuple<char&&> >::type&)
  0.00     18.27     0.00        4     0.00     0.00  char&& std::forward<char>(std::remove_reference<char>::type&)
  0.00     18.27     0.00        3     0.00     0.00  __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_ptr()
  0.00     18.27     0.00        3     0.00     0.00  __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_addr()
  0.00     18.27     0.00        3     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(unsigned long) const
  0.00     18.27     0.00        3     0.00     0.00  std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(unsigned long, unsigned long) const
  0.00     18.27     0.00        3     0.00     0.00  std::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const
  0.00     18.27     0.00        3     0.00     0.00  std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  0.00     18.27     0.00        3     0.00     0.00  std::__detail::_Node_iterator_base<std::pair<char const, bool>, false>::_Node_iterator_base(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  0.00     18.27     0.00        3     0.00     0.00  std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_valptr()
  0.00     18.27     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::new_allocator()
  0.00     18.27     0.00        2     0.00     0.00  __gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy(std::allocator<char> const&)
  0.00     18.27     0.00        2     0.00     0.00  bool __gnu_cxx::__is_null_pointer<char>(char*)
  0.00     18.27     0.00        2     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned long, char const&, unsigned long) const
  0.00     18.27     0.00        2     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, char const&, unsigned long) const
  0.00     18.27     0.00        2     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_uses_single_bucket(std::__detail::_Hash_node_base**) const
  0.00     18.27     0.00        2     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const
  0.00     18.27     0.00        2     0.00     0.00  std::hash<char>::operator()(char) const
  0.00     18.27     0.00        2     0.00     0.00  std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(char const&) const
  0.00     18.27     0.00        2     0.00     0.00  std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash() const
  0.00     18.27     0.00        2     0.00     0.00  std::__detail::_Hashtable_ebo_helper<1, std::hash<char>, true>::_M_cget() const
  0.00     18.27     0.00        2     0.00     0.00  std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > const&)
  0.00     18.27     0.00        2     0.00     0.00  std::allocator<std::__detail::_Hash_node_base*>::~allocator()
  0.00     18.27     0.00        2     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long)
  0.00     18.27     0.00        2     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets()
  0.00     18.27     0.00        2     0.00     0.00  std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction(std::allocator<char> const&)
  0.00     18.27     0.00        2     0.00     0.00  void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*)
  0.00     18.27     0.00        2     0.00     0.00  void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)
  0.00     18.27     0.00        2     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*)
  0.00     18.27     0.00        2     0.00     0.00  void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type)
  0.00     18.27     0.00        2     0.00     0.01  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00     18.27     0.00        2     0.00     0.01  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string()
  0.00     18.27     0.00        2     0.00     0.00  std::__detail::_Hash_node_base::_Hash_node_base()
  0.00     18.27     0.00        2     0.00     0.00  std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag)
  0.00     18.27     0.00        2     0.00     0.00  std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&)
  0.00     18.27     0.00        2     0.00     1.76  void std::reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
  0.00     18.27     0.00        2     0.00     0.00  std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*)
  0.00     18.27     0.00        2     0.00     0.00  operator new(unsigned long, void*)
  0.00     18.27     0.00        1     0.00     0.01  getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*)
  0.00     18.27     0.00        1     0.00     0.01  evaluateTreeTruthValue(ParseTree*)
  0.00     18.27     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     18.27     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     18.27     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     18.27     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     18.27     0.00        1     0.00     0.00  Stack::Stack()
  0.00     18.27     0.00        1     0.00     0.00  Stack::~Stack()
  0.00     18.27     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::deallocate(std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned long)
  0.00     18.27     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocate(unsigned long, void const*)
  0.00     18.27     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::new_allocator()
  0.00     18.27     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::deallocate(std::__detail::_Hash_node_base**, unsigned long)
  0.00     18.27     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*)
  0.00     18.27     0.00        1     0.00     0.00  bool __gnu_cxx::__is_null_pointer<char const>(char const*)
  0.00     18.27     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::_M_max_size() const
  0.00     18.27     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::_M_max_size() const
  0.00     18.27     0.00        1     0.00     0.00  std::__detail::_Hash_node<std::pair<char const, bool>, false>::_M_next() const
  0.00     18.27     0.00        1     0.00     0.00  std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::operator->() const
  0.00     18.27     0.00        1     0.00     0.00  std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_node_code_cache<false>&, unsigned long) const
  0.00     18.27     0.00        1     0.00     0.00  std::__detail::_Prime_rehash_policy::_M_state() const
  0.00     18.27     0.00        1     0.00     0.00  std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocator()
  0.00     18.27     0.00        1     0.00     0.00  std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::~allocator()
  0.00     18.27     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&)
  0.00     18.27     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::~_Scoped_node()
  0.00     18.27     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)
  0.00     18.27     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned long)
  0.00     18.27     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned long)
  0.00     18.27     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  0.00     18.27     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::end()
  0.00     18.27     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(char const&)
  0.00     18.27     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear()
  0.00     18.27     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&)
  0.00     18.27     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable()
  0.00     18.27     0.00        1     0.00     0.00  std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable()
  0.00     18.27     0.00        1     0.00     0.00  std::_Head_base<0ul, char&&, false>::_M_head(std::_Head_base<0ul, char&&, false>&)
  0.00     18.27     0.00        1     0.00     0.00  std::_Head_base<0ul, char&&, false>::_Head_base<char>(char&&)
  0.00     18.27     0.00        1     0.00     0.00  std::_Tuple_impl<0ul, char&&>::_M_head(std::_Tuple_impl<0ul, char&&>&)
  0.00     18.27     0.00        1     0.00     0.00  std::_Tuple_impl<0ul, char&&>::_Tuple_impl<char>(char&&)
  0.00     18.27     0.00        1     0.00     0.00  std::_Tuple_impl<0ul, char&&>::_Tuple_impl(std::_Tuple_impl<0ul, char&&>&&)
  0.00     18.27     0.00        1     0.00     0.00  std::char_traits<char>::length(char const*)
  0.00     18.27     0.00        1     0.00     0.00  std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::end()
  0.00     18.27     0.00        1     0.00     0.00  std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::unordered_map()
  0.00     18.27     0.00        1     0.00     0.00  std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::~unordered_map()
  0.00     18.27     0.00        1     0.00     0.00  std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::operator[](char&&)
  0.00     18.27     0.00        1     0.00     0.00  std::pointer_traits<std::__detail::_Hash_node<std::pair<char const, bool>, false>*>::pointer_to(std::__detail::_Hash_node<std::pair<char const, bool>, false>&)
  0.00     18.27     0.00        1     0.00     0.00  std::pointer_traits<std::__detail::_Hash_node_base**>::pointer_to(std::__detail::_Hash_node_base*&)
  0.00     18.27     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned long)
  0.00     18.27     0.00        1     0.00     0.00  void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::destroy<std::pair<char const, bool> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*)
  0.00     18.27     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, unsigned long)
  0.00     18.27     0.00        1     0.00     0.00  void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::construct<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&)
  0.00     18.27     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate(std::allocator<std::__detail::_Hash_node_base*>&, std::__detail::_Hash_node_base**, unsigned long)
  0.00     18.27     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long)
  0.00     18.27     0.00        1     0.00     0.00  std::pair<char const, bool>::pair<char&&, 0ul>(std::tuple<char&&>&, std::tuple<>&, std::_Index_tuple<0ul>, std::_Index_tuple<>)
  0.00     18.27     0.00        1     0.00     0.00  std::pair<char const, bool>::pair<char&&>(std::piecewise_construct_t, std::tuple<char&&>, std::tuple<>)
  0.00     18.27     0.00        1     0.00     0.00  std::tuple<char&&>::tuple(std::tuple<char&&>&&)
  0.00     18.27     0.00        1     0.00     0.00  std::tuple<char&&>::tuple<char, true, true>(char&&)
  0.00     18.27     0.00        1     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char> const&)
  0.00     18.27     0.00        1     0.00     0.00  void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
  0.00     18.27     0.00        1     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
  0.00     18.27     0.00        1     0.00     0.01  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
  0.00     18.27     0.00        1     0.00     0.00  std::__detail::_Hash_node<std::pair<char const, bool>, false>::_Hash_node()
  0.00     18.27     0.00        1     0.00     0.00  std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_Hash_code_base()
  0.00     18.27     0.00        1     0.00     0.00  std::__detail::_Hashtable_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable_base()
  0.00     18.27     0.00        1     0.00     0.00  std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&)
  0.00     18.27     0.00        1     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  0.00     18.27     0.00        1     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_buckets(unsigned long)
  0.00     18.27     0.00        1     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  0.00     18.27     0.00        1     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long)
  0.00     18.27     0.00        1     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  0.00     18.27     0.00        1     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_Hashtable_alloc()
  0.00     18.27     0.00        1     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::~_Hashtable_alloc()
  0.00     18.27     0.00        1     0.00     0.00  std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float)
  0.00     18.27     0.00        1     0.00     0.00  std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::_Hashtable_ebo_helper()
  0.00     18.27     0.00        1     0.00     0.00  std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::~_Hashtable_ebo_helper()
  0.00     18.27     0.00        1     0.00     0.00  std::__detail::_Hashtable_ebo_helper<0, std::equal_to<char>, true>::_Hashtable_ebo_helper()
  0.00     18.27     0.00        1     0.00     0.00  std::__detail::_Hashtable_ebo_helper<1, std::hash<char>, true>::_Hashtable_ebo_helper()
  0.00     18.27     0.00        1     0.00     0.00  std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&)
  0.00     18.27     0.00        1     0.00     0.00  std::__detail::operator==(std::__detail::_Node_iterator_base<std::pair<char const, bool>, false> const&, std::__detail::_Node_iterator_base<std::pair<char const, bool>, false> const&)
  0.00     18.27     0.00        1     0.00     0.00  std::iterator_traits<char const*>::difference_type std::__distance<char const*>(char const*, char const*, std::random_access_iterator_tag)
  0.00     18.27     0.00        1     0.00     0.00  void std::destroy_at<std::pair<char const, bool> >(std::pair<char const, bool>*)
  0.00     18.27     0.00        1     0.00     0.00  std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__addressof<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>&)
  0.00     18.27     0.00        1     0.00     0.00  std::__detail::_Hash_node_base** std::__addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&)
  0.00     18.27     0.00        1     0.00     0.00  char& std::__get_helper<0ul, char&&>(std::_Tuple_impl<0ul, char&&>&)
  0.00     18.27     0.00        1     0.00     0.00  std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__to_address<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  0.00     18.27     0.00        1     0.00     0.00  std::__detail::_Hash_node_base** std::__to_address<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base**)
  0.00     18.27     0.00        1     0.00     0.00  decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&)
  0.00     18.27     0.00        1     0.00     0.00  std::tuple<char&&> std::forward_as_tuple<char>(char&&)
  0.00     18.27     0.00        1     0.00     0.00  std::iterator_traits<char const*>::iterator_category std::__iterator_category<char const*>(char const* const&)
  0.00     18.27     0.00        1     0.00     0.00  std::tuple_element<0ul, std::tuple<char&&> >::type& std::get<0ul, char&&>(std::tuple<char&&>&)
  0.00     18.27     0.00        1     0.00     0.00  char&& std::forward<char&&>(std::remove_reference<char&&>::type&)
  0.00     18.27     0.00        1     0.00     0.00  std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*)
  0.00     18.27     0.00        1     0.00     0.00  std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::addressof<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>&)
  0.00     18.27     0.00        1     0.00     0.00  std::__detail::_Hash_node_base** std::addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2022 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 4 byte(s) for 0.05% of 18.27 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     97.6    0.00   17.83                 main [1]
                0.67    8.67       1/1           infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
                0.09    3.83       1/1           parseTreeToInfix[abi:cxx11](ParseTree*) [4]
                0.03    2.54       1/1           prefixToParseTree(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [9]
                0.05    1.03       1/1           getBinaryTreeHeight(ParseTree*) [16]
                0.87    0.00       1/1           ParseTree::~ParseTree() [20]
                0.03    0.00       5/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() [60]
                0.00    0.02       2/2           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [66]
                0.00    0.01       1/1           evaluateTreeTruthValue(ParseTree*) [70]
                0.00    0.01       1/2           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string() [68]
-----------------------------------------------
                0.67    8.67       1/1           main [1]
[2]     51.1    0.67    8.67       1         infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
                0.00    3.52       2/2           void std::reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [6]
                0.20    2.44 66666667/66666667     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char) [8]
                0.58    0.26 133333334/200000003     bool __gnu_cxx::operator==<char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [15]
                0.50    0.23 66666666/66666666     Stack::push(char) [23]
                0.40    0.00 133333333/233333332     __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++() [25]
                0.34    0.00 66666666/66666666     Stack::pop() [34]
                0.19    0.00 133333333/466666665     __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const [26]
                0.00    0.01       1/2           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string() [68]
                0.00    0.00       3/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::end() [82]
                0.00    0.00       3/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::begin() [83]
                0.00    0.00       1/1           Stack::Stack() [145]
                0.00    0.00       1/1           Stack::~Stack() [146]
-----------------------------------------------
                0.27    2.17 66666667/133333334     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char) [8]
                0.27    2.17 66666667/133333334     inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [5]
[3]     26.7    0.53    4.34 133333334         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [3]
                0.34    1.50 133333334/133333404     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const [11]
                0.45    0.96 133333334/133333339     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned long) [13]
                0.42    0.00 133333334/266666673     std::char_traits<char>::assign(char&, char const&) [21]
                0.25    0.00 133333334/133333338     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size() const [39]
                0.21    0.00 133333334/400000309     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [27]
                0.01    0.20      46/46          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) [43]
-----------------------------------------------
                0.09    3.83       1/1           main [1]
[4]     21.4    0.09    3.83       1         parseTreeToInfix[abi:cxx11](ParseTree*) [4]
                0.77    3.05       1/1           inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [5]
                0.00    0.01       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [73]
-----------------------------------------------
                             66666666             inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [5]
                0.77    3.05       1/1           parseTreeToInfix[abi:cxx11](ParseTree*) [4]
[5]     20.9    0.77    3.05       1+66666666 inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [5]
                0.27    2.17 66666667/133333334     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [3]
                0.29    0.00 100000000/166666667     ParseTree::getRightNode(ParseTree*) [29]
                0.21    0.00 100000000/166666668     ParseTree::getLeftNode(ParseTree*) [33]
                0.11    0.00 66666667/66666671     ParseTree::getValue() [50]
                             66666666             inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [5]
-----------------------------------------------
                0.00    3.52       2/2           infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
[6]     19.3    0.00    3.52       2         void std::reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [6]
                0.32    3.16       2/2           void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag) [7]
                0.04    0.00       2/2           std::iterator_traits<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [58]
-----------------------------------------------
                0.32    3.16       2/2           void std::reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [6]
[7]     19.0    0.32    3.16       2         void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag) [7]
                0.18    1.09 99999999/99999999     void std::iter_swap<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [14]
                0.34    0.55 100000001/100000001     decltype (std::__detail::__synth3way((declval<char*&>)(), (declval<char*&>)())) __gnu_cxx::operator<=><char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [19]
                0.30    0.00 99999999/233333332     __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++() [25]
                0.28    0.00 100000001/100000001     __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator--() [37]
                0.26    0.00 100000001/100000001     std::operator<(std::strong_ordering, std::__cmp_cat::__unspec) [38]
                0.16    0.00 100000001/100000001     std::__cmp_cat::__unspec::__unspec(std::__cmp_cat::__unspec*) [47]
                0.00    0.00       2/200000003     bool __gnu_cxx::operator==<char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [15]
-----------------------------------------------
                0.20    2.44 66666667/66666667     infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
[8]     14.4    0.20    2.44 66666667         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char) [8]
                0.27    2.17 66666667/133333334     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [3]
-----------------------------------------------
                0.03    2.54       1/1           main [1]
[9]     14.1    0.03    2.54       1         prefixToParseTree(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [9]
                0.93    1.61       1/1           createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [10]
                0.00    0.00       1/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::end() [82]
                0.00    0.00       1/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::begin() [83]
-----------------------------------------------
                             66666666             createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [10]
                0.93    1.61       1/1           prefixToParseTree(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [9]
[10]    13.9    0.93    1.61       1+66666666 createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [10]
                0.27    0.16 66666667/66666667     __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++(int) [30]
                0.29    0.13 66666667/200000003     bool __gnu_cxx::operator==<char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [15]
                0.25    0.00 66666667/66666667     ParseTree::ParseTree(char) [40]
                0.24    0.00 33333333/33333333     ParseTree::setRightNode(ParseTree*) [41]
                0.19    0.00 133333334/466666665     __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const [26]
                0.07    0.00 33333333/33333333     ParseTree::setLeftNode(ParseTree*) [53]
                             66666666             createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [10]
-----------------------------------------------
                0.00    0.00      70/133333404     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) [43]
                0.34    1.50 133333334/133333404     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [3]
[11]    10.1    0.34    1.50 133333404         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const [11]
                0.35    1.15 133333404/133333479     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const [12]
-----------------------------------------------
                0.00    0.00      75/133333479     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [80]
                0.35    1.15 133333404/133333479     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const [11]
[12]     8.2    0.35    1.15 133333479         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const [12]
                0.22    0.71 133333479/133333479     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() const [18]
                0.22    0.00 133333479/400000309     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [27]
-----------------------------------------------
                0.00    0.00       1/133333339     void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [78]
                0.00    0.00       2/133333339     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string() [68]
                0.00    0.00       2/133333339     void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [75]
                0.45    0.96 133333334/133333339     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [3]
[13]     7.7    0.45    0.96 133333339         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned long) [13]
                0.42    0.00 133333339/266666673     std::char_traits<char>::assign(char&, char const&) [21]
                0.33    0.00 133333339/133333339     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_length(unsigned long) [35]
                0.21    0.00 133333339/400000309     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [27]
-----------------------------------------------
                0.18    1.09 99999999/99999999     void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag) [7]
[14]     7.0    0.18    1.09 99999999         void std::iter_swap<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [14]
                0.52    0.28 99999999/99999999     std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<char> >, std::is_move_constructible<char>, std::is_move_assignable<char> >::value, void>::type std::swap<char>(char&, char&) [22]
                0.28    0.00 199999998/466666665     __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const [26]
-----------------------------------------------
                0.00    0.00       2/200000003     void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag) [7]
                0.29    0.13 66666667/200000003     createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [10]
                0.58    0.26 133333334/200000003     infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
[15]     6.9    0.87    0.40 200000003         bool __gnu_cxx::operator==<char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [15]
                0.40    0.00 400000006/600000008     __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const [28]
-----------------------------------------------
                0.05    1.03       1/1           main [1]
[16]     5.9    0.05    1.03       1         getBinaryTreeHeight(ParseTree*) [16]
                0.57    0.46       1/1           getNodeHeight(ParseTree*) [17]
-----------------------------------------------
                             133333334             getNodeHeight(ParseTree*) [17]
                0.57    0.46       1/1           getBinaryTreeHeight(ParseTree*) [16]
[17]     5.6    0.57    0.46       1+133333334 getNodeHeight(ParseTree*) [17]
                0.20    0.00 66666667/166666667     ParseTree::getRightNode(ParseTree*) [29]
                0.14    0.00 66666667/166666668     ParseTree::getLeftNode(ParseTree*) [33]
                0.12    0.00 66666667/66666667     long long const& std::max<long long>(long long const&, long long const&) [49]
                             133333334             getNodeHeight(ParseTree*) [17]
-----------------------------------------------
                0.22    0.71 133333479/133333479     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const [12]
[18]     5.1    0.22    0.71 133333479         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() const [18]
                0.29    0.42 133333479/133333479     std::pointer_traits<char const*>::pointer_to(char const&) [24]
-----------------------------------------------
                0.34    0.55 100000001/100000001     void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag) [7]
[19]     4.9    0.34    0.55 100000001         decltype (std::__detail::__synth3way((declval<char*&>)(), (declval<char*&>)())) __gnu_cxx::operator<=><char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [19]
                0.35    0.00 100000001/100000001     auto std::__detail::_Synth3way::operator()<char*, char*>(char* const&, char* const&) const [32]
                0.20    0.00 200000002/600000008     __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const [28]
-----------------------------------------------
                             66666666             ParseTree::~ParseTree() [20]
                0.87    0.00       1/1           main [1]
[20]     4.8    0.87    0.00       1+66666666 ParseTree::~ParseTree() [20]
                             66666666             ParseTree::~ParseTree() [20]
-----------------------------------------------
                0.42    0.00 133333334/266666673     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [3]
                0.42    0.00 133333339/266666673     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned long) [13]
[21]     4.6    0.83    0.00 266666673         std::char_traits<char>::assign(char&, char const&) [21]
-----------------------------------------------
                0.52    0.28 99999999/99999999     void std::iter_swap<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [14]
[22]     4.4    0.52    0.28 99999999         std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<char> >, std::is_move_constructible<char>, std::is_move_assignable<char> >::value, void>::type std::swap<char>(char&, char&) [22]
                0.28    0.00 299999997/299999999     std::remove_reference<char&>::type&& std::move<char&>(char&) [36]
-----------------------------------------------
                0.50    0.23 66666666/66666666     infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
[23]     4.0    0.50    0.23 66666666         Stack::push(char) [23]
                0.23    0.00      25/25          Stack::resizeArray() [42]
-----------------------------------------------
                0.29    0.42 133333479/133333479     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() const [18]
[24]     3.9    0.29    0.42 133333479         std::pointer_traits<char const*>::pointer_to(char const&) [24]
                0.23    0.20 133333479/133333479     char const* std::addressof<char const>(char const&) [31]
-----------------------------------------------
                0.30    0.00 99999999/233333332     void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag) [7]
                0.40    0.00 133333333/233333332     infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
[25]     3.9    0.70    0.00 233333332         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++() [25]
-----------------------------------------------
                0.19    0.00 133333333/466666665     infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
                0.19    0.00 133333334/466666665     createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [10]
                0.28    0.00 199999998/466666665     void std::iter_swap<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [14]
[26]     3.6    0.67    0.00 466666665         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const [26]
-----------------------------------------------
                0.00    0.00       1/400000309     void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [78]
                0.00    0.00       2/400000309     void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [75]
                0.00    0.00       4/400000309     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::begin() [83]
                0.00    0.00       4/400000309     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::end() [82]
                0.00    0.00       4/400000309     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [66]
                0.00    0.00      70/400000309     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) [43]
                0.00    0.00      72/400000309     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned long) [81]
                0.21    0.00 133333334/400000309     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [3]
                0.21    0.00 133333339/400000309     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned long) [13]
                0.22    0.00 133333479/400000309     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const [12]
[27]     3.5    0.65    0.00 400000309         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [27]
-----------------------------------------------
                0.20    0.00 200000002/600000008     decltype (std::__detail::__synth3way((declval<char*&>)(), (declval<char*&>)())) __gnu_cxx::operator<=><char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [19]
                0.40    0.00 400000006/600000008     bool __gnu_cxx::operator==<char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [15]
[28]     3.3    0.59    0.00 600000008         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const [28]
-----------------------------------------------
                0.20    0.00 66666667/166666667     getNodeHeight(ParseTree*) [17]
                0.29    0.00 100000000/166666667     inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [5]
[29]     2.7    0.49    0.00 166666667         ParseTree::getRightNode(ParseTree*) [29]
-----------------------------------------------
                0.27    0.16 66666667/66666667     createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [10]
[30]     2.4    0.27    0.16 66666667         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++(int) [30]
                0.16    0.00 66666667/66666675     __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__normal_iterator(char* const&) [46]
-----------------------------------------------
                0.23    0.20 133333479/133333479     std::pointer_traits<char const*>::pointer_to(char const&) [24]
[31]     2.3    0.23    0.20 133333479         char const* std::addressof<char const>(char const&) [31]
                0.20    0.00 133333479/133333479     char const* std::__addressof<char const>(char const&) [44]
-----------------------------------------------
                0.35    0.00 100000001/100000001     decltype (std::__detail::__synth3way((declval<char*&>)(), (declval<char*&>)())) __gnu_cxx::operator<=><char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [19]
[32]     1.9    0.35    0.00 100000001         auto std::__detail::_Synth3way::operator()<char*, char*>(char* const&, char* const&) const [32]
-----------------------------------------------
                0.00    0.00       1/166666668     getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [69]
                0.14    0.00 66666667/166666668     getNodeHeight(ParseTree*) [17]
                0.21    0.00 100000000/166666668     inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [5]
[33]     1.9    0.35    0.00 166666668         ParseTree::getLeftNode(ParseTree*) [33]
-----------------------------------------------
                0.34    0.00 66666666/66666666     infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
[34]     1.8    0.34    0.00 66666666         Stack::pop() [34]
-----------------------------------------------
                0.33    0.00 133333339/133333339     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned long) [13]
[35]     1.8    0.33    0.00 133333339         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_length(unsigned long) [35]
-----------------------------------------------
                0.00    0.00       1/299999999     std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::operator[](char&&) [84]
                0.00    0.00       1/299999999     std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [85]
                0.28    0.00 299999997/299999999     std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<char> >, std::is_move_constructible<char>, std::is_move_assignable<char> >::value, void>::type std::swap<char>(char&, char&) [22]
[36]     1.6    0.28    0.00 299999999         std::remove_reference<char&>::type&& std::move<char&>(char&) [36]
-----------------------------------------------
                0.28    0.00 100000001/100000001     void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag) [7]
[37]     1.5    0.28    0.00 100000001         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator--() [37]
-----------------------------------------------
                0.26    0.00 100000001/100000001     void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag) [7]
[38]     1.4    0.26    0.00 100000001         std::operator<(std::strong_ordering, std::__cmp_cat::__unspec) [38]
-----------------------------------------------
                0.00    0.00       4/133333338     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::end() [82]
                0.25    0.00 133333334/133333338     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [3]
[39]     1.4    0.25    0.00 133333338         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size() const [39]
-----------------------------------------------
                0.25    0.00 66666667/66666667     createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [10]
[40]     1.4    0.25    0.00 66666667         ParseTree::ParseTree(char) [40]
-----------------------------------------------
                0.24    0.00 33333333/33333333     createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [10]
[41]     1.3    0.24    0.00 33333333         ParseTree::setRightNode(ParseTree*) [41]
-----------------------------------------------
                0.23    0.00      25/25          Stack::push(char) [23]
[42]     1.3    0.23    0.00      25         Stack::resizeArray() [42]
-----------------------------------------------
                0.01    0.20      46/46          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char) [3]
[43]     1.1    0.01    0.20      46         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) [43]
                0.00    0.09      70/73          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned long) [52]
                0.00    0.05      70/72          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long) [57]
                0.03    0.00     140/142         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::length() const [61]
                0.03    0.00      70/72          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data(char*) [62]
                0.00    0.00      70/133333404     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const [11]
                0.00    0.00      70/75          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [80]
                0.00    0.00      70/400000309     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [27]
                0.00    0.00      70/72          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_capacity(unsigned long) [99]
-----------------------------------------------
                0.20    0.00 133333479/133333479     char const* std::addressof<char const>(char const&) [31]
[44]     1.1    0.20    0.00 133333479         char const* std::__addressof<char const>(char const&) [44]
-----------------------------------------------
                                                 <spontaneous>
[45]     1.1    0.20    0.00                 char* std::copy<char const*, char*>(char const*, char const*, char*) [45]
-----------------------------------------------
                0.00    0.00       4/66666675     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::begin() [83]
                0.00    0.00       4/66666675     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::end() [82]
                0.16    0.00 66666667/66666675     __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++(int) [30]
[46]     0.9    0.17    0.00 66666675         __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__normal_iterator(char* const&) [46]
-----------------------------------------------
                0.16    0.00 100000001/100000001     void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag) [7]
[47]     0.9    0.16    0.00 100000001         std::__cmp_cat::__unspec::__unspec(std::__cmp_cat::__unspec*) [47]
-----------------------------------------------
                                                 <spontaneous>
[48]     0.8    0.14    0.00                 _init [48]
-----------------------------------------------
                0.12    0.00 66666667/66666667     getNodeHeight(ParseTree*) [17]
[49]     0.7    0.12    0.00 66666667         long long const& std::max<long long>(long long const&, long long const&) [49]
-----------------------------------------------
                0.00    0.00       4/66666671     getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [69]
                0.11    0.00 66666667/66666671     inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [5]
[50]     0.6    0.11    0.00 66666671         ParseTree::getValue() [50]
-----------------------------------------------
                0.10    0.00      73/73          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned long) [52]
[51]     0.5    0.10    0.00      73         std::char_traits<char>::copy(char*, char const*, unsigned long) [51]
                0.00    0.00      72/220         std::is_constant_evaluated() [92]
-----------------------------------------------
                0.00    0.00       1/73          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*) [79]
                0.00    0.00       2/73          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*) [77]
                0.00    0.09      70/73          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) [43]
[52]     0.5    0.00    0.10      73         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned long) [52]
                0.10    0.00      73/73          std::char_traits<char>::copy(char*, char const*, unsigned long) [51]
-----------------------------------------------
                0.07    0.00 33333333/33333333     createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [10]
[53]     0.4    0.07    0.00 33333333         ParseTree::setLeftNode(ParseTree*) [53]
-----------------------------------------------
                0.00    0.05      72/72          std::allocator_traits<std::allocator<char> >::allocate(std::allocator<char>&, unsigned long) [56]
[54]     0.3    0.00    0.05      72         __gnu_cxx::new_allocator<char>::allocate(unsigned long, void const*) [54]
                0.05    0.00      72/72          __gnu_cxx::new_allocator<char>::_M_max_size() const [55]
-----------------------------------------------
                0.05    0.00      72/72          __gnu_cxx::new_allocator<char>::allocate(unsigned long, void const*) [54]
[55]     0.3    0.05    0.00      72         __gnu_cxx::new_allocator<char>::_M_max_size() const [55]
-----------------------------------------------
                0.00    0.05      72/72          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long) [57]
[56]     0.3    0.00    0.05      72         std::allocator_traits<std::allocator<char> >::allocate(std::allocator<char>&, unsigned long) [56]
                0.00    0.05      72/72          __gnu_cxx::new_allocator<char>::allocate(unsigned long, void const*) [54]
                0.00    0.00      72/220         std::is_constant_evaluated() [92]
-----------------------------------------------
                0.00    0.00       2/72          void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [75]
                0.00    0.05      70/72          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) [43]
[57]     0.3    0.00    0.05      72         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long) [57]
                0.00    0.05      72/72          std::allocator_traits<std::allocator<char> >::allocate(std::allocator<char>&, unsigned long) [56]
                0.00    0.00     142/142         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::max_size() const [95]
                0.00    0.00      72/144         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() [94]
-----------------------------------------------
                0.04    0.00       2/2           void std::reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [6]
[58]     0.2    0.04    0.00       2         std::iterator_traits<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [58]
-----------------------------------------------
                                                 <spontaneous>
[59]     0.2    0.04    0.00                 char* std::__copy_move_a<false, char const*, char*>(char const*, char const*, char*) [59]
-----------------------------------------------
                0.03    0.00       5/5           main [1]
[60]     0.2    0.03    0.00       5         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() [60]
                0.00    0.00       5/75          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [80]
                0.00    0.00       5/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider() [103]
-----------------------------------------------
                0.00    0.00       2/142         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [66]
                0.03    0.00     140/142         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) [43]
[61]     0.2    0.03    0.00     142         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::length() const [61]
-----------------------------------------------
                0.00    0.00       2/72          void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [75]
                0.03    0.00      70/72          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) [43]
[62]     0.2    0.03    0.00      72         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data(char*) [62]
-----------------------------------------------
                0.01    0.00       1/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [73]
                0.01    0.00       2/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string() [68]
                0.01    0.00       2/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [66]
[63]     0.2    0.03    0.00       5         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() [63]
                0.00    0.00       5/5           std::pointer_traits<char*>::pointer_to(char&) [102]
-----------------------------------------------
                                                 <spontaneous>
[64]     0.1    0.02    0.00                 char* std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m<char const*, char*>(char const*, char const*, char*) [64]
-----------------------------------------------
                                                 <spontaneous>
[65]     0.1    0.02    0.00                 char const* std::__niter_base<char const*>(char const*) [65]
-----------------------------------------------
                0.00    0.02       2/2           main [1]
[66]     0.1    0.00    0.02       2         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [66]
                0.01    0.00       2/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() [63]
                0.00    0.00       2/2           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*) [74]
                0.00    0.00       2/142         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::length() const [61]
                0.00    0.00       4/400000309     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [27]
                0.00    0.00       2/144         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() const [93]
                0.00    0.00       2/2           __gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy(std::allocator<char> const&) [121]
                0.00    0.00       2/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char>&&) [106]
-----------------------------------------------
                                                 <spontaneous>
[67]     0.1    0.01    0.00                 Stack::printStack() [67]
-----------------------------------------------
                0.00    0.01       1/2           infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
                0.00    0.01       1/2           main [1]
[68]     0.1    0.00    0.01       2         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string() [68]
                0.01    0.00       2/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() [63]
                0.00    0.00       2/133333339     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned long) [13]
                0.00    0.00       2/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char>&&) [106]
-----------------------------------------------
                                   1             getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [69]
                0.00    0.01       1/1           evaluateTreeTruthValue(ParseTree*) [70]
[69]     0.1    0.00    0.01       1+1       getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [69]
                0.01    0.00       1/1           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::find(char const&) [71]
                0.00    0.00       4/66666671     ParseTree::getValue() [50]
                0.00    0.00       1/166666668     ParseTree::getLeftNode(ParseTree*) [33]
                0.00    0.00       1/1           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::operator[](char&&) [84]
                0.00    0.00       1/1           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::end() [179]
                0.00    0.00       1/1           std::__detail::operator==(std::__detail::_Node_iterator_base<std::pair<char const, bool>, false> const&, std::__detail::_Node_iterator_base<std::pair<char const, bool>, false> const&) [211]
                                   1             getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [69]
-----------------------------------------------
                0.00    0.01       1/1           main [1]
[70]     0.1    0.00    0.01       1         evaluateTreeTruthValue(ParseTree*) [70]
                0.00    0.01       1/1           getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [69]
                0.00    0.00       1/1           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::unordered_map() [180]
                0.00    0.00       1/1           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::~unordered_map() [181]
-----------------------------------------------
                0.01    0.00       1/1           getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [69]
[71]     0.1    0.01    0.00       1         std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::find(char const&) [71]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(char const&) [168]
-----------------------------------------------
                                                 <spontaneous>
[72]     0.1    0.01    0.00                 printBinaryParseTree(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, ParseTree*, bool) [72]
-----------------------------------------------
                0.00    0.01       1/1           parseTreeToInfix[abi:cxx11](ParseTree*) [4]
[73]     0.0    0.00    0.01       1         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [73]
                0.01    0.00       1/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() [63]
                0.00    0.00       1/1           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [78]
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char> const&) [194]
                0.00    0.00       1/1           std::char_traits<char>::length(char const*) [178]
-----------------------------------------------
                0.00    0.00       2/2           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [66]
[74]     0.0    0.00    0.00       2         void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*) [74]
                0.00    0.00       2/2           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type) [76]
-----------------------------------------------
                0.00    0.00       2/2           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type) [76]
[75]     0.0    0.00    0.00       2         void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [75]
                0.00    0.00       2/2           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*) [77]
                0.00    0.00       2/72          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long) [57]
                0.00    0.00       2/72          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data(char*) [62]
                0.00    0.00       2/133333339     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned long) [13]
                0.00    0.00       2/400000309     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [27]
                0.00    0.00       2/2           bool __gnu_cxx::__is_null_pointer<char>(char*) [122]
                0.00    0.00       2/2           std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*) [139]
                0.00    0.00       2/72          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_capacity(unsigned long) [99]
-----------------------------------------------
                0.00    0.00       2/2           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*) [74]
[76]     0.0    0.00    0.00       2         void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type) [76]
                0.00    0.00       2/2           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [75]
-----------------------------------------------
                0.00    0.00       2/2           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [75]
[77]     0.0    0.00    0.00       2         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*) [77]
                0.00    0.00       2/73          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned long) [52]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [73]
[78]     0.0    0.00    0.00       1         void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [78]
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*) [79]
                0.00    0.00       1/133333339     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned long) [13]
                0.00    0.00       1/400000309     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [27]
                0.00    0.00       1/1           bool __gnu_cxx::__is_null_pointer<char const>(char const*) [152]
                0.00    0.00       1/1           std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*) [224]
-----------------------------------------------
                0.00    0.00       1/1           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [78]
[79]     0.0    0.00    0.00       1         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*) [79]
                0.00    0.00       1/73          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned long) [52]
-----------------------------------------------
                0.00    0.00       5/75          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() [60]
                0.00    0.00      70/75          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) [43]
[80]     0.0    0.00    0.00      75         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [80]
                0.00    0.00      75/133333479     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const [12]
                0.00    0.00      72/72          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned long) [81]
-----------------------------------------------
                0.00    0.00      72/72          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [80]
[81]     0.0    0.00    0.00      72         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned long) [81]
                0.00    0.00      72/400000309     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [27]
                0.00    0.00      72/144         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() [94]
                0.00    0.00      72/72          std::allocator_traits<std::allocator<char> >::deallocate(std::allocator<char>&, char*, unsigned long) [98]
-----------------------------------------------
                0.00    0.00       1/4           prefixToParseTree(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [9]
                0.00    0.00       3/4           infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
[82]     0.0    0.00    0.00       4         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::end() [82]
                0.00    0.00       4/66666675     __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__normal_iterator(char* const&) [46]
                0.00    0.00       4/133333338     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size() const [39]
                0.00    0.00       4/400000309     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [27]
-----------------------------------------------
                0.00    0.00       1/4           prefixToParseTree(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [9]
                0.00    0.00       3/4           infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
[83]     0.0    0.00    0.00       4         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::begin() [83]
                0.00    0.00       4/66666675     __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__normal_iterator(char* const&) [46]
                0.00    0.00       4/400000309     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [27]
-----------------------------------------------
                0.00    0.00       1/1           getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [69]
[84]     0.0    0.00    0.00       1         std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::operator[](char&&) [84]
                0.00    0.00       1/1           std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [85]
                0.00    0.00       1/299999999     std::remove_reference<char&>::type&& std::move<char&>(char&) [36]
-----------------------------------------------
                0.00    0.00       1/1           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::operator[](char&&) [84]
[85]     0.0    0.00    0.00       1         std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [85]
                0.00    0.00       1/299999999     std::remove_reference<char&>::type&& std::move<char&>(char&) [36]
                0.00    0.00       1/2           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(char const&) const [128]
                0.00    0.00       1/3           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(unsigned long) const [114]
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned long, char const&, unsigned long) const [123]
                0.00    0.00       1/1           std::tuple<char&&> std::forward_as_tuple<char>(char&&) [220]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [161]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned long) [165]
                0.00    0.00       1/1           std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::operator->() const [156]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::~_Scoped_node() [162]
-----------------------------------------------
                0.00    0.00       1/220         std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, unsigned long) [186]
                0.00    0.00       1/220         std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned long) [184]
                0.00    0.00       1/220         std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate(std::allocator<std::__detail::_Hash_node_base*>&, std::__detail::_Hash_node_base**, unsigned long) [188]
                0.00    0.00       1/220         std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) [189]
                0.00    0.00      72/220         std::char_traits<char>::copy(char*, char const*, unsigned long) [51]
                0.00    0.00      72/220         std::allocator_traits<std::allocator<char> >::allocate(std::allocator<char>&, unsigned long) [56]
                0.00    0.00      72/220         std::allocator_traits<std::allocator<char> >::deallocate(std::allocator<char>&, char*, unsigned long) [98]
[92]     0.0    0.00    0.00     220         std::is_constant_evaluated() [92]
-----------------------------------------------
                0.00    0.00       2/144         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [66]
                0.00    0.00     142/144         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::max_size() const [95]
[93]     0.0    0.00    0.00     144         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() const [93]
-----------------------------------------------
                0.00    0.00      72/144         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long) [57]
                0.00    0.00      72/144         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned long) [81]
[94]     0.0    0.00    0.00     144         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() [94]
-----------------------------------------------
                0.00    0.00     142/142         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long) [57]
[95]     0.0    0.00    0.00     142         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::max_size() const [95]
                0.00    0.00     142/142         std::allocator_traits<std::allocator<char> >::max_size(std::allocator<char> const&) [96]
                0.00    0.00     142/144         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() const [93]
-----------------------------------------------
                0.00    0.00     142/142         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::max_size() const [95]
[96]     0.0    0.00    0.00     142         std::allocator_traits<std::allocator<char> >::max_size(std::allocator<char> const&) [96]
-----------------------------------------------
                0.00    0.00      72/72          std::allocator_traits<std::allocator<char> >::deallocate(std::allocator<char>&, char*, unsigned long) [98]
[97]     0.0    0.00    0.00      72         __gnu_cxx::new_allocator<char>::deallocate(char*, unsigned long) [97]
-----------------------------------------------
                0.00    0.00      72/72          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned long) [81]
[98]     0.0    0.00    0.00      72         std::allocator_traits<std::allocator<char> >::deallocate(std::allocator<char>&, char*, unsigned long) [98]
                0.00    0.00      72/220         std::is_constant_evaluated() [92]
                0.00    0.00      72/72          __gnu_cxx::new_allocator<char>::deallocate(char*, unsigned long) [97]
-----------------------------------------------
                0.00    0.00       2/72          void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [75]
                0.00    0.00      70/72          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) [43]
[99]     0.0    0.00    0.00      72         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_capacity(unsigned long) [99]
-----------------------------------------------
                0.00    0.00       1/6           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [199]
                0.00    0.00       1/6           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [202]
                0.00    0.00       1/6           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [203]
                0.00    0.00       1/6           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_buckets(unsigned long) [200]
                0.00    0.00       2/6           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [198]
[100]    0.0    0.00    0.00       6         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_node_allocator() [100]
                0.00    0.00       6/6           std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::_M_get() [101]
-----------------------------------------------
                0.00    0.00       6/6           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_node_allocator() [100]
[101]    0.0    0.00    0.00       6         std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::_M_get() [101]
-----------------------------------------------
                0.00    0.00       5/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() [63]
[102]    0.0    0.00    0.00       5         std::pointer_traits<char*>::pointer_to(char&) [102]
                0.00    0.00       5/5           char* std::addressof<char>(char&) [105]
-----------------------------------------------
                0.00    0.00       5/5           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() [60]
[103]    0.0    0.00    0.00       5         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider() [103]
-----------------------------------------------
                0.00    0.00       5/5           char* std::addressof<char>(char&) [105]
[104]    0.0    0.00    0.00       5         char* std::__addressof<char>(char&) [104]
-----------------------------------------------
                0.00    0.00       5/5           std::pointer_traits<char*>::pointer_to(char&) [102]
[105]    0.0    0.00    0.00       5         char* std::addressof<char>(char&) [105]
                0.00    0.00       5/5           char* std::__addressof<char>(char&) [104]
-----------------------------------------------
                0.00    0.00       2/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string() [68]
                0.00    0.00       2/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [66]
[106]    0.0    0.00    0.00       4         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char>&&) [106]
                0.00    0.00       4/4           std::remove_reference<std::allocator<char>&>::type&& std::move<std::allocator<char>&>(std::allocator<char>&) [107]
-----------------------------------------------
                0.00    0.00       4/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char>&&) [106]
[107]    0.0    0.00    0.00       4         std::remove_reference<std::allocator<char>&>::type&& std::move<std::allocator<char>&>(std::allocator<char>&) [107]
-----------------------------------------------
                0.00    0.00       1/4           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [161]
                0.00    0.00       1/4           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [198]
                0.00    0.00       1/4           decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [219]
                0.00    0.00       1/4           void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::construct<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [187]
[108]    0.0    0.00    0.00       4         std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&) [108]
-----------------------------------------------
                0.00    0.00       1/4           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [161]
                0.00    0.00       1/4           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [198]
                0.00    0.00       1/4           decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [219]
                0.00    0.00       1/4           void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::construct<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [187]
[109]    0.0    0.00    0.00       4         std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&) [109]
-----------------------------------------------
                0.00    0.00       1/4           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [161]
                0.00    0.00       1/4           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [198]
                0.00    0.00       1/4           decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [219]
                0.00    0.00       1/4           void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::construct<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [187]
[110]    0.0    0.00    0.00       4         std::tuple<char&&>&& std::forward<std::tuple<char&&> >(std::remove_reference<std::tuple<char&&> >::type&) [110]
-----------------------------------------------
                0.00    0.00       1/4           std::tuple<char&&> std::forward_as_tuple<char>(char&&) [220]
                0.00    0.00       1/4           std::tuple<char&&>::tuple<char, true, true>(char&&) [193]
                0.00    0.00       1/4           std::_Tuple_impl<0ul, char&&>::_Tuple_impl<char>(char&&) [176]
                0.00    0.00       1/4           std::_Head_base<0ul, char&&, false>::_Head_base<char>(char&&) [174]
[111]    0.0    0.00    0.00       4         char&& std::forward<char>(std::remove_reference<char>::type&) [111]
-----------------------------------------------
                0.00    0.00       3/3           std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_valptr() [119]
[112]    0.0    0.00    0.00       3         __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_ptr() [112]
                0.00    0.00       3/3           __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_addr() [113]
-----------------------------------------------
                0.00    0.00       3/3           __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_ptr() [112]
[113]    0.0    0.00    0.00       3         __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_addr() [113]
-----------------------------------------------
                0.00    0.00       1/3           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(char const&) [168]
                0.00    0.00       1/3           std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [85]
                0.00    0.00       1/3           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned long) [165]
[114]    0.0    0.00    0.00       3         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(unsigned long) const [114]
                0.00    0.00       3/3           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(unsigned long, unsigned long) const [115]
-----------------------------------------------
                0.00    0.00       3/3           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(unsigned long) const [114]
[115]    0.0    0.00    0.00       3         std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(unsigned long, unsigned long) const [115]
                0.00    0.00       3/3           std::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const [116]
-----------------------------------------------
                0.00    0.00       3/3           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(unsigned long, unsigned long) const [115]
[116]    0.0    0.00    0.00       3         std::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const [116]
-----------------------------------------------
                0.00    0.00       1/3           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(char const&) [168]
                0.00    0.00       1/3           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::end() [167]
                0.00    0.00       1/3           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned long) [165]
[117]    0.0    0.00    0.00       3         std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [117]
                0.00    0.00       3/3           std::__detail::_Node_iterator_base<std::pair<char const, bool>, false>::_Node_iterator_base(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [118]
-----------------------------------------------
                0.00    0.00       3/3           std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [117]
[118]    0.0    0.00    0.00       3         std::__detail::_Node_iterator_base<std::pair<char const, bool>, false>::_Node_iterator_base(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [118]
-----------------------------------------------
                0.00    0.00       1/3           std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::operator->() const [156]
                0.00    0.00       1/3           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [198]
                0.00    0.00       1/3           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [199]
[119]    0.0    0.00    0.00       3         std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_valptr() [119]
                0.00    0.00       3/3           __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_ptr() [112]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > const&) [131]
[120]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::new_allocator() [120]
-----------------------------------------------
                0.00    0.00       2/2           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [66]
[121]    0.0    0.00    0.00       2         __gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy(std::allocator<char> const&) [121]
                0.00    0.00       2/2           std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction(std::allocator<char> const&) [135]
-----------------------------------------------
                0.00    0.00       2/2           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [75]
[122]    0.0    0.00    0.00       2         bool __gnu_cxx::__is_null_pointer<char>(char*) [122]
-----------------------------------------------
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(char const&) [168]
                0.00    0.00       1/2           std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [85]
[123]    0.0    0.00    0.00       2         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned long, char const&, unsigned long) const [123]
                0.00    0.00       2/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, char const&, unsigned long) const [124]
-----------------------------------------------
                0.00    0.00       2/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned long, char const&, unsigned long) const [123]
[124]    0.0    0.00    0.00       2         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, char const&, unsigned long) const [124]
-----------------------------------------------
                0.00    0.00       2/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [133]
[125]    0.0    0.00    0.00       2         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_uses_single_bucket(std::__detail::_Hash_node_base**) const [125]
-----------------------------------------------
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [169]
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [163]
[126]    0.0    0.00    0.00       2         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const [126]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(char const&) const [128]
[127]    0.0    0.00    0.00       2         std::hash<char>::operator()(char) const [127]
-----------------------------------------------
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(char const&) [168]
                0.00    0.00       1/2           std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [85]
[128]    0.0    0.00    0.00       2         std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(char const&) const [128]
                0.00    0.00       2/2           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash() const [129]
                0.00    0.00       2/2           std::hash<char>::operator()(char) const [127]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(char const&) const [128]
[129]    0.0    0.00    0.00       2         std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash() const [129]
                0.00    0.00       2/2           std::__detail::_Hashtable_ebo_helper<1, std::hash<char>, true>::_M_cget() const [130]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash() const [129]
[130]    0.0    0.00    0.00       2         std::__detail::_Hashtable_ebo_helper<1, std::hash<char>, true>::_M_cget() const [130]
-----------------------------------------------
                0.00    0.00       1/2           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [202]
                0.00    0.00       1/2           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_buckets(unsigned long) [200]
[131]    0.0    0.00    0.00       2         std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > const&) [131]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::new_allocator() [120]
-----------------------------------------------
                0.00    0.00       1/2           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [202]
                0.00    0.00       1/2           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_buckets(unsigned long) [200]
[132]    0.0    0.00    0.00       2         std::allocator<std::__detail::_Hash_node_base*>::~allocator() [132]
-----------------------------------------------
                0.00    0.00       2/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets() [134]
[133]    0.0    0.00    0.00       2         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [133]
                0.00    0.00       2/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_uses_single_bucket(std::__detail::_Hash_node_base**) const [125]
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [202]
-----------------------------------------------
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [172]
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [163]
[134]    0.0    0.00    0.00       2         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets() [134]
                0.00    0.00       2/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [133]
-----------------------------------------------
                0.00    0.00       2/2           __gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy(std::allocator<char> const&) [121]
[135]    0.0    0.00    0.00       2         std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction(std::allocator<char> const&) [135]
-----------------------------------------------
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable() [171]
                0.00    0.00       1/2           std::__detail::_Hash_node<std::pair<char const, bool>, false>::_Hash_node() [195]
[136]    0.0    0.00    0.00       2         std::__detail::_Hash_node_base::_Hash_node_base() [136]
-----------------------------------------------
                0.00    0.00       2/2           std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*) [139]
[137]    0.0    0.00    0.00       2         std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag) [137]
-----------------------------------------------
                0.00    0.00       2/2           std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*) [139]
[138]    0.0    0.00    0.00       2         std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&) [138]
-----------------------------------------------
                0.00    0.00       2/2           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [75]
[139]    0.0    0.00    0.00       2         std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*) [139]
                0.00    0.00       2/2           std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&) [138]
                0.00    0.00       2/2           std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag) [137]
-----------------------------------------------
                0.00    0.00       1/2           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [198]
                0.00    0.00       1/2           decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [219]
[140]    0.0    0.00    0.00       2         operator new(unsigned long, void*) [140]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z13infixToPrefixNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE [227]
[141]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [141]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_main [230]
[142]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [142]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN5Stack11resizeArrayEv [228]
[143]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [143]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN9ParseTreeC2Ec [229]
[144]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [144]
-----------------------------------------------
                0.00    0.00       1/1           infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
[145]    0.0    0.00    0.00       1         Stack::Stack() [145]
-----------------------------------------------
                0.00    0.00       1/1           infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [2]
[146]    0.0    0.00    0.00       1         Stack::~Stack() [146]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned long) [184]
[147]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::deallocate(std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned long) [147]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, unsigned long) [186]
[148]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocate(unsigned long, void const*) [148]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::_M_max_size() const [153]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocator() [159]
[149]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::new_allocator() [149]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate(std::allocator<std::__detail::_Hash_node_base*>&, std::__detail::_Hash_node_base**, unsigned long) [188]
[150]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::deallocate(std::__detail::_Hash_node_base**, unsigned long) [150]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) [189]
[151]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) [151]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::_M_max_size() const [154]
-----------------------------------------------
                0.00    0.00       1/1           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [78]
[152]    0.0    0.00    0.00       1         bool __gnu_cxx::__is_null_pointer<char const>(char const*) [152]
-----------------------------------------------
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocate(unsigned long, void const*) [148]
[153]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::_M_max_size() const [153]
-----------------------------------------------
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) [151]
[154]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::_M_max_size() const [154]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [201]
[155]    0.0    0.00    0.00       1         std::__detail::_Hash_node<std::pair<char const, bool>, false>::_M_next() const [155]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [85]
[156]    0.0    0.00    0.00       1         std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::operator->() const [156]
                0.00    0.00       1/3           std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_valptr() [119]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned long) [165]
[157]    0.0    0.00    0.00       1         std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_node_code_cache<false>&, unsigned long) const [157]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned long) [165]
[158]    0.0    0.00    0.00       1         std::__detail::_Prime_rehash_policy::_M_state() const [158]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::_Hashtable_ebo_helper() [207]
[159]    0.0    0.00    0.00       1         std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocator() [159]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::new_allocator() [149]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::~_Hashtable_ebo_helper() [208]
[160]    0.0    0.00    0.00       1         std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::~allocator() [160]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [85]
[161]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [161]
                0.00    0.00       1/4           std::tuple<char&&>&& std::forward<std::tuple<char&&> >(std::remove_reference<std::tuple<char&&> >::type&) [110]
                0.00    0.00       1/4           std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&) [109]
                0.00    0.00       1/4           std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&) [108]
                0.00    0.00       1/1           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [198]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [85]
[162]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::~_Scoped_node() [162]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) [170]
[163]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [163]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned long) [164]
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const [126]
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets() [134]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [163]
[164]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned long) [164]
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_buckets(unsigned long) [200]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [85]
[165]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned long) [165]
                0.00    0.00       1/1           std::__detail::_Prime_rehash_policy::_M_state() const [158]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) [170]
                0.00    0.00       1/3           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(unsigned long) const [114]
                0.00    0.00       1/1           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_node_code_cache<false>&, unsigned long) const [157]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [166]
                0.00    0.00       1/3           std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [117]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned long) [165]
[166]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [166]
-----------------------------------------------
                0.00    0.00       1/1           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::end() [179]
[167]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::end() [167]
                0.00    0.00       1/3           std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [117]
-----------------------------------------------
                0.00    0.00       1/1           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::find(char const&) [71]
[168]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(char const&) [168]
                0.00    0.00       1/2           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(char const&) const [128]
                0.00    0.00       1/3           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(unsigned long) const [114]
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned long, char const&, unsigned long) const [123]
                0.00    0.00       1/3           std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [117]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [172]
[169]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [169]
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const [126]
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [201]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned long) [165]
[170]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) [170]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [163]
-----------------------------------------------
                0.00    0.00       1/1           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::unordered_map() [180]
[171]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable() [171]
                0.00    0.00       1/1           std::__detail::_Hashtable_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable_base() [197]
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_Hashtable_alloc() [204]
                0.00    0.00       1/2           std::__detail::_Hash_node_base::_Hash_node_base() [136]
                0.00    0.00       1/1           std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float) [206]
-----------------------------------------------
                0.00    0.00       1/1           std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::~unordered_map() [181]
[172]    0.0    0.00    0.00       1         std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [172]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [169]
                0.00    0.00       1/2           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets() [134]
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::~_Hashtable_alloc() [205]
-----------------------------------------------
                0.00    0.00       1/1           std::_Tuple_impl<0ul, char&&>::_M_head(std::_Tuple_impl<0ul, char&&>&) [175]
[173]    0.0    0.00    0.00       1         std::_Head_base<0ul, char&&, false>::_M_head(std::_Head_base<0ul, char&&, false>&) [173]
-----------------------------------------------
                0.00    0.00       1/1           std::_Tuple_impl<0ul, char&&>::_Tuple_impl<char>(char&&) [176]
[174]    0.0    0.00    0.00       1         std::_Head_base<0ul, char&&, false>::_Head_base<char>(char&&) [174]
                0.00    0.00       1/4           char&& std::forward<char>(std::remove_reference<char>::type&) [111]
-----------------------------------------------
                0.00    0.00       1/1           char& std::__get_helper<0ul, char&&>(std::_Tuple_impl<0ul, char&&>&) [216]
[175]    0.0    0.00    0.00       1         std::_Tuple_impl<0ul, char&&>::_M_head(std::_Tuple_impl<0ul, char&&>&) [175]
                0.00    0.00       1/1           std::_Head_base<0ul, char&&, false>::_M_head(std::_Head_base<0ul, char&&, false>&) [173]
-----------------------------------------------
                0.00    0.00       1/1           std::tuple<char&&>::tuple<char, true, true>(char&&) [193]
[176]    0.0    0.00    0.00       1         std::_Tuple_impl<0ul, char&&>::_Tuple_impl<char>(char&&) [176]
                0.00    0.00       1/4           char&& std::forward<char>(std::remove_reference<char>::type&) [111]
                0.00    0.00       1/1           std::_Head_base<0ul, char&&, false>::_Head_base<char>(char&&) [174]
-----------------------------------------------
                0.00    0.00       1/1           std::tuple<char&&>::tuple(std::tuple<char&&>&&) [192]
[177]    0.0    0.00    0.00       1         std::_Tuple_impl<0ul, char&&>::_Tuple_impl(std::_Tuple_impl<0ul, char&&>&&) [177]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [73]
[178]    0.0    0.00    0.00       1         std::char_traits<char>::length(char const*) [178]
-----------------------------------------------
                0.00    0.00       1/1           getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [69]
[179]    0.0    0.00    0.00       1         std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::end() [179]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::end() [167]
-----------------------------------------------
                0.00    0.00       1/1           evaluateTreeTruthValue(ParseTree*) [70]
[180]    0.0    0.00    0.00       1         std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::unordered_map() [180]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable() [171]
-----------------------------------------------
                0.00    0.00       1/1           evaluateTreeTruthValue(ParseTree*) [70]
[181]    0.0    0.00    0.00       1         std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::~unordered_map() [181]
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [172]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [203]
[182]    0.0    0.00    0.00       1         std::pointer_traits<std::__detail::_Hash_node<std::pair<char const, bool>, false>*>::pointer_to(std::__detail::_Hash_node<std::pair<char const, bool>, false>&) [182]
                0.00    0.00       1/1           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::addressof<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>&) [225]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [202]
[183]    0.0    0.00    0.00       1         std::pointer_traits<std::__detail::_Hash_node_base**>::pointer_to(std::__detail::_Hash_node_base*&) [183]
                0.00    0.00       1/1           std::__detail::_Hash_node_base** std::addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&) [226]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [203]
[184]    0.0    0.00    0.00       1         std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned long) [184]
                0.00    0.00       1/220         std::is_constant_evaluated() [92]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::deallocate(std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned long) [147]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [199]
[185]    0.0    0.00    0.00       1         void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::destroy<std::pair<char const, bool> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*) [185]
                0.00    0.00       1/1           void std::destroy_at<std::pair<char const, bool> >(std::pair<char const, bool>*) [213]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [198]
[186]    0.0    0.00    0.00       1         std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, unsigned long) [186]
                0.00    0.00       1/220         std::is_constant_evaluated() [92]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocate(unsigned long, void const*) [148]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [198]
[187]    0.0    0.00    0.00       1         void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::construct<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [187]
                0.00    0.00       1/4           std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&) [109]
                0.00    0.00       1/4           std::tuple<char&&>&& std::forward<std::tuple<char&&> >(std::remove_reference<std::tuple<char&&> >::type&) [110]
                0.00    0.00       1/4           std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&) [108]
                0.00    0.00       1/1           decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [219]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [202]
[188]    0.0    0.00    0.00       1         std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate(std::allocator<std::__detail::_Hash_node_base*>&, std::__detail::_Hash_node_base**, unsigned long) [188]
                0.00    0.00       1/220         std::is_constant_evaluated() [92]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::deallocate(std::__detail::_Hash_node_base**, unsigned long) [150]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_buckets(unsigned long) [200]
[189]    0.0    0.00    0.00       1         std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) [189]
                0.00    0.00       1/220         std::is_constant_evaluated() [92]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) [151]
-----------------------------------------------
                0.00    0.00       1/1           std::pair<char const, bool>::pair<char&&>(std::piecewise_construct_t, std::tuple<char&&>, std::tuple<>) [191]
[190]    0.0    0.00    0.00       1         std::pair<char const, bool>::pair<char&&, 0ul>(std::tuple<char&&>&, std::tuple<>&, std::_Index_tuple<0ul>, std::_Index_tuple<>) [190]
                0.00    0.00       1/1           std::tuple_element<0ul, std::tuple<char&&> >::type& std::get<0ul, char&&>(std::tuple<char&&>&) [222]
                0.00    0.00       1/1           char&& std::forward<char&&>(std::remove_reference<char&&>::type&) [223]
-----------------------------------------------
                0.00    0.00       1/1           decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [219]
[191]    0.0    0.00    0.00       1         std::pair<char const, bool>::pair<char&&>(std::piecewise_construct_t, std::tuple<char&&>, std::tuple<>) [191]
                0.00    0.00       1/1           std::pair<char const, bool>::pair<char&&, 0ul>(std::tuple<char&&>&, std::tuple<>&, std::_Index_tuple<0ul>, std::_Index_tuple<>) [190]
-----------------------------------------------
                0.00    0.00       1/1           decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [219]
[192]    0.0    0.00    0.00       1         std::tuple<char&&>::tuple(std::tuple<char&&>&&) [192]
                0.00    0.00       1/1           std::_Tuple_impl<0ul, char&&>::_Tuple_impl(std::_Tuple_impl<0ul, char&&>&&) [177]
-----------------------------------------------
                0.00    0.00       1/1           std::tuple<char&&> std::forward_as_tuple<char>(char&&) [220]
[193]    0.0    0.00    0.00       1         std::tuple<char&&>::tuple<char, true, true>(char&&) [193]
                0.00    0.00       1/4           char&& std::forward<char>(std::remove_reference<char>::type&) [111]
                0.00    0.00       1/1           std::_Tuple_impl<0ul, char&&>::_Tuple_impl<char>(char&&) [176]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [73]
[194]    0.0    0.00    0.00       1         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char> const&) [194]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [198]
[195]    0.0    0.00    0.00       1         std::__detail::_Hash_node<std::pair<char const, bool>, false>::_Hash_node() [195]
                0.00    0.00       1/2           std::__detail::_Hash_node_base::_Hash_node_base() [136]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable_base() [197]
[196]    0.0    0.00    0.00       1         std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_Hash_code_base() [196]
                0.00    0.00       1/1           std::__detail::_Hashtable_ebo_helper<1, std::hash<char>, true>::_Hashtable_ebo_helper() [210]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable() [171]
[197]    0.0    0.00    0.00       1         std::__detail::_Hashtable_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable_base() [197]
                0.00    0.00       1/1           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_Hash_code_base() [196]
                0.00    0.00       1/1           std::__detail::_Hashtable_ebo_helper<0, std::equal_to<char>, true>::_Hashtable_ebo_helper() [209]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [161]
[198]    0.0    0.00    0.00       1         std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [198]
                0.00    0.00       2/6           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_node_allocator() [100]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, unsigned long) [186]
                0.00    0.00       1/1           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__to_address<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [217]
                0.00    0.00       1/1           std::__detail::_Hash_node<std::pair<char const, bool>, false>::_Hash_node() [195]
                0.00    0.00       1/2           operator new(unsigned long, void*) [140]
                0.00    0.00       1/4           std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&) [109]
                0.00    0.00       1/4           std::tuple<char&&>&& std::forward<std::tuple<char&&> >(std::remove_reference<std::tuple<char&&> >::type&) [110]
                0.00    0.00       1/4           std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&) [108]
                0.00    0.00       1/3           std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_valptr() [119]
                0.00    0.00       1/1           void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::construct<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [187]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [201]
[199]    0.0    0.00    0.00       1         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [199]
                0.00    0.00       1/3           std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_valptr() [119]
                0.00    0.00       1/1           void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::destroy<std::pair<char const, bool> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*) [185]
                0.00    0.00       1/6           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_node_allocator() [100]
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [203]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned long) [164]
[200]    0.0    0.00    0.00       1         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_buckets(unsigned long) [200]
                0.00    0.00       1/6           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_node_allocator() [100]
                0.00    0.00       1/2           std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > const&) [131]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) [189]
                0.00    0.00       1/1           std::__detail::_Hash_node_base** std::__to_address<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base**) [218]
                0.00    0.00       1/2           std::allocator<std::__detail::_Hash_node_base*>::~allocator() [132]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [169]
[201]    0.0    0.00    0.00       1         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [201]
                0.00    0.00       1/1           std::__detail::_Hash_node<std::pair<char const, bool>, false>::_M_next() const [155]
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [199]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [133]
[202]    0.0    0.00    0.00       1         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [202]
                0.00    0.00       1/1           std::pointer_traits<std::__detail::_Hash_node_base**>::pointer_to(std::__detail::_Hash_node_base*&) [183]
                0.00    0.00       1/6           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_node_allocator() [100]
                0.00    0.00       1/2           std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > const&) [131]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate(std::allocator<std::__detail::_Hash_node_base*>&, std::__detail::_Hash_node_base**, unsigned long) [188]
                0.00    0.00       1/2           std::allocator<std::__detail::_Hash_node_base*>::~allocator() [132]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [199]
[203]    0.0    0.00    0.00       1         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [203]
                0.00    0.00       1/1           std::pointer_traits<std::__detail::_Hash_node<std::pair<char const, bool>, false>*>::pointer_to(std::__detail::_Hash_node<std::pair<char const, bool>, false>&) [182]
                0.00    0.00       1/6           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_node_allocator() [100]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned long) [184]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable() [171]
[204]    0.0    0.00    0.00       1         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_Hashtable_alloc() [204]
                0.00    0.00       1/1           std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::_Hashtable_ebo_helper() [207]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [172]
[205]    0.0    0.00    0.00       1         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::~_Hashtable_alloc() [205]
                0.00    0.00       1/1           std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::~_Hashtable_ebo_helper() [208]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable() [171]
[206]    0.0    0.00    0.00       1         std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float) [206]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_Hashtable_alloc() [204]
[207]    0.0    0.00    0.00       1         std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::_Hashtable_ebo_helper() [207]
                0.00    0.00       1/1           std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocator() [159]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::~_Hashtable_alloc() [205]
[208]    0.0    0.00    0.00       1         std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::~_Hashtable_ebo_helper() [208]
                0.00    0.00       1/1           std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::~allocator() [160]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable_base() [197]
[209]    0.0    0.00    0.00       1         std::__detail::_Hashtable_ebo_helper<0, std::equal_to<char>, true>::_Hashtable_ebo_helper() [209]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_Hash_code_base() [196]
[210]    0.0    0.00    0.00       1         std::__detail::_Hashtable_ebo_helper<1, std::hash<char>, true>::_Hashtable_ebo_helper() [210]
-----------------------------------------------
                0.00    0.00       1/1           getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [69]
[211]    0.0    0.00    0.00       1         std::__detail::operator==(std::__detail::_Node_iterator_base<std::pair<char const, bool>, false> const&, std::__detail::_Node_iterator_base<std::pair<char const, bool>, false> const&) [211]
-----------------------------------------------
                0.00    0.00       1/1           std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*) [224]
[212]    0.0    0.00    0.00       1         std::iterator_traits<char const*>::difference_type std::__distance<char const*>(char const*, char const*, std::random_access_iterator_tag) [212]
-----------------------------------------------
                0.00    0.00       1/1           void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::destroy<std::pair<char const, bool> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*) [185]
[213]    0.0    0.00    0.00       1         void std::destroy_at<std::pair<char const, bool> >(std::pair<char const, bool>*) [213]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::addressof<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>&) [225]
[214]    0.0    0.00    0.00       1         std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__addressof<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>&) [214]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hash_node_base** std::addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&) [226]
[215]    0.0    0.00    0.00       1         std::__detail::_Hash_node_base** std::__addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&) [215]
-----------------------------------------------
                0.00    0.00       1/1           std::tuple_element<0ul, std::tuple<char&&> >::type& std::get<0ul, char&&>(std::tuple<char&&>&) [222]
[216]    0.0    0.00    0.00       1         char& std::__get_helper<0ul, char&&>(std::_Tuple_impl<0ul, char&&>&) [216]
                0.00    0.00       1/1           std::_Tuple_impl<0ul, char&&>::_M_head(std::_Tuple_impl<0ul, char&&>&) [175]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [198]
[217]    0.0    0.00    0.00       1         std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__to_address<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [217]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_buckets(unsigned long) [200]
[218]    0.0    0.00    0.00       1         std::__detail::_Hash_node_base** std::__to_address<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base**) [218]
-----------------------------------------------
                0.00    0.00       1/1           void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::construct<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [187]
[219]    0.0    0.00    0.00       1         decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [219]
                0.00    0.00       1/4           std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&) [108]
                0.00    0.00       1/4           std::tuple<char&&>&& std::forward<std::tuple<char&&> >(std::remove_reference<std::tuple<char&&> >::type&) [110]
                0.00    0.00       1/1           std::tuple<char&&>::tuple(std::tuple<char&&>&&) [192]
                0.00    0.00       1/4           std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&) [109]
                0.00    0.00       1/2           operator new(unsigned long, void*) [140]
                0.00    0.00       1/1           std::pair<char const, bool>::pair<char&&>(std::piecewise_construct_t, std::tuple<char&&>, std::tuple<>) [191]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&) [85]
[220]    0.0    0.00    0.00       1         std::tuple<char&&> std::forward_as_tuple<char>(char&&) [220]
                0.00    0.00       1/4           char&& std::forward<char>(std::remove_reference<char>::type&) [111]
                0.00    0.00       1/1           std::tuple<char&&>::tuple<char, true, true>(char&&) [193]
-----------------------------------------------
                0.00    0.00       1/1           std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*) [224]
[221]    0.0    0.00    0.00       1         std::iterator_traits<char const*>::iterator_category std::__iterator_category<char const*>(char const* const&) [221]
-----------------------------------------------
                0.00    0.00       1/1           std::pair<char const, bool>::pair<char&&, 0ul>(std::tuple<char&&>&, std::tuple<>&, std::_Index_tuple<0ul>, std::_Index_tuple<>) [190]
[222]    0.0    0.00    0.00       1         std::tuple_element<0ul, std::tuple<char&&> >::type& std::get<0ul, char&&>(std::tuple<char&&>&) [222]
                0.00    0.00       1/1           char& std::__get_helper<0ul, char&&>(std::_Tuple_impl<0ul, char&&>&) [216]
-----------------------------------------------
                0.00    0.00       1/1           std::pair<char const, bool>::pair<char&&, 0ul>(std::tuple<char&&>&, std::tuple<>&, std::_Index_tuple<0ul>, std::_Index_tuple<>) [190]
[223]    0.0    0.00    0.00       1         char&& std::forward<char&&>(std::remove_reference<char&&>::type&) [223]
-----------------------------------------------
                0.00    0.00       1/1           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [78]
[224]    0.0    0.00    0.00       1         std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*) [224]
                0.00    0.00       1/1           std::iterator_traits<char const*>::iterator_category std::__iterator_category<char const*>(char const* const&) [221]
                0.00    0.00       1/1           std::iterator_traits<char const*>::difference_type std::__distance<char const*>(char const*, char const*, std::random_access_iterator_tag) [212]
-----------------------------------------------
                0.00    0.00       1/1           std::pointer_traits<std::__detail::_Hash_node<std::pair<char const, bool>, false>*>::pointer_to(std::__detail::_Hash_node<std::pair<char const, bool>, false>&) [182]
[225]    0.0    0.00    0.00       1         std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::addressof<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>&) [225]
                0.00    0.00       1/1           std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__addressof<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>&) [214]
-----------------------------------------------
                0.00    0.00       1/1           std::pointer_traits<std::__detail::_Hash_node_base**>::pointer_to(std::__detail::_Hash_node_base*&) [183]
[226]    0.0    0.00    0.00       1         std::__detail::_Hash_node_base** std::addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&) [226]
                0.00    0.00       1/1           std::__detail::_Hash_node_base** std::__addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&) [215]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2022 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

  [17] getNodeHeight(ParseTree*) [158] std::__detail::_Prime_rehash_policy::_M_state() const [43] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long)
   [2] infixToPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [130] std::__detail::_Hashtable_ebo_helper<1, std::hash<char>, true>::_M_cget() const [3] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
  [10] createParseTree(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [159] std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocator() [66] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
   [5] inOrderTraversal(ParseTree*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [160] std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::~allocator() [68] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string()
   [4] parseTreeToInfix[abi:cxx11](ParseTree*) [131] std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > const&) [73] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
  [69] getNodeTruthValue(ParseTree*, std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >*) [132] std::allocator<std::__detail::_Hash_node_base*>::~allocator() [60] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
   [9] prefixToParseTree(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [161] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [8] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char)
  [16] getBinaryTreeHeight(ParseTree*) [162] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::~_Scoped_node() [195] std::__detail::_Hash_node<std::pair<char const, bool>, false>::_Hash_node()
  [72] printBinaryParseTree(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, ParseTree*, bool) [163] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [117] std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  [70] evaluateTreeTruthValue(ParseTree*) [164] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned long) [196] std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_Hash_code_base()
 [141] __static_initialization_and_destruction_0(int, int) [133] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [136] std::__detail::_Hash_node_base::_Hash_node_base()
 [142] __static_initialization_and_destruction_0(int, int) [134] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets() [197] std::__detail::_Hashtable_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable_base()
 [143] __static_initialization_and_destruction_0(int, int) [165] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned long) [198] std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&)
 [144] __static_initialization_and_destruction_0(int, int) [166] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<char const, bool>, false>*) [100] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_node_allocator()
  [67] Stack::printStack()   [167] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::end() [199] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  [42] Stack::resizeArray()  [168] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(char const&) [200] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_allocate_buckets(unsigned long)
  [34] Stack::pop()          [169] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [201] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  [23] Stack::push(char)     [170] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) [202] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long)
 [145] Stack::Stack()        [171] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable() [203] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
 [146] Stack::~Stack()       [172] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [204] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::_Hashtable_alloc()
  [33] ParseTree::getLeftNode(ParseTree*) [173] std::_Head_base<0ul, char&&, false>::_M_head(std::_Head_base<0ul, char&&, false>&) [205] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::~_Hashtable_alloc()
  [53] ParseTree::setLeftNode(ParseTree*) [174] std::_Head_base<0ul, char&&, false>::_Head_base<char>(char&&) [118] std::__detail::_Node_iterator_base<std::pair<char const, bool>, false>::_Node_iterator_base(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  [29] ParseTree::getRightNode(ParseTree*) [175] std::_Tuple_impl<0ul, char&&>::_M_head(std::_Tuple_impl<0ul, char&&>&) [206] std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float)
  [41] ParseTree::setRightNode(ParseTree*) [176] std::_Tuple_impl<0ul, char&&>::_Tuple_impl<char>(char&&) [119] std::__detail::_Hash_node_value_base<std::pair<char const, bool> >::_M_valptr()
  [50] ParseTree::getValue() [177] std::_Tuple_impl<0ul, char&&>::_Tuple_impl(std::_Tuple_impl<0ul, char&&>&&) [101] std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::_M_get()
  [40] ParseTree::ParseTree(char) [64] char* std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m<char const*, char*>(char const*, char const*, char*) [207] std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::_Hashtable_ebo_helper()
  [20] ParseTree::~ParseTree() [51] std::char_traits<char>::copy(char*, char const*, unsigned long) [208] std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >, true>::~_Hashtable_ebo_helper()
 [147] __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::deallocate(std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned long) [21] std::char_traits<char>::assign(char&, char const&) [209] std::__detail::_Hashtable_ebo_helper<0, std::equal_to<char>, true>::_Hashtable_ebo_helper()
 [148] __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::allocate(unsigned long, void const*) [178] std::char_traits<char>::length(char const*) [210] std::__detail::_Hashtable_ebo_helper<1, std::hash<char>, true>::_Hashtable_ebo_helper()
 [149] __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::new_allocator() [179] std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::end() [85] std::__detail::_Map_base<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char&&)
 [150] __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::deallocate(std::__detail::_Hash_node_base**, unsigned long) [71] std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::find(char const&) [211] std::__detail::operator==(std::__detail::_Node_iterator_base<std::pair<char const, bool>, false> const&, std::__detail::_Node_iterator_base<std::pair<char const, bool>, false> const&)
 [151] __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) [180] std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::unordered_map() [47] std::__cmp_cat::__unspec::__unspec(std::__cmp_cat::__unspec*)
 [120] __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::new_allocator() [181] std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::~unordered_map() [212] std::iterator_traits<char const*>::difference_type std::__distance<char const*>(char const*, char const*, std::random_access_iterator_tag)
  [97] __gnu_cxx::new_allocator<char>::deallocate(char*, unsigned long) [84] std::unordered_map<char, bool, std::hash<char>, std::equal_to<char>, std::allocator<std::pair<char const, bool> > >::operator[](char&&) [137] std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag)
  [54] __gnu_cxx::new_allocator<char>::allocate(unsigned long, void const*) [24] std::pointer_traits<char const*>::pointer_to(char const&) [213] void std::destroy_at<std::pair<char const, bool> >(std::pair<char const, bool>*)
 [121] __gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy(std::allocator<char> const&) [182] std::pointer_traits<std::__detail::_Hash_node<std::pair<char const, bool>, false>*>::pointer_to(std::__detail::_Hash_node<std::pair<char const, bool>, false>&) [44] char const* std::__addressof<char const>(char const&)
 [112] __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_ptr() [183] std::pointer_traits<std::__detail::_Hash_node_base**>::pointer_to(std::__detail::_Hash_node_base*&) [214] std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__addressof<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>&)
 [113] __gnu_cxx::__aligned_buffer<std::pair<char const, bool> >::_M_addr() [102] std::pointer_traits<char*>::pointer_to(char&) [215] std::__detail::_Hash_node_base** std::__addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&)
 [152] bool __gnu_cxx::__is_null_pointer<char const>(char const*) [184] std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::__detail::_Hash_node<std::pair<char const, bool>, false>*, unsigned long) [104] char* std::__addressof<char>(char&)
 [122] bool __gnu_cxx::__is_null_pointer<char>(char*) [185] void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::destroy<std::pair<char const, bool> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*) [216] char& std::__get_helper<0ul, char&&>(std::_Tuple_impl<0ul, char&&>&)
  [46] __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__normal_iterator(char* const&) [186] std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, unsigned long) [65] char const* std::__niter_base<char const*>(char const*)
  [37] __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator--() [187] void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> > >::construct<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >&, std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&) [217] std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::__to_address<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>*)
  [30] __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++(int) [188] std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate(std::allocator<std::__detail::_Hash_node_base*>&, std::__detail::_Hash_node_base**, unsigned long) [218] std::__detail::_Hash_node_base** std::__to_address<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base**)
  [25] __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++() [189] std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) [219] decltype (::new ((void*)(0)) std::pair<char const, bool>((declval<std::piecewise_construct_t const&>)(), (declval<std::tuple<char&&> >)(), (declval<std::tuple<> >)())) std::construct_at<std::pair<char const, bool>, std::piecewise_construct_t const&, std::tuple<char&&>, std::tuple<> >(std::pair<char const, bool>*, std::piecewise_construct_t const&, std::tuple<char&&>&&, std::tuple<>&&)
  [15] bool __gnu_cxx::operator==<char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [98] std::allocator_traits<std::allocator<char> >::deallocate(std::allocator<char>&, char*, unsigned long) [59] char* std::__copy_move_a<false, char const*, char*>(char const*, char const*, char*)
  [19] decltype (std::__detail::__synth3way((declval<char*&>)(), (declval<char*&>)())) __gnu_cxx::operator<=><char*, char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [135] std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction(std::allocator<char> const&) [220] std::tuple<char&&> std::forward_as_tuple<char>(char&&)
 [153] __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<char const, bool>, false> >::_M_max_size() const [56] std::allocator_traits<std::allocator<char> >::allocate(std::allocator<char>&, unsigned long) [58] std::iterator_traits<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
 [154] __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::_M_max_size() const [96] std::allocator_traits<std::allocator<char> >::max_size(std::allocator<char> const&) [221] std::iterator_traits<char const*>::iterator_category std::__iterator_category<char const*>(char const* const&)
  [55] __gnu_cxx::new_allocator<char>::_M_max_size() const [190] std::pair<char const, bool>::pair<char&&, 0ul>(std::tuple<char&&>&, std::tuple<>&, std::_Index_tuple<0ul>, std::_Index_tuple<>) [138] std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&)
  [28] __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const [191] std::pair<char const, bool>::pair<char&&>(std::piecewise_construct_t, std::tuple<char&&>, std::tuple<>) [92] std::is_constant_evaluated()
  [26] __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const [192] std::tuple<char&&>::tuple(std::tuple<char&&>&&) [222] std::tuple_element<0ul, std::tuple<char&&> >::type& std::get<0ul, char&&>(std::tuple<char&&>&)
 [123] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned long, char const&, unsigned long) const [193] std::tuple<char&&>::tuple<char, true, true>(char&&) [49] long long const& std::max<long long>(long long const&, long long const&)
 [114] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(unsigned long) const [81] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned long) [45] char* std::copy<char const*, char*>(char const*, char const*, char*)
 [124] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, char const&, unsigned long) const [80] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [107] std::remove_reference<std::allocator<char>&>::type&& std::move<std::allocator<char>&>(std::allocator<char>&)
 [125] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_uses_single_bucket(std::__detail::_Hash_node_base**) const [99] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_capacity(unsigned long) [36] std::remove_reference<char&>::type&& std::move<char&>(char&)
 [126] std::_Hashtable<char, std::pair<char const, bool>, std::allocator<std::pair<char const, bool> >, std::__detail::_Select1st, std::equal_to<char>, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const [106] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char>&&) [22] std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<char> >, std::is_move_constructible<char>, std::is_move_assignable<char> >::value, void>::type std::swap<char>(char&, char&)
 [127] std::hash<char>::operator()(char) const [194] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char> const&) [223] char&& std::forward<char&&>(std::remove_reference<char&&>::type&)
  [12] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const [103] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider() [108] std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&)
  [18] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() const [78] void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [109] std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&)
  [93] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() const [74] void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*) [110] std::tuple<char&&>&& std::forward<std::tuple<char&&> >(std::remove_reference<std::tuple<char&&> >::type&)
  [39] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size() const [75] void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [111] char&& std::forward<char>(std::remove_reference<char>::type&)
  [61] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::length() const [63] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() [6] void std::reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
  [27] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [13] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned long) [224] std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*)
  [11] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const [79] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*) [139] std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*)
  [95] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::max_size() const [77] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*) [7] void std::__reverse<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::random_access_iterator_tag)
 [155] std::__detail::_Hash_node<std::pair<char const, bool>, false>::_M_next() const [76] void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type) [31] char const* std::addressof<char const>(char const&)
  [32] auto std::__detail::_Synth3way::operator()<char*, char*>(char* const&, char* const&) const [94] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() [225] std::__detail::_Hash_node<std::pair<char const, bool>, false>* std::addressof<std::__detail::_Hash_node<std::pair<char const, bool>, false> >(std::__detail::_Hash_node<std::pair<char const, bool>, false>&)
 [156] std::__detail::_Node_iterator<std::pair<char const, bool>, false, false>::operator->() const [82] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::end() [226] std::__detail::_Hash_node_base** std::addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&)
 [128] std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(char const&) const [83] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::begin() [105] char* std::addressof<char>(char&)
 [157] std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_node_code_cache<false>&, unsigned long) const [62] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data(char*) [14] void std::iter_swap<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
 [115] std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(unsigned long, unsigned long) const [52] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned long) [38] std::operator<(std::strong_ordering, std::__cmp_cat::__unspec)
 [129] std::__detail::_Hash_code_base<char, std::pair<char const, bool>, std::__detail::_Select1st, std::hash<char>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash() const [57] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long) [140] operator new(unsigned long, void*)
 [116] std::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const [35] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_length(unsigned long) [48] _init
